// HOW TO:
// ------------------------------
// Serial input = 2 -> Steps through gait sequence once and stops at the end.
// Serial input = 1 -> Steps through gait sequence in a loop.
// Serial input = 0 -> Stops infinite loop at the node where it is at that moment

//Gait template
#include <Wire.h>
#include <Adafruit_PWMServoDriver.h>

Adafruit_PWMServoDriver pca9685 = Adafruit_PWMServoDriver();

#define SERVO_FREQ 300
#define SER0 0 //Hip 1
#define SER1 1 //Knee 1
#define SER2 2 //Hip 2
#define SER3 3 //Knee 2
#define SER4 4 //Hip 3
#define SER5 5 //Knee 3
#define SER6 6 //Hip 4
#define SER7 7 //Knee 4

// Insert servo angles here:
// For 3D gaits, these angles are obtained from linearisation.py
// For 2D gaits, these angles are obtained from 2D_trajectory_reader.py
float SS_servo0[] = {-3.76740874e-01, -3.66244838e-01, -3.75925844e-01, -3.93467292e-01, -4.19818363e-01, -4.47017925e-01, -4.64468779e-01, -4.81919634e-01, -4.99370489e-01, -5.04459282e-01, -5.07237966e-01, -5.07713085e-01, -5.03397630e-01, -4.97257257e-01, -4.88624899e-01, -4.74034484e-01, -4.58037841e-01, -4.36444907e-01, -4.08739221e-01, -3.81033535e-01, -3.53327849e-01, -3.25622163e-01, -2.97916477e-01, -2.70210791e-01, -2.40137661e-01, -2.05428059e-01, -1.70718458e-01, -1.36008856e-01, -1.01299255e-01, -6.69241129e-02, -3.34139916e-02,  2.85156485e-04,  1.37011520e-02,  1.38868735e-02,  1.51687666e-02,  1.13902575e-02,  1.07026327e-02,  1.51291345e-02,  1.95556363e-02,  2.28129706e-02,  2.18594130e-02,  2.09058554e-02,  1.99522978e-02,  1.89987402e-02,  1.80451826e-02,  1.70916250e-02,  1.61380675e-02,  1.51845099e-02,  1.42309523e-02,  8.73982154e-03,  2.70417901e-03, -3.33146352e-03, -9.36710605e-03, -1.54027486e-02, -2.14383911e-02, -2.73231140e-02, -3.14082587e-02, -3.49188802e-02, -3.78348913e-02, -3.90401607e-02, -3.73376461e-02, -4.12753988e-02, -4.65640561e-02, -5.18527135e-02, -5.71413709e-02, -6.27300252e-02, -7.58769120e-02, -8.90237988e-02, -1.02170686e-01, -1.17519307e-01, -1.34303144e-01, -1.45367655e-01, -1.48560839e-01, -1.49983183e-01, -1.53324969e-01, -1.57624441e-01, -1.66089158e-01, -1.73126104e-01, -1.78210908e-01, -1.83685674e-01, -1.87621003e-01, -1.93436709e-01, -1.97633404e-01, -2.03392004e-01, -2.10510826e-01, -2.17262065e-01, -2.17061243e-01, -2.20645029e-01, -2.25705889e-01, -2.30766749e-01, -2.33288696e-01, -2.34562340e-01, -2.35835984e-01, -2.37109629e-01, -2.38383273e-01, -2.39656917e-01, -2.40930561e-01, -2.42204205e-01, -2.43477849e-01, -2.44804202e-01, -2.50273152e-01, -2.55742103e-01, -2.61211053e-01, -2.66680003e-01, -2.72148954e-01, -2.77617904e-01, -2.83146319e-01, -2.91722043e-01, -2.90394717e-01, -2.83111952e-01, -2.82250894e-01, -2.81389835e-01, -2.80528777e-01, -2.78558023e-01, -2.76243109e-01, -2.73928196e-01, -2.71613283e-01, -2.69298369e-01, -2.66983456e-01, -2.64668542e-01, -2.62353629e-01, -2.60038716e-01, -2.57723802e-01, -2.58196354e-01, -2.61484451e-01, -2.64772548e-01, -2.68060646e-01, -2.71348743e-01, -2.74636840e-01, -2.77924937e-01, -2.81409675e-01, -2.84946145e-01, -2.86100687e-01, -2.85757753e-01, -2.87037121e-01, -2.88666516e-01, -2.90295912e-01, -2.91925307e-01, -2.93554703e-01, -3.00006324e-01, -3.09602311e-01, -3.19198298e-01, -3.28794286e-01, -3.41626734e-01, -3.53614636e-01, -3.63891062e-01, -3.74206878e-01};
float SS_servo1[] = {0.36404218, 0.32183767, 0.31893587, 0.32968896, 0.35264376, 0.37077482, 0.36493618, 0.35909753, 0.35325888, 0.31562088, 0.27204051, 0.22677418, 0.18011918, 0.14054588, 0.11117557, 0.07513746, 0.03452721, 0.01417614, 0.0159539 , 0.01773165, 0.0195094 , 0.02128715, 0.0230649 , 0.02484266, 0.03533509, 0.0628946 , 0.0904541 , 0.11801361, 0.14557312, 0.17875851, 0.19444629, 0.14803537, 0.11468189, 0.10606004, 0.09944235, 0.10232918, 0.09765119, 0.0858011 , 0.07395102, 0.06435134, 0.06285673, 0.06136212, 0.05986751, 0.0583729 , 0.05687829, 0.05538368, 0.05388908, 0.05239447, 0.05089986, 0.05698338, 0.06397628, 0.07096917, 0.07796207, 0.08495497, 0.09194787, 0.09821873, 0.10024757, 0.10159171, 0.09965422, 0.09370243, 0.08171429, 0.07898243, 0.07846756, 0.07795268, 0.07743781, 0.07730379, 0.08676514, 0.09622649, 0.10568784, 0.11511019, 0.12020592, 0.12115089, 0.11830868, 0.10710703, 0.09558313, 0.08400589, 0.0726665 , 0.07053256, 0.07228084, 0.07603059, 0.07761121, 0.07996102, 0.08153288, 0.0863643 , 0.09370443, 0.0992115 , 0.09052836, 0.08984138, 0.09333283, 0.09682428, 0.09637563, 0.09398974, 0.09160386, 0.08921798, 0.0868321 , 0.08444621, 0.08206033, 0.07967445, 0.07728857, 0.07502275, 0.08219332, 0.0893639 , 0.09653448, 0.10370505, 0.11087563, 0.1180462 , 0.12534145, 0.13713755, 0.12957113, 0.11167655, 0.10890446, 0.10613238, 0.10336029, 0.09942452, 0.09512785, 0.09083118, 0.0865345 , 0.08223783, 0.07794116, 0.07364448, 0.06934781, 0.06505114, 0.06075446, 0.06216929, 0.06935314, 0.07653699, 0.08372085, 0.0909047 , 0.09808856, 0.10527241, 0.11260162, 0.11963417, 0.12253276, 0.12222451, 0.12635611, 0.13144566, 0.13653521, 0.14162476, 0.14671431, 0.16192358, 0.18373149, 0.2055394 , 0.22734731, 0.25949946, 0.29116202, 0.32137274, 0.35344212};
float SS_servo2[] = { 0.22978811,  0.22112832,  0.20627651,  0.19287217,  0.18194579,  0.17044892,  0.15937852,  0.14830812,  0.13723771,  0.12420943,  0.11081529,  0.10077986,  0.08952352,  0.07713147,  0.07187192,  0.07084377,  0.06639727,  0.06288348,  0.06038847,  0.05789346,  0.05539845,  0.05290344,  0.05040843,  0.04791342,  0.04402493,  0.03740743,  0.03078992,  0.02417242,  0.01755492,  0.00987157, -0.00416082, -0.01577838, -0.02146744, -0.02186981, -0.0174413 , -0.00964356, -0.00636558, -0.01168298, -0.01700039, -0.02116861, -0.0211979 , -0.0212272 , -0.02125649, -0.02128578, -0.02131507, -0.02134436, -0.02137365, -0.02140294, -0.02143224, -0.02414259, -0.02717467, -0.03020675, -0.03323884, -0.03627092, -0.039303  , -0.04286024, -0.04731234, -0.05021975, -0.0521923 , -0.05653562, -0.06198781, -0.0678727 , -0.07386121, -0.07984973, -0.08583825, -0.09183428, -0.09801957, -0.10420486, -0.11039014, -0.11808978, -0.12994541, -0.14100518, -0.15814974, -0.18716557, -0.22523164, -0.26489399, -0.30939568, -0.34857152, -0.38500223, -0.41944662, -0.451463  , -0.48118852, -0.50669498, -0.52523073, -0.53680809, -0.54162023, -0.54070152, -0.52732089, -0.51171395, -0.49610702, -0.46327664, -0.42197803, -0.38067942, -0.33938081, -0.2980822 , -0.25678359, -0.21548499, -0.17418638, -0.13288777, -0.09160507, -0.05157285, -0.01154062,  0.0284916 ,  0.06852382,  0.10855605,  0.14858827,  0.18843535,  0.20564071,  0.2056104 ,  0.20386174,  0.20308353,  0.20230532,  0.20152711,  0.2013468 ,  0.20135191,  0.20135703,  0.20136214,  0.20136726,  0.20137237,  0.20137749,  0.2013826 ,  0.20138772,  0.20139283,  0.20174192,  0.20243845,  0.20313498,  0.2038315 ,  0.20452803,  0.20522456,  0.20592109,  0.20653976,  0.20690521,  0.2077939 ,  0.21019061,  0.21162309,  0.21284754,  0.21407199,  0.21529644,  0.21652089,  0.21713725,  0.2173571 ,  0.21757696,  0.21779681,  0.22118286,  0.22480002,  0.22936778,  0.23331549};
float SS_servo3[] = {0.13054772, 0.12553962, 0.12180407, 0.11649286, 0.1090943 , 0.10207146, 0.09914406, 0.09621666, 0.09328926, 0.0972044 , 0.1023982 , 0.10512158, 0.10904798, 0.11547142, 0.11188558, 0.10097937, 0.09540559, 0.0903021 , 0.0857123 , 0.08112251, 0.07653272, 0.07194292, 0.06735313, 0.06276334, 0.06242749, 0.07042269, 0.07841789, 0.0864131 , 0.0944083 , 0.10476936, 0.12874574, 0.14952931, 0.1550886 , 0.14772429, 0.13436625, 0.11376376, 0.10099765, 0.10891612, 0.11683459, 0.12230503, 0.11895861, 0.1156122 , 0.11226578, 0.10891937, 0.10557296, 0.10222654, 0.09888013, 0.09553372, 0.0921873 , 0.09264358, 0.09355619, 0.09446879, 0.0953814 , 0.096294  , 0.09720661, 0.09876791, 0.10156062, 0.10170444, 0.09787048, 0.09827983, 0.10077129, 0.10200694, 0.10294181, 0.10387668, 0.10481155, 0.10553548, 0.10094495, 0.09635442, 0.09176389, 0.08574705, 0.08090824, 0.08185183, 0.10715563, 0.15009207, 0.22630983, 0.30617123, 0.39102063, 0.47448631, 0.56343404, 0.65143116, 0.7402346 , 0.82583261, 0.90680474, 0.97026709, 1.01569473, 1.04224325, 1.05299426, 1.03785646, 1.02134204, 1.00482762, 0.95683982, 0.89337756, 0.8299153 , 0.76645304, 0.70299079, 0.63952853, 0.57606627, 0.51260401, 0.44914175, 0.38600828, 0.34871564, 0.311423  , 0.27413036, 0.23683772, 0.19954507, 0.16225243, 0.12548318, 0.11659229, 0.11156011, 0.1116976 , 0.11211678, 0.11253595, 0.11295513, 0.11337823, 0.11380254, 0.11422685, 0.11465117, 0.11507548, 0.11549979, 0.11592411, 0.11634842, 0.11677273, 0.11719705, 0.11705178, 0.11633121, 0.11561064, 0.11489006, 0.11416949, 0.11344891, 0.11272834, 0.11191311, 0.11119408, 0.11000473, 0.10549593, 0.10420094, 0.10359935, 0.10299776, 0.10239617, 0.10179459, 0.10307342, 0.10557839, 0.10808337, 0.11058834, 0.11075352, 0.11174691, 0.11289514, 0.11725446};
float SS_servo4[] = { 0.25916795,  0.24635026,  0.22820441,  0.21152341,  0.19884322,  0.18736984,  0.17616609,  0.16496235,  0.15375861,  0.1421652 ,  0.13049897,  0.12004105,  0.11189675,  0.10411506,  0.09521663,  0.08190082,  0.06777097,  0.05791149,  0.05271649,  0.04752148,  0.04232647,  0.03713147,  0.03193646,  0.02674145,  0.02377762,  0.02518339,  0.02658916,  0.02799492,  0.02940069,  0.03111626,  0.03528597,  0.03994028,  0.04173801,  0.04104531,  0.03885621,  0.02991936,  0.01255036,  0.00916211,  0.00577387,  0.00227156, -0.00164154, -0.00555465, -0.00946775, -0.01338085, -0.01729395, -0.02120706, -0.02512016, -0.02903326, -0.03294636, -0.03209495, -0.0306718 , -0.02924865, -0.0278255 , -0.02640234, -0.02497919, -0.02389358, -0.02442091, -0.02589805, -0.03207989, -0.03881756, -0.04550971, -0.04971864, -0.05333281, -0.05694698, -0.06056115, -0.06352487, -0.05010075, -0.03667664, -0.02325253, -0.0038236 ,  0.0198892 ,  0.03971374,  0.02292646,  0.01274861,  0.01475356,  0.01781573,  0.02252641,  0.019472  ,  0.00453741, -0.02109436, -0.04236065, -0.06379897, -0.08505239, -0.10844861, -0.13558341, -0.16789585, -0.20418027, -0.23434472, -0.26313218, -0.29191963, -0.30152886, -0.30170878, -0.30188869, -0.30206861, -0.30224852, -0.30242844, -0.30260835, -0.30278827, -0.30296819, -0.30285244, -0.27949972, -0.25614699, -0.23279427, -0.20944154, -0.18608882, -0.16273609, -0.13930969, -0.10834686, -0.06942067, -0.02631695,  0.02808351,  0.08248396,  0.13688441,  0.17569174,  0.20966303,  0.24363432,  0.27760561,  0.3115769 ,  0.34554819,  0.37951948,  0.41349077,  0.44746206,  0.48143335,  0.50091939,  0.50577424,  0.5106291 ,  0.51548395,  0.52033881,  0.52519367,  0.53004852,  0.53420163,  0.52249138,  0.50175887,  0.47978484,  0.45732654,  0.43476375,  0.41220097,  0.38963818,  0.3670754 ,  0.34446671,  0.3218281 ,  0.29918948,  0.27655087,  0.25509237,  0.24389212,  0.24586142,  0.25280547};
float SS_servo5[] = {-0.09682253, -0.0929657 , -0.08944096, -0.08753532, -0.09083741, -0.09742567, -0.09970261, -0.10197955, -0.10425649, -0.10303848, -0.10116738, -0.09743406, -0.09969231, -0.10252087, -0.09860297, -0.0844761 , -0.07032858, -0.06248569, -0.06152925, -0.06057281, -0.05961637, -0.05865993, -0.0577035 , -0.05674706, -0.05890962, -0.06718051, -0.07545141, -0.0837223 , -0.0919932 , -0.10069629, -0.11370451, -0.12601099, -0.13563268, -0.14237938, -0.14227973, -0.12889433, -0.09967025, -0.09558847, -0.09150668, -0.08733748, -0.08285344, -0.07836939, -0.07388534, -0.06940129, -0.06491724, -0.0604332 , -0.05594915, -0.0514651 , -0.04698105, -0.0538344 , -0.06204823, -0.07026207, -0.07847591, -0.08668975, -0.09490359, -0.10283634, -0.10804286, -0.11085478, -0.10618385, -0.10096113, -0.096031  , -0.09821774, -0.10210905, -0.10600035, -0.10989166, -0.11536075, -0.1605813 , -0.20580185, -0.2510224 , -0.31351185, -0.39287349, -0.45374071, -0.42588979, -0.41950941, -0.44337527, -0.47166649, -0.51240642, -0.52374077, -0.50140179, -0.45505729, -0.41700196, -0.38183925, -0.34451657, -0.30266773, -0.25338813, -0.19472779, -0.12850971, -0.0793968 , -0.03359006,  0.01221667,  0.02700758,  0.02654899,  0.0260904 ,  0.02563181,  0.02517322,  0.02471463,  0.02425604,  0.02379745,  0.02333886,  0.02268383,  0.0065901 , -0.00950363, -0.02559736, -0.04169109, -0.05778482, -0.07387855, -0.08986636, -0.10592551, -0.1384302 , -0.17270869, -0.22630486, -0.27990104, -0.33349721, -0.34594429, -0.34562943, -0.34531457, -0.34499971, -0.34468484, -0.34436998, -0.34405512, -0.34374026, -0.3434254 , -0.34311054, -0.32926737, -0.30175959, -0.27425182, -0.24674405, -0.21923627, -0.1917285 , -0.16422073, -0.13720463, -0.1092032 , -0.06730959, -0.02309809, -0.01746634, -0.02015856, -0.02285077, -0.02554298, -0.0282352 , -0.05116961, -0.0873031 , -0.12343658, -0.15957006, -0.12463754, -0.09415319, -0.08800177, -0.08997088};
float SS_servo6[] = {0.26525787, 0.25705026, 0.24254256, 0.22588421, 0.20585446, 0.18334103, 0.16796805, 0.15259506, 0.13722208, 0.12832262, 0.12063288, 0.11548418, 0.10583004, 0.09610445, 0.08878495, 0.08489438, 0.08160656, 0.07706115, 0.07114207, 0.065223  , 0.05930392, 0.05338485, 0.04746577, 0.0415467 , 0.0368233 , 0.03444152, 0.03205975, 0.02967798, 0.02729621, 0.02547727, 0.02429697, 0.02070214, 0.01823936, 0.01780026, 0.02203352, 0.04056143, 0.07480858, 0.11733423, 0.15985989, 0.1990259 , 0.22609176, 0.25315761, 0.28022347, 0.30728932, 0.33435518, 0.36142103, 0.38848689, 0.41555274, 0.4426186 , 0.45101542, 0.45717193, 0.46332845, 0.46948497, 0.47564149, 0.48179801, 0.48700293, 0.48550862, 0.4836525 , 0.48157195, 0.47599973, 0.47135623, 0.45919134, 0.44522499, 0.43125864, 0.41729229, 0.40303208, 0.38136828, 0.35970448, 0.33804068, 0.31732634, 0.29864775, 0.29440949, 0.31011894, 0.33992966, 0.34881177, 0.3515405 , 0.33547734, 0.33480936, 0.33391996, 0.32754102, 0.32055589, 0.3126472 , 0.30702397, 0.30353864, 0.30148965, 0.29836757, 0.28784049, 0.27853997, 0.27306443, 0.2675889 , 0.26247407, 0.25753659, 0.25259911, 0.24766163, 0.24272415, 0.23778667, 0.23284919, 0.22791171, 0.22297423, 0.21810923, 0.21894146, 0.2197737 , 0.22060593, 0.22143816, 0.22227039, 0.22310262, 0.22398624, 0.22351681, 0.222906  , 0.21654048, 0.21450383, 0.21246718, 0.21043052, 0.20954588, 0.20901852, 0.20849116, 0.20796381, 0.20743645, 0.20690909, 0.20638173, 0.20585437, 0.20532701, 0.20479965, 0.20547766, 0.20737318, 0.20926869, 0.21116421, 0.21305972, 0.21495524, 0.21685075, 0.21851562, 0.21858244, 0.21778769, 0.21552406, 0.21554006, 0.21604791, 0.21655576, 0.21706361, 0.21757146, 0.22160571, 0.22793935, 0.234273  , 0.24060665, 0.248219  , 0.25302901, 0.25622376, 0.26067975};
float SS_servo7[] = {-0.11873962, -0.12412256, -0.12788617, -0.12602815, -0.11454461, -0.09883173, -0.09277278, -0.08671382, -0.08065487, -0.08495181, -0.09118396, -0.09820885, -0.09745182, -0.09638344, -0.0957051 , -0.10060545, -0.10831982, -0.11121502, -0.10884633, -0.10647763, -0.10410894, -0.10174024, -0.09937154, -0.09700285, -0.0956621 , -0.09633451, -0.09700691, -0.09767932, -0.09835173, -0.09995174, -0.10214856, -0.09774345, -0.09875654, -0.1060621 , -0.11904353, -0.16162766, -0.23767125, -0.32775801, -0.41784478, -0.48992343, -0.49714378, -0.50436413, -0.51158448, -0.51880483, -0.52602518, -0.53324553, -0.54046588, -0.54768623, -0.55490658, -0.50975797, -0.45832504, -0.40689211, -0.35545919, -0.30402626, -0.25259334, -0.20116522, -0.1576987 , -0.12435673, -0.10974929, -0.10771547, -0.12414406, -0.12790676, -0.12863586, -0.12936495, -0.13009404, -0.13056771, -0.12460612, -0.11864454, -0.11268295, -0.12022066, -0.1310798 , -0.14721133, -0.18790886, -0.26859238, -0.25325893, -0.2180961 , -0.13463427, -0.14392452, -0.15093566, -0.14576656, -0.13836756, -0.13216439, -0.1279878 , -0.12794003, -0.1309558 , -0.13289911, -0.12026467, -0.10957341, -0.10527085, -0.1009683 , -0.09623573, -0.09129174, -0.08634774, -0.08140375, -0.07645976, -0.07151576, -0.06657177, -0.06162777, -0.05668378, -0.05186978, -0.05727211, -0.06267445, -0.06807678, -0.07347912, -0.07888145, -0.08428379, -0.08978333, -0.09407098, -0.09774447, -0.08827289, -0.0852045 , -0.08213612, -0.07906773, -0.07727649, -0.07588133, -0.07448618, -0.07309103, -0.07169587, -0.07030072, -0.06890556, -0.06751041, -0.06611526, -0.0647201 , -0.06562003, -0.06883817, -0.07205631, -0.07527445, -0.07849259, -0.08171073, -0.08492887, -0.08792744, -0.08809066, -0.08583851, -0.08076919, -0.0792638 , -0.07852737, -0.07779093, -0.0770545 , -0.07631807, -0.08206173, -0.09203077, -0.10199981, -0.11196885, -0.12036542, -0.12194304, -0.1182787 , -0.11526458};

int node=0;
int first=0;
int input=0;
int end_time=0;
int time_step=120000; //was 120000
int steps = sizeof(SS_servo0)/sizeof(SS_servo0[0]);
int one_print = 0;

// -------------------Joint configurations-------------------
int servo0=0;
int servo0_deg=0;
int servo1=0;
int servo1_deg=0;
int servo2=0;
int servo2_deg=0;
int servo3=0;
int servo3_deg=0;
int servo4=0;
int servo4_deg=0;
int servo5=0;
int servo5_deg=0;
int servo6=0;
int servo6_deg=0;
int servo7=0;
int servo7_deg=0;

void setup() {
  Serial.begin(115200);
  pca9685.begin();

  pca9685.setOscillatorFrequency(27000000); //Value between 24MHz and 27MHz, tuned for this setup
  pca9685.setPWMFreq(SERVO_FREQ);
  delay (1000);

  servo0_deg=SS_servo0[0]/3.14159265*180;
  servo0=map(servo0_deg,-38,90,2200,1030);
  servo1_deg=SS_servo1[0]/3.14159265*180;
  servo1=map(servo1_deg,-90,90,2600,950);
  servo2_deg=SS_servo2[0]/3.14159265*180;
  servo2=map(servo2_deg,-38,90,1510,2730);
  servo3_deg=SS_servo3[0]/3.14159265*180;
  servo3=map(servo3_deg,-90,90,1100,2700);
  servo4_deg=SS_servo4[0]/3.14159265*180;
  servo4=map(servo4_deg,-90,38,2700,1500);
  servo5_deg=SS_servo5[0]/3.14159265*180;
  servo5=map(servo5_deg,-90,90,2600,930);
  servo6_deg=SS_servo6[0]/3.14159265*180;
  servo6=map(servo6_deg,-90,38,850,2250);
  servo7_deg=SS_servo7[0]/3.14159265*180;
  servo7=map(servo7_deg,-90,90,920,2620);
        
  pca9685.setPWM(SER0,0,servo0);
  pca9685.setPWM(SER1,0,servo1);
  pca9685.setPWM(SER2,0,servo2);
  pca9685.setPWM(SER3,0,servo3);
  pca9685.setPWM(SER4,0,servo4);
  pca9685.setPWM(SER5,0,servo5);
  pca9685.setPWM(SER6,0,servo6);
  pca9685.setPWM(SER7,0,servo7);

  Serial.print("Node:");
  Serial.println(node);
  Serial.print("servo0 -> rads:");
  Serial.print(SS_servo0[node]);
  Serial.print("        deg:");
  Serial.print(servo0_deg);
  Serial.print("        us:");
  Serial.println(servo0);
  Serial.print("servo1 -> rads:");
  Serial.print(SS_servo1[node]);
  Serial.print("        deg:");
  Serial.print(servo1_deg);
  Serial.print("        us:");
  Serial.println(servo1);
  Serial.print("servo2 -> rads:");
  Serial.print(SS_servo2[node]);
  Serial.print("        deg:");
  Serial.print(servo2_deg);
  Serial.print("        us:");
  Serial.println(servo2);
  Serial.print("servo3 -> rads:");
  Serial.print(SS_servo3[node]);
  Serial.print("        deg:");
  Serial.print(servo3_deg);
  Serial.print("        us:");
  Serial.println(servo3);
  Serial.print("servo4 -> rads:");
  Serial.print(SS_servo4[node]);
  Serial.print("        deg:");
  Serial.print(servo4_deg);
  Serial.print("        us:");
  Serial.println(servo4);
  Serial.print("servo5 -> rads:");
  Serial.print(SS_servo5[node]);
  Serial.print("        deg:");
  Serial.print(servo5_deg);
  Serial.print("        us:");
  Serial.println(servo5);
  Serial.print("servo6 -> rads:");
  Serial.print(SS_servo6[node]);
  Serial.print("        deg:");
  Serial.print(servo6_deg);
  Serial.print("        us:");
  Serial.println(servo6);
  Serial.print("servo7 -> rads:");
  Serial.print(SS_servo7[node]);
  Serial.print("        deg:");
  Serial.print(servo7_deg);
  Serial.print("        us:");
  Serial.println(servo7);

  Serial.println("10");
  delay(1000);
  Serial.println("9");
  delay(1000);
  Serial.println("8");
  delay(1000);
  Serial.println("7");
  delay(1000);
  Serial.println("6");
  delay(1000);
  Serial.println("5");
  delay(1000);
  Serial.println("4");
  delay(1000);
  Serial.println("3");
  delay(1000);
  Serial.println("2");
  delay(1000);
  Serial.println("1");
  delay(1000);

}

void loop() 
{
  if(Serial.available()>0)
  {
    first=Serial.read();
    if(first=='2')
    {
      input=2;
      node=0;
      one_print=1;
    }
    if(first=='1')
    {
      input=1;
      node=0;
      one_print=1;
    }
    if(first=='0')
    {
      input=0;
    }
  }
  if(input==1 or input==2)
  {
      if(esp_timer_get_time()>=end_time)
      {
        servo0_deg=SS_servo0[node]/3.14159265*180;
        servo0=map(servo0_deg,-38,90,2200,1030);
        servo1_deg=SS_servo1[node]/3.14159265*180;
        servo1=map(servo1_deg,-90,90,2600,950);
        servo2_deg=SS_servo2[node]/3.14159265*180;
        servo2=map(servo2_deg,-38,90,1510,2730);
        servo3_deg=SS_servo3[node]/3.14159265*180;
        servo3=map(servo3_deg,-90,90,1100,2700);
        servo4_deg=SS_servo4[node]/3.14159265*180;
        servo4=map(servo4_deg,-90,38,2700,1500);
        servo5_deg=SS_servo5[node]/3.14159265*180;
        servo5=map(servo5_deg,-90,90,2600,930);
        servo6_deg=SS_servo6[node]/3.14159265*180;
        servo6=map(servo6_deg,-90,38,850,2250);
        servo7_deg=SS_servo7[node]/3.14159265*180;
        servo7=map(servo7_deg,-90,90,920,2620);
        
        pca9685.setPWM(SER0,0,servo0);
        pca9685.setPWM(SER1,0,servo1);
        pca9685.setPWM(SER2,0,servo2);
        pca9685.setPWM(SER3,0,servo3);
        pca9685.setPWM(SER4,0,servo4);
        pca9685.setPWM(SER5,0,servo5);
        pca9685.setPWM(SER6,0,servo6);
        pca9685.setPWM(SER7,0,servo7);
        
        node+=1;
        if(node>=steps and input==1)
        {
          Serial.print("Input:");
          Serial.println(input);
          node=0;
        }
        if(node>=steps and input==2)
        {
          Serial.print("Input:");
          Serial.println(input);
          input=0;
        }
         end_time=esp_timer_get_time()+time_step;
      }
   }

  if(input == 0)
  {        
        pca9685.setPWM(SER0,0,servo0);
        pca9685.setPWM(SER1,0,servo1);
        pca9685.setPWM(SER2,0,servo2);
        pca9685.setPWM(SER3,0,servo3);
        pca9685.setPWM(SER4,0,servo4);
        pca9685.setPWM(SER5,0,servo5);
        pca9685.setPWM(SER6,0,servo6);
        pca9685.setPWM(SER7,0,servo7);

        if(one_print==1)
        {
          Serial.print("Input:");
          Serial.println(input);
          Serial.print("Node:");
          Serial.println(node);
          Serial.print("servo0 -> rads:");
          Serial.print(SS_servo0[node]);
          Serial.print("        deg:");
          Serial.print(servo0_deg);
          Serial.print("        us:");
          Serial.println(servo0);
          Serial.print("servo1 -> rads:");
          Serial.print(SS_servo1[node]);
          Serial.print("        deg:");
          Serial.print(servo1_deg);
          Serial.print("        us:");
          Serial.println(servo1);
          Serial.print("servo2 -> rads:");
          Serial.print(SS_servo2[node]);
          Serial.print("        deg:");
          Serial.print(servo2_deg);
          Serial.print("        us:");
          Serial.println(servo2);
          Serial.print("servo3 -> rads:");
          Serial.print(SS_servo3[node]);
          Serial.print("        deg:");
          Serial.print(servo3_deg);
          Serial.print("        us:");
          Serial.println(servo3);
          Serial.print("servo4 -> rads:");
          Serial.print(SS_servo4[node]);
          Serial.print("        deg:");
          Serial.print(servo4_deg);
          Serial.print("        us:");
          Serial.println(servo4);
          Serial.print("servo5 -> rads:");
          Serial.print(SS_servo5[node]);
          Serial.print("        deg:");
          Serial.print(servo5_deg);
          Serial.print("        us:");
          Serial.println(servo5);
          Serial.print("servo6 -> rads:");
          Serial.print(SS_servo6[node]);
          Serial.print("        deg:");
          Serial.print(servo6_deg);
          Serial.print("        us:");
          Serial.println(servo6);
          Serial.print("servo7 -> rads:");
          Serial.print(SS_servo7[node]);
          Serial.print("        deg:");
          Serial.print(servo7_deg);
          Serial.print("        us:");
          Serial.println(servo7);
          one_print=0;
        }
  
  }
}
