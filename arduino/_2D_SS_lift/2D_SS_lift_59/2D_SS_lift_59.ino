// HOW TO:
// ------------------------------
// Serial input = 2 -> Steps through gait sequence once and stops at the end.
// Serial input = 1 -> Steps through gait sequence in a loop.
// Serial input = 0 -> Stops infinite loop at the node where it is at that moment

//Gait template
#include <Wire.h>
#include <Adafruit_PWMServoDriver.h>

Adafruit_PWMServoDriver pca9685 = Adafruit_PWMServoDriver();

#define SERVO_FREQ 300
#define SER0 0 //Hip 1
#define SER1 1 //Knee 1
#define SER2 2 //Hip 2
#define SER3 3 //Knee 2
#define SER4 4 //Hip 3
#define SER5 5 //Knee 3
#define SER6 6 //Hip 4
#define SER7 7 //Knee 4

// Insert servo angles here:
// For 3D gaits, these angles are obtained from linearisation.py
// For 2D gaits, these angles are obtained from 2D_trajectory_reader.py
float SS_servo0[] = {-0.24528684, -0.22267432, -0.20374664, -0.18662729, -0.17398091, -0.16576346, -0.15754602, -0.14932857, -0.14111113, -0.13289368, -0.12467624, -0.11880082, -0.12398851, -0.12917621, -0.1343639 , -0.13955159, -0.14473928, -0.1534081 , -0.1565027 , -0.151472  , -0.13615117, -0.11203073, -0.08426831, -0.05489879, -0.02627093, -0.00545854, -0.00172943, -0.00380057, -0.00825382, -0.0108413 , -0.01602449, -0.01875845, -0.0163916 , -0.01337537, -0.01614532, -0.01891528, -0.02168523, -0.02445519, -0.03039079, -0.03990323, -0.04941567, -0.05901164, -0.07045478, -0.08374338, -0.09868843, -0.11326656, -0.12753828, -0.14233968, -0.14440684, -0.13759806, -0.13103076, -0.128574  , -0.13010554, -0.13412388, -0.14067716, -0.14753924, -0.15161395, -0.15750507, -0.16316505, -0.16451927, -0.16554815, -0.16741985, -0.16927489, -0.17089059, -0.17250629, -0.17412199, -0.17573769, -0.17735339, -0.17896909, -0.18058479, -0.18336195, -0.19160404, -0.19984613, -0.20808822, -0.21633031, -0.2245724 , -0.23478417, -0.24019015, -0.23980712, -0.23367049, -0.22496179, -0.21549554, -0.21319127, -0.21473753, -0.21653625, -0.21808143, -0.21962661, -0.22079485, -0.22166597, -0.22298877, -0.22892447, -0.24018254};
float SS_servo1[] = {0.17575763, 0.11724699, 0.06816423, 0.02478064, 0.01573144, 0.04067874, 0.06562605, 0.09057335, 0.11552066, 0.14046797, 0.16541527, 0.19663884, 0.2575098 , 0.31838077, 0.37925174, 0.44012271, 0.50099367, 0.55197113, 0.57441433, 0.56368215, 0.51311321, 0.43045029, 0.33654347, 0.24529415, 0.17022973, 0.12194835, 0.10463916, 0.0980484 , 0.10003105, 0.09929166, 0.10310942, 0.10153181, 0.09026936, 0.07761512, 0.0751139 , 0.07261267, 0.07011144, 0.06761022, 0.07068471, 0.08005918, 0.08943366, 0.09913623, 0.11057833, 0.12489337, 0.13616821, 0.14609013, 0.15341801, 0.15545834, 0.14880695, 0.12456882, 0.10204283, 0.08828494, 0.08277692, 0.08215846, 0.08633812, 0.09194334, 0.09434312, 0.0989004 , 0.10226906, 0.09742247, 0.09300059, 0.09074993, 0.08853382, 0.08681377, 0.08509373, 0.08337368, 0.08165363, 0.07993359, 0.07821354, 0.07649349, 0.07751006, 0.0914029 , 0.10529575, 0.11918859, 0.13308144, 0.14697429, 0.16367478, 0.16953855, 0.16496162, 0.15024668, 0.13143087, 0.11185101, 0.1063844 , 0.10768423, 0.11105538, 0.11429537, 0.11753536, 0.1210745 , 0.12484945, 0.12947734, 0.14085765, 0.16693975};
float SS_servo2[] = { 0.104584  ,  0.11320915,  0.11141608,  0.10679255,  0.10240074,  0.09823838,  0.09407602,  0.08991366,  0.0857513 ,  0.08158894,  0.07742659,  0.07190185,  0.05994157,  0.0479813 ,  0.03602103,  0.02406076,  0.01210049,  0.00191522, -0.00205257, -0.00440506, -0.00742854, -0.00935551, -0.01540306, -0.02629491, -0.03945316, -0.04936044, -0.05521584, -0.05797612, -0.05715064, -0.05454098, -0.04984625, -0.04867086, -0.05227438, -0.05659562, -0.06060948, -0.06462334, -0.0686372 , -0.07265106, -0.07669638, -0.08077726, -0.08485814, -0.08896703, -0.09526027, -0.10020063, -0.10789425, -0.11656385, -0.12577831, -0.13782861, -0.15379365, -0.18454595, -0.22064525, -0.25976409, -0.29799174, -0.33285038, -0.36389267, -0.38972991, -0.40282873, -0.40540858, -0.40020078, -0.38849355, -0.36597179, -0.34020803, -0.31411743, -0.28333441, -0.2525514 , -0.22176838, -0.19098537, -0.16020235, -0.12941934, -0.09863632, -0.06787373, -0.03720722, -0.00654072,  0.02412579,  0.0547923 ,  0.08545881,  0.11229938,  0.12264561,  0.12662648,  0.12570085,  0.12449731,  0.12319408,  0.1237421 ,  0.12817215,  0.13083066,  0.1318722 ,  0.13291374,  0.13162506,  0.1284996 ,  0.12494474,  0.11922401,  0.11127789};
float SS_servo3[] = {0.15232275, 0.12113861, 0.10384815, 0.09237039, 0.08297022, 0.0756272 , 0.06828418, 0.06094115, 0.05359813, 0.0462551 , 0.03891208, 0.03509372, 0.04792496, 0.0607562 , 0.07358744, 0.08641867, 0.09924991, 0.11024468, 0.10820202, 0.10335941, 0.1008357 , 0.09631343, 0.10053696, 0.11478112, 0.1345209 , 0.1487943 , 0.15097682, 0.14581278, 0.13711381, 0.12587169, 0.10967608, 0.1001665 , 0.10102357, 0.10327151, 0.10334747, 0.10342344, 0.10349941, 0.10357537, 0.10286436, 0.10126414, 0.09966391, 0.09827631, 0.09929703, 0.09674187, 0.09337264, 0.09137831, 0.08850679, 0.08498122, 0.1063645 , 0.15783359, 0.22500179, 0.30902361, 0.39671358, 0.47853711, 0.55266349, 0.61471695, 0.63981671, 0.63561655, 0.61411751, 0.58154943, 0.51198129, 0.42188289, 0.33703569, 0.32757671, 0.31811773, 0.30865874, 0.29919976, 0.28974077, 0.28028179, 0.27082281, 0.26013068, 0.24363641, 0.22714214, 0.21064787, 0.1941536 , 0.17765933, 0.14538942, 0.11908728, 0.10702108, 0.10641353, 0.10746295, 0.109564  , 0.10762165, 0.09674809, 0.09107225, 0.08908541, 0.08709856, 0.09095147, 0.09940757, 0.10869867, 0.11994505, 0.13989618};
float SS_servo4[] = { 0.2085576 ,  0.19207548,  0.17361057,  0.15593756,  0.14213233,  0.13215682,  0.12218131,  0.1122058 ,  0.10223029,  0.09225478,  0.08227927,  0.07399258,  0.0736834 ,  0.07337421,  0.07306503,  0.07275585,  0.07244667,  0.07343862,  0.06952023,  0.06208466,  0.05529885,  0.04874495,  0.04619948,  0.04774453,  0.05208049,  0.05658777,  0.05761276,  0.05432492,  0.04496504,  0.03342628,  0.02490519,  0.01562568,  0.00685714, -0.00142115, -0.00687043, -0.01231972, -0.017769  , -0.02321829, -0.02612086, -0.02614592, -0.02617097, -0.02562805, -0.01865069, -0.00388764,  0.01160604,  0.03212487,  0.06025268,  0.07869   ,  0.07883053,  0.06119891,  0.04142861,  0.022927  ,  0.00529269, -0.01192177, -0.02965051, -0.04786691, -0.06676347, -0.08776745, -0.10972393, -0.12781765, -0.13888473, -0.14791214, -0.1561593 , -0.153205  , -0.1502507 , -0.1472964 , -0.1443421 , -0.1413878 , -0.1384335 , -0.1354792 , -0.12974873, -0.11095588, -0.09216303, -0.07337018, -0.05457732, -0.03578447, -0.01361633,  0.01699954,  0.05102643,  0.08777063,  0.12320076,  0.15423493,  0.17660741,  0.19331967,  0.20127435,  0.20487038,  0.20846641,  0.20695642,  0.20142162,  0.19544467,  0.18944334,  0.2012362 };
float SS_servo5[] = {-0.13402808, -0.11410786, -0.09740426, -0.08226737, -0.07246769, -0.0679527 , -0.0634377 , -0.05892271, -0.05440772, -0.04989273, -0.04537774, -0.04353845, -0.05433851, -0.06513856, -0.07593862, -0.08673867, -0.09753872, -0.10915575, -0.11124138, -0.10576304, -0.10063157, -0.09574779, -0.09862606, -0.10962159, -0.12539247, -0.14040054, -0.15219059, -0.15633287, -0.14438249, -0.12695048, -0.11635842, -0.10468688, -0.09330041, -0.08295244, -0.08002631, -0.07710019, -0.07417406, -0.07124793, -0.07436177, -0.08430015, -0.09423853, -0.1051719 , -0.13121388, -0.17407338, -0.22507583, -0.28715617, -0.36728101, -0.43450974, -0.44619939, -0.42053827, -0.38921271, -0.36005243, -0.33250703, -0.30594323, -0.27866419, -0.2495723 , -0.2166239 , -0.18092778, -0.14410486, -0.11480868, -0.10509764, -0.10394601, -0.10255899, -0.09779266, -0.09302634, -0.08826002, -0.0834937 , -0.07872737, -0.07396105, -0.06919473, -0.07006409, -0.09745042, -0.12483675, -0.15222308, -0.17960941, -0.20699573, -0.25012517, -0.31997778, -0.39509947, -0.47240613, -0.53801   , -0.58207273, -0.59221323, -0.58596649, -0.54081883, -0.4758046 , -0.41079036, -0.33212765, -0.24270653, -0.15722865, -0.09778582, -0.11795212};
float SS_servo6[] = {0.22006697, 0.20388115, 0.1879348 , 0.17296393, 0.15966633, 0.14802552, 0.13638471, 0.1247439 , 0.11310309, 0.10146229, 0.08982148, 0.07926824, 0.07385241, 0.06843658, 0.06302076, 0.05760493, 0.0521891 , 0.04765185, 0.04238147, 0.03869731, 0.03652219, 0.03337617, 0.02954791, 0.02486289, 0.0195631 , 0.01536303, 0.01583153, 0.02246964, 0.0497085 , 0.08593038, 0.12455814, 0.16392643, 0.20362763, 0.24151013, 0.26730256, 0.29309499, 0.31888742, 0.34467986, 0.36135742, 0.36773613, 0.37411484, 0.37972803, 0.37456721, 0.36430787, 0.34626152, 0.32588185, 0.3014886 , 0.27229857, 0.26588853, 0.26138854, 0.25619173, 0.25062042, 0.24506437, 0.24002796, 0.23571451, 0.23188977, 0.22968198, 0.22846389, 0.22630835, 0.21768892, 0.21041306, 0.20511235, 0.19988598, 0.19572695, 0.19156792, 0.18740889, 0.18324986, 0.17909082, 0.17493179, 0.17077276, 0.16752248, 0.16854806, 0.16957363, 0.1705992 , 0.17162478, 0.17265035, 0.17308423, 0.17228349, 0.17008743, 0.16691064, 0.16571575, 0.16595464, 0.16686786, 0.16075836, 0.15869019, 0.15863613, 0.15858207, 0.16406808, 0.17392106, 0.18544273, 0.20061812, 0.21522339};
float SS_servo7[] = {-0.19973948, -0.18046243, -0.16888111, -0.15923768, -0.15047378, -0.14258075, -0.13468772, -0.12679469, -0.11890166, -0.11100863, -0.1031156 , -0.09668078, -0.09713412, -0.09758747, -0.09804082, -0.09849417, -0.09894752, -0.09937754, -0.09875446, -0.10087721, -0.10509898, -0.10711904, -0.10737405, -0.10571934, -0.10194642, -0.09929676, -0.10996824, -0.13426581, -0.1967953 , -0.27676959, -0.36182946, -0.4476449 , -0.52913511, -0.60185174, -0.63057967, -0.65930759, -0.68803551, -0.71676343, -0.71480044, -0.67815992, -0.6415194 , -0.602283  , -0.53287429, -0.45137908, -0.35836939, -0.26881842, -0.18657737, -0.11733756, -0.11512346, -0.11675521, -0.11574616, -0.11348779, -0.11106287, -0.10977362, -0.11024593, -0.11087282, -0.11229159, -0.11720055, -0.12093794, -0.1112372 , -0.10306804, -0.09832199, -0.09366456, -0.09027927, -0.08689397, -0.08350867, -0.08012337, -0.07673808, -0.07335278, -0.06996748, -0.06800261, -0.07272115, -0.07743968, -0.08215822, -0.08687676, -0.09159529, -0.09619958, -0.09957554, -0.09900273, -0.09506931, -0.09405612, -0.09512812, -0.09779873, -0.08722636, -0.0833029 , -0.08310804, -0.08291318, -0.09282089, -0.11069196, -0.13194586, -0.16293648, -0.18866623};

int node=0;
int first=0;
int input=0;
int end_time=0;
int time_step=120000; //was 120000
int steps = sizeof(SS_servo0)/sizeof(SS_servo0[0]);
int one_print = 0;

// -------------------Joint configurations-------------------
int servo0=0;
int servo0_deg=0;
int servo1=0;
int servo1_deg=0;
int servo2=0;
int servo2_deg=0;
int servo3=0;
int servo3_deg=0;
int servo4=0;
int servo4_deg=0;
int servo5=0;
int servo5_deg=0;
int servo6=0;
int servo6_deg=0;
int servo7=0;
int servo7_deg=0;

void setup() {
  Serial.begin(115200);
  pca9685.begin();

  pca9685.setOscillatorFrequency(27000000); //Value between 24MHz and 27MHz, tuned for this setup
  pca9685.setPWMFreq(SERVO_FREQ);
  delay (1000);

  servo0_deg=SS_servo0[0]/3.14159265*180;
  servo0=map(servo0_deg,-38,90,2200,1030);
  servo1_deg=SS_servo1[0]/3.14159265*180;
  servo1=map(servo1_deg,-90,90,2600,950);
  servo2_deg=SS_servo2[0]/3.14159265*180;
  servo2=map(servo2_deg,-38,90,1510,2730);
  servo3_deg=SS_servo3[0]/3.14159265*180;
  servo3=map(servo3_deg,-90,90,1100,2700);
  servo4_deg=SS_servo4[0]/3.14159265*180;
  servo4=map(servo4_deg,-90,38,2700,1500);
  servo5_deg=SS_servo5[0]/3.14159265*180;
  servo5=map(servo5_deg,-90,90,2600,930);
  servo6_deg=SS_servo6[0]/3.14159265*180;
  servo6=map(servo6_deg,-90,38,850,2250);
  servo7_deg=SS_servo7[0]/3.14159265*180;
  servo7=map(servo7_deg,-90,90,920,2620);
        
  pca9685.setPWM(SER0,0,servo0);
  pca9685.setPWM(SER1,0,servo1);
  pca9685.setPWM(SER2,0,servo2);
  pca9685.setPWM(SER3,0,servo3);
  pca9685.setPWM(SER4,0,servo4);
  pca9685.setPWM(SER5,0,servo5);
  pca9685.setPWM(SER6,0,servo6);
  pca9685.setPWM(SER7,0,servo7);

  Serial.print("Node:");
  Serial.println(node);
  Serial.print("servo0 -> rads:");
  Serial.print(SS_servo0[node]);
  Serial.print("        deg:");
  Serial.print(servo0_deg);
  Serial.print("        us:");
  Serial.println(servo0);
  Serial.print("servo1 -> rads:");
  Serial.print(SS_servo1[node]);
  Serial.print("        deg:");
  Serial.print(servo1_deg);
  Serial.print("        us:");
  Serial.println(servo1);
  Serial.print("servo2 -> rads:");
  Serial.print(SS_servo2[node]);
  Serial.print("        deg:");
  Serial.print(servo2_deg);
  Serial.print("        us:");
  Serial.println(servo2);
  Serial.print("servo3 -> rads:");
  Serial.print(SS_servo3[node]);
  Serial.print("        deg:");
  Serial.print(servo3_deg);
  Serial.print("        us:");
  Serial.println(servo3);
  Serial.print("servo4 -> rads:");
  Serial.print(SS_servo4[node]);
  Serial.print("        deg:");
  Serial.print(servo4_deg);
  Serial.print("        us:");
  Serial.println(servo4);
  Serial.print("servo5 -> rads:");
  Serial.print(SS_servo5[node]);
  Serial.print("        deg:");
  Serial.print(servo5_deg);
  Serial.print("        us:");
  Serial.println(servo5);
  Serial.print("servo6 -> rads:");
  Serial.print(SS_servo6[node]);
  Serial.print("        deg:");
  Serial.print(servo6_deg);
  Serial.print("        us:");
  Serial.println(servo6);
  Serial.print("servo7 -> rads:");
  Serial.print(SS_servo7[node]);
  Serial.print("        deg:");
  Serial.print(servo7_deg);
  Serial.print("        us:");
  Serial.println(servo7);

  Serial.println("10");
  delay(1000);
  Serial.println("9");
  delay(1000);
  Serial.println("8");
  delay(1000);
  Serial.println("7");
  delay(1000);
  Serial.println("6");
  delay(1000);
  Serial.println("5");
  delay(1000);
  Serial.println("4");
  delay(1000);
  Serial.println("3");
  delay(1000);
  Serial.println("2");
  delay(1000);
  Serial.println("1");
  delay(1000);

}

void loop() 
{
  if(Serial.available()>0)
  {
    first=Serial.read();
    if(first=='2')
    {
      input=2;
      node=0;
      one_print=1;
    }
    if(first=='1')
    {
      input=1;
      node=0;
      one_print=1;
    }
    if(first=='0')
    {
      input=0;
    }
  }
  if(input==1 or input==2)
  {
      if(esp_timer_get_time()>=end_time)
      {
        servo0_deg=SS_servo0[node]/3.14159265*180;
        servo0=map(servo0_deg,-38,90,2200,1030);
        servo1_deg=SS_servo1[node]/3.14159265*180;
        servo1=map(servo1_deg,-90,90,2600,950);
        servo2_deg=SS_servo2[node]/3.14159265*180;
        servo2=map(servo2_deg,-38,90,1510,2730);
        servo3_deg=SS_servo3[node]/3.14159265*180;
        servo3=map(servo3_deg,-90,90,1100,2700);
        servo4_deg=SS_servo4[node]/3.14159265*180;
        servo4=map(servo4_deg,-90,38,2700,1500);
        servo5_deg=SS_servo5[node]/3.14159265*180;
        servo5=map(servo5_deg,-90,90,2600,930);
        servo6_deg=SS_servo6[node]/3.14159265*180;
        servo6=map(servo6_deg,-90,38,850,2250);
        servo7_deg=SS_servo7[node]/3.14159265*180;
        servo7=map(servo7_deg,-90,90,920,2620);
        
        pca9685.setPWM(SER0,0,servo0);
        pca9685.setPWM(SER1,0,servo1);
        pca9685.setPWM(SER2,0,servo2);
        pca9685.setPWM(SER3,0,servo3);
        pca9685.setPWM(SER4,0,servo4);
        pca9685.setPWM(SER5,0,servo5);
        pca9685.setPWM(SER6,0,servo6);
        pca9685.setPWM(SER7,0,servo7);
        
        node+=1;
        if(node>=steps and input==1)
        {
          Serial.print("Input:");
          Serial.println(input);
          node=0;
        }
        if(node>=steps and input==2)
        {
          Serial.print("Input:");
          Serial.println(input);
          input=0;
        }
         end_time=esp_timer_get_time()+time_step;
      }
   }

  if(input == 0)
  {        
        pca9685.setPWM(SER0,0,servo0);
        pca9685.setPWM(SER1,0,servo1);
        pca9685.setPWM(SER2,0,servo2);
        pca9685.setPWM(SER3,0,servo3);
        pca9685.setPWM(SER4,0,servo4);
        pca9685.setPWM(SER5,0,servo5);
        pca9685.setPWM(SER6,0,servo6);
        pca9685.setPWM(SER7,0,servo7);

        if(one_print==1)
        {
          Serial.print("Input:");
          Serial.println(input);
          Serial.print("Node:");
          Serial.println(node);
          Serial.print("servo0 -> rads:");
          Serial.print(SS_servo0[node]);
          Serial.print("        deg:");
          Serial.print(servo0_deg);
          Serial.print("        us:");
          Serial.println(servo0);
          Serial.print("servo1 -> rads:");
          Serial.print(SS_servo1[node]);
          Serial.print("        deg:");
          Serial.print(servo1_deg);
          Serial.print("        us:");
          Serial.println(servo1);
          Serial.print("servo2 -> rads:");
          Serial.print(SS_servo2[node]);
          Serial.print("        deg:");
          Serial.print(servo2_deg);
          Serial.print("        us:");
          Serial.println(servo2);
          Serial.print("servo3 -> rads:");
          Serial.print(SS_servo3[node]);
          Serial.print("        deg:");
          Serial.print(servo3_deg);
          Serial.print("        us:");
          Serial.println(servo3);
          Serial.print("servo4 -> rads:");
          Serial.print(SS_servo4[node]);
          Serial.print("        deg:");
          Serial.print(servo4_deg);
          Serial.print("        us:");
          Serial.println(servo4);
          Serial.print("servo5 -> rads:");
          Serial.print(SS_servo5[node]);
          Serial.print("        deg:");
          Serial.print(servo5_deg);
          Serial.print("        us:");
          Serial.println(servo5);
          Serial.print("servo6 -> rads:");
          Serial.print(SS_servo6[node]);
          Serial.print("        deg:");
          Serial.print(servo6_deg);
          Serial.print("        us:");
          Serial.println(servo6);
          Serial.print("servo7 -> rads:");
          Serial.print(SS_servo7[node]);
          Serial.print("        deg:");
          Serial.print(servo7_deg);
          Serial.print("        us:");
          Serial.println(servo7);
          one_print=0;
        }
  
  }
}
