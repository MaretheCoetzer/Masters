// HOW TO:
// ------------------------------
// Serial input = 2 -> Steps through gait sequence once and stops at the end.
// Serial input = 1 -> Steps through gait sequence in a loop.
// Serial input = 0 -> Stops infinite loop at the node where it is at that moment

//Gait template
#include <Wire.h>
#include <Adafruit_PWMServoDriver.h>

Adafruit_PWMServoDriver pca9685 = Adafruit_PWMServoDriver();

#define SERVO_FREQ 300
#define SER0 0 //Hip 1
#define SER1 1 //Knee 1
#define SER2 2 //Hip 2
#define SER3 3 //Knee 2
#define SER4 4 //Hip 3
#define SER5 5 //Knee 3
#define SER6 6 //Hip 4
#define SER7 7 //Knee 4

// Insert servo angles here:
// For 3D gaits, these angles are obtained from linearisation.py
// For 2D gaits, these angles are obtained from 2D_trajectory_reader.py
float SS_servo0[] = {-0.22428685, -0.21493084, -0.21569625, -0.22602412, -0.24764722, -0.27297955, -0.29418787, -0.31471041, -0.32797783, -0.33987377, -0.33786373, -0.32175835, -0.29356638, -0.26108056, -0.22859475, -0.19278335, -0.15490475, -0.13058761, -0.12225535, -0.12354262, -0.13418135, -0.1375828 , -0.12629546, -0.10505115, -0.08837567, -0.07186968, -0.0553637 , -0.04352328, -0.03289108, -0.0267759 , -0.0359591 , -0.04239423, -0.04414576, -0.04569579, -0.04735164, -0.04892776, -0.05020735, -0.05138275, -0.05604884, -0.06483678, -0.07612153, -0.08669034, -0.09736478, -0.10875455, -0.12064275, -0.13272289, -0.14413438, -0.15004536, -0.14357527, -0.12910076, -0.11572217, -0.10648128, -0.10510602, -0.10440986, -0.1051755 , -0.10594115, -0.10670679, -0.10747243, -0.10823807, -0.11408836, -0.12209094, -0.13009351, -0.13809608, -0.14642807, -0.14836034, -0.15153409, -0.15766997, -0.16739224, -0.1850779 , -0.20831944, -0.22592377, -0.22845953, -0.22311979, -0.21337401, -0.20198141, -0.19216809, -0.1891598 , -0.18679445, -0.18442909, -0.18195998, -0.17944573, -0.17604541, -0.17468305, -0.17807961, -0.18420503, -0.1872604 , -0.19031577, -0.19153158, -0.1915868 , -0.19471391, -0.20271696, -0.21693412};
float SS_servo1[] = {0.17060548, 0.13844468, 0.11973736, 0.13490737, 0.19746028, 0.28721195, 0.37420606, 0.46001721, 0.53331349, 0.60395236, 0.62665843, 0.59752129, 0.530733  , 0.45385239, 0.37697178, 0.29772724, 0.21701327, 0.15969613, 0.13333705, 0.12805755, 0.13816131, 0.13335991, 0.09905626, 0.05606482, 0.04474835, 0.03454929, 0.02435024, 0.04910556, 0.08291285, 0.12072032, 0.14409943, 0.14798219, 0.14506722, 0.14229924, 0.13972609, 0.13703403, 0.13389968, 0.12882295, 0.13043628, 0.14278186, 0.15693256, 0.17016029, 0.18318403, 0.19482624, 0.20628442, 0.21451449, 0.21818189, 0.21228172, 0.18969209, 0.15059711, 0.11484356, 0.08936025, 0.08149247, 0.07475255, 0.0704404 , 0.06612824, 0.06181609, 0.05750393, 0.05319178, 0.05945968, 0.07020598, 0.08095229, 0.0916986 , 0.10370972, 0.10456437, 0.10640085, 0.1140399 , 0.13005148, 0.16097661, 0.20392837, 0.23876581, 0.23758602, 0.2200708 , 0.19581787, 0.1683717 , 0.14193802, 0.13346119, 0.12663255, 0.11980391, 0.11350562, 0.107438  , 0.09926296, 0.09581283, 0.10179991, 0.111474  , 0.117817  , 0.12416   , 0.12676401, 0.12700908, 0.13100953, 0.14452112, 0.1656187 };
float SS_servo2[] = { 0.04520101,  0.04673935,  0.04938927,  0.05099736,  0.04557451,  0.040776  ,  0.03357221,  0.02604959,  0.01515401,  0.00642796,  0.00029284, -0.00567503, -0.00913283, -0.01875281, -0.02837279, -0.04134943, -0.05641261, -0.07053425, -0.07867159, -0.07797812, -0.06949419, -0.06072947, -0.0565495 , -0.05192317, -0.05349831, -0.05529199, -0.05708566, -0.06489491, -0.07426198, -0.08398691, -0.09000785, -0.09341083, -0.0944423 , -0.09530135, -0.09671866, -0.09870249, -0.10279363, -0.10776489, -0.1119648 , -0.11353021, -0.11571216, -0.11929323, -0.1233286 , -0.13044065, -0.1379032 , -0.14709533, -0.15320816, -0.15802409, -0.16451938, -0.17335865, -0.17834446, -0.17541063, -0.17051253, -0.1668817 , -0.16597869, -0.16507568, -0.16417267, -0.16326966, -0.16236665, -0.16142275, -0.16046153, -0.15950031, -0.15853909, -0.15345312, -0.1348945 , -0.10400446, -0.06570984, -0.02521063,  0.01392247,  0.05262774,  0.08960623,  0.09835369,  0.10008987,  0.09834681,  0.09629009,  0.09321467,  0.09446389,  0.09404765,  0.0936314 ,  0.09146028,  0.08852585,  0.08637342,  0.0853903 ,  0.08690268,  0.09124901,  0.09262456,  0.09400011,  0.09181629,  0.08738685,  0.07982734,  0.07014958,  0.05524992};
float SS_servo3[] = {0.16461059, 0.14779435, 0.1217871 , 0.09980548, 0.09116669, 0.08460354, 0.08345057, 0.08305167, 0.09063031, 0.09512322, 0.09573493, 0.09566064, 0.09296245, 0.102543  , 0.11212355, 0.13207076, 0.15846197, 0.17893201, 0.18588504, 0.17657998, 0.1479844 , 0.11856788, 0.09851655, 0.08378681, 0.07986279, 0.0763131 , 0.0727634 , 0.0816854 , 0.09383713, 0.1066384 , 0.11247585, 0.11026408, 0.10594128, 0.10186613, 0.0989181 , 0.09714802, 0.09975961, 0.10239049, 0.10313795, 0.10090335, 0.09664571, 0.09580957, 0.09547124, 0.09850423, 0.10104104, 0.10345315, 0.09642353, 0.08830014, 0.09188851, 0.09991583, 0.10141479, 0.08961746, 0.08450583, 0.09136943, 0.12400999, 0.15665056, 0.18929112, 0.22193169, 0.25457225, 0.30808807, 0.37044012, 0.43279218, 0.49514424, 0.55074575, 0.56396367, 0.52804439, 0.46223585, 0.38088002, 0.29887317, 0.21594962, 0.13931703, 0.11507842, 0.10457377, 0.1033028 , 0.10282784, 0.10231719, 0.09729054, 0.09604458, 0.09479863, 0.09788966, 0.10286714, 0.10592958, 0.10727575, 0.103374  , 0.09183676, 0.08921921, 0.08660166, 0.09121331, 0.10038588, 0.11355948, 0.13079201, 0.15383869};
float SS_servo4[] = { 0.27218122,  0.254785  ,  0.23680795,  0.22213938,  0.2104189 ,  0.19989028,  0.19145845,  0.18330661,  0.17811682,  0.17235666,  0.16625257,  0.1604736 ,  0.15443044,  0.14955644,  0.14468243,  0.14135533,  0.13898979,  0.13410725,  0.13056539,  0.13004728,  0.12708672,  0.12102348,  0.11028734,  0.10054699,  0.0948527 ,  0.08929877,  0.08374484,  0.0842474 ,  0.08631839,  0.08962858,  0.09160212,  0.08917353,  0.0814781 ,  0.07446934,  0.06849351,  0.06347281,  0.06200503,  0.05861638,  0.05486098,  0.05286868,  0.04946471,  0.05253094,  0.05699262,  0.07090477,  0.08810952,  0.11604259,  0.14053444,  0.15416501,  0.150733  ,  0.1372928 ,  0.12510929,  0.11361971,  0.10306181,  0.09356353,  0.0863461 ,  0.07912868,  0.07191125,  0.06469382,  0.0574764 ,  0.0493335 ,  0.04079887,  0.03226424,  0.02372961,  0.01399177,  0.00483164, -0.00517935, -0.01634848, -0.02760199, -0.0395641 , -0.05041427, -0.05529758, -0.0487225 , -0.04426582, -0.04586062, -0.04459686, -0.03310426,  0.00086651,  0.04067873,  0.08049095,  0.12217606,  0.16467581,  0.20087299,  0.23121446,  0.24730328,  0.2587367 ,  0.26157653,  0.26441637,  0.26360224,  0.26048282,  0.25693274,  0.25709178,  0.26886325};
float SS_servo5[] = {-0.15657012, -0.13531017, -0.11963887, -0.10875761, -0.10479985, -0.09988891, -0.09867114, -0.09791076, -0.10198932, -0.10359517, -0.10310511, -0.10361905, -0.10113082, -0.10122383, -0.10131685, -0.10098582, -0.1003912 , -0.09873914, -0.10109734, -0.10789111, -0.11325378, -0.11257349, -0.10240239, -0.08803046, -0.08363571, -0.07959449, -0.07555328, -0.08347045, -0.09448442, -0.10806055, -0.11836418, -0.12252021, -0.11332478, -0.1049527 , -0.09869785, -0.09434555, -0.09707031, -0.09763946, -0.09781819, -0.09921691, -0.10097738, -0.11528232, -0.13284432, -0.17246435, -0.22000692, -0.29310013, -0.36269994, -0.40871686, -0.41135985, -0.39394849, -0.37795702, -0.36140655, -0.34503154, -0.33104843, -0.32221393, -0.31337943, -0.30454492, -0.29571042, -0.28687592, -0.27582194, -0.26382847, -0.25183501, -0.23984155, -0.22474202, -0.20905312, -0.19317884, -0.17509583, -0.15567463, -0.13589698, -0.11749607, -0.10800632, -0.12733432, -0.13127859, -0.10413788, -0.10473249, -0.13496537, -0.20909425, -0.29513377, -0.3811733 , -0.46684426, -0.5523549 , -0.60849483, -0.64039753, -0.61666061, -0.5797612 , -0.50424253, -0.42872386, -0.34533618, -0.25698392, -0.17931806, -0.12305543, -0.14011023};
float SS_servo6[] = {0.27920631, 0.27064636, 0.25435038, 0.23627804, 0.21715467, 0.2005817 , 0.18541346, 0.17045175, 0.1576749 , 0.145643  , 0.13509079, 0.12494173, 0.11625702, 0.10773202, 0.09920701, 0.09127365, 0.08370806, 0.07332668, 0.0600428 , 0.04495867, 0.03407323, 0.02928284, 0.03762167, 0.0591702 , 0.06471686, 0.06968924, 0.07466162, 0.07230686, 0.06805462, 0.06404946, 0.06384085, 0.07066119, 0.09904707, 0.13512821, 0.17206251, 0.20921389, 0.24717275, 0.28413415, 0.31031782, 0.32434841, 0.3290354 , 0.3271436 , 0.32397479, 0.31215762, 0.29822313, 0.27800904, 0.2519966 , 0.23379015, 0.23101342, 0.22769487, 0.22282444, 0.21805354, 0.21344164, 0.20899005, 0.20488351, 0.20077696, 0.19667041, 0.19256387, 0.18845732, 0.18665928, 0.18583839, 0.18501751, 0.18419662, 0.18348681, 0.18096371, 0.17773587, 0.17490387, 0.17253883, 0.17093384, 0.16997832, 0.16791783, 0.16359192, 0.15983631, 0.16260467, 0.16733844, 0.16606389, 0.15751306, 0.15257259, 0.14763212, 0.14684026, 0.14785289, 0.14659603, 0.14644724, 0.14647461, 0.14144936, 0.1447666 , 0.14808384, 0.15745626, 0.17064892, 0.1907993 , 0.2253425 , 0.26254419};
float SS_servo7[] = {-0.38721622, -0.38364587, -0.37139974, -0.35374087, -0.33493491, -0.31785544, -0.3030582 , -0.28856822, -0.27732889, -0.26626102, -0.25675916, -0.24842209, -0.24055495, -0.23322326, -0.22589156, -0.216203  , -0.2050494 , -0.19222313, -0.17479506, -0.15205771, -0.14136393, -0.14330796, -0.17190899, -0.2410516 , -0.22571176, -0.20736706, -0.18902235, -0.15580566, -0.11873765, -0.09973179, -0.10565217, -0.12854509, -0.1937372 , -0.27430885, -0.35623425, -0.43828137, -0.52078124, -0.60162166, -0.64262729, -0.63558849, -0.60094247, -0.54258925, -0.48148925, -0.40178721, -0.32072372, -0.23610651, -0.14663726, -0.10603411, -0.11003092, -0.11327184, -0.11225758, -0.10952145, -0.1053716 , -0.1017775 , -0.09937963, -0.09698176, -0.09458389, -0.09218602, -0.08978815, -0.09171505, -0.09547257, -0.09923009, -0.10298762, -0.10632643, -0.10425476, -0.10230034, -0.10129729, -0.10006298, -0.10143338, -0.10317904, -0.09941617, -0.09688384, -0.09616273, -0.10648016, -0.12058626, -0.12468995, -0.1098339 , -0.10198164, -0.09412938, -0.09390319, -0.09699409, -0.0957655 , -0.09618184, -0.09710947, -0.08956103, -0.09610434, -0.10264766, -0.12141976, -0.14790704, -0.19071779, -0.26252244, -0.34423433};

int node=0;
int first=0;
int input=0;
int end_time=0;
int time_step=120000; //was 120000
int steps = sizeof(SS_servo0)/sizeof(SS_servo0[0]);
int one_print = 0;

// -------------------Joint configurations-------------------
int servo0=0;
int servo0_deg=0;
int servo1=0;
int servo1_deg=0;
int servo2=0;
int servo2_deg=0;
int servo3=0;
int servo3_deg=0;
int servo4=0;
int servo4_deg=0;
int servo5=0;
int servo5_deg=0;
int servo6=0;
int servo6_deg=0;
int servo7=0;
int servo7_deg=0;

void setup() {
  Serial.begin(115200);
  pca9685.begin();

  pca9685.setOscillatorFrequency(27000000); //Value between 24MHz and 27MHz, tuned for this setup
  pca9685.setPWMFreq(SERVO_FREQ);
  delay (1000);

  servo0_deg=SS_servo0[0]/3.14159265*180;
  servo0=map(servo0_deg,-38,90,2200,1030);
  servo1_deg=SS_servo1[0]/3.14159265*180;
  servo1=map(servo1_deg,-90,90,2600,950);
  servo2_deg=SS_servo2[0]/3.14159265*180;
  servo2=map(servo2_deg,-38,90,1510,2730);
  servo3_deg=SS_servo3[0]/3.14159265*180;
  servo3=map(servo3_deg,-90,90,1100,2700);
  servo4_deg=SS_servo4[0]/3.14159265*180;
  servo4=map(servo4_deg,-90,38,2700,1500);
  servo5_deg=SS_servo5[0]/3.14159265*180;
  servo5=map(servo5_deg,-90,90,2600,930);
  servo6_deg=SS_servo6[0]/3.14159265*180;
  servo6=map(servo6_deg,-90,38,850,2250);
  servo7_deg=SS_servo7[0]/3.14159265*180;
  servo7=map(servo7_deg,-90,90,920,2620);
        
  pca9685.setPWM(SER0,0,servo0);
  pca9685.setPWM(SER1,0,servo1);
  pca9685.setPWM(SER2,0,servo2);
  pca9685.setPWM(SER3,0,servo3);
  pca9685.setPWM(SER4,0,servo4);
  pca9685.setPWM(SER5,0,servo5);
  pca9685.setPWM(SER6,0,servo6);
  pca9685.setPWM(SER7,0,servo7);

  Serial.print("Node:");
  Serial.println(node);
  Serial.print("servo0 -> rads:");
  Serial.print(SS_servo0[node]);
  Serial.print("        deg:");
  Serial.print(servo0_deg);
  Serial.print("        us:");
  Serial.println(servo0);
  Serial.print("servo1 -> rads:");
  Serial.print(SS_servo1[node]);
  Serial.print("        deg:");
  Serial.print(servo1_deg);
  Serial.print("        us:");
  Serial.println(servo1);
  Serial.print("servo2 -> rads:");
  Serial.print(SS_servo2[node]);
  Serial.print("        deg:");
  Serial.print(servo2_deg);
  Serial.print("        us:");
  Serial.println(servo2);
  Serial.print("servo3 -> rads:");
  Serial.print(SS_servo3[node]);
  Serial.print("        deg:");
  Serial.print(servo3_deg);
  Serial.print("        us:");
  Serial.println(servo3);
  Serial.print("servo4 -> rads:");
  Serial.print(SS_servo4[node]);
  Serial.print("        deg:");
  Serial.print(servo4_deg);
  Serial.print("        us:");
  Serial.println(servo4);
  Serial.print("servo5 -> rads:");
  Serial.print(SS_servo5[node]);
  Serial.print("        deg:");
  Serial.print(servo5_deg);
  Serial.print("        us:");
  Serial.println(servo5);
  Serial.print("servo6 -> rads:");
  Serial.print(SS_servo6[node]);
  Serial.print("        deg:");
  Serial.print(servo6_deg);
  Serial.print("        us:");
  Serial.println(servo6);
  Serial.print("servo7 -> rads:");
  Serial.print(SS_servo7[node]);
  Serial.print("        deg:");
  Serial.print(servo7_deg);
  Serial.print("        us:");
  Serial.println(servo7);

  Serial.println("10");
  delay(1000);
  Serial.println("9");
  delay(1000);
  Serial.println("8");
  delay(1000);
  Serial.println("7");
  delay(1000);
  Serial.println("6");
  delay(1000);
  Serial.println("5");
  delay(1000);
  Serial.println("4");
  delay(1000);
  Serial.println("3");
  delay(1000);
  Serial.println("2");
  delay(1000);
  Serial.println("1");
  delay(1000);

}

void loop() 
{
  if(Serial.available()>0)
  {
    first=Serial.read();
    if(first=='2')
    {
      input=2;
      node=0;
      one_print=1;
    }
    if(first=='1')
    {
      input=1;
      node=0;
      one_print=1;
    }
    if(first=='0')
    {
      input=0;
    }
  }
  if(input==1 or input==2)
  {
      if(esp_timer_get_time()>=end_time)
      {
        servo0_deg=SS_servo0[node]/3.14159265*180;
        servo0=map(servo0_deg,-38,90,2200,1030);
        servo1_deg=SS_servo1[node]/3.14159265*180;
        servo1=map(servo1_deg,-90,90,2600,950);
        servo2_deg=SS_servo2[node]/3.14159265*180;
        servo2=map(servo2_deg,-38,90,1510,2730);
        servo3_deg=SS_servo3[node]/3.14159265*180;
        servo3=map(servo3_deg,-90,90,1100,2700);
        servo4_deg=SS_servo4[node]/3.14159265*180;
        servo4=map(servo4_deg,-90,38,2700,1500);
        servo5_deg=SS_servo5[node]/3.14159265*180;
        servo5=map(servo5_deg,-90,90,2600,930);
        servo6_deg=SS_servo6[node]/3.14159265*180;
        servo6=map(servo6_deg,-90,38,850,2250);
        servo7_deg=SS_servo7[node]/3.14159265*180;
        servo7=map(servo7_deg,-90,90,920,2620);
        
        pca9685.setPWM(SER0,0,servo0);
        pca9685.setPWM(SER1,0,servo1);
        pca9685.setPWM(SER2,0,servo2);
        pca9685.setPWM(SER3,0,servo3);
        pca9685.setPWM(SER4,0,servo4);
        pca9685.setPWM(SER5,0,servo5);
        pca9685.setPWM(SER6,0,servo6);
        pca9685.setPWM(SER7,0,servo7);
        
        node+=1;
        if(node>=steps and input==1)
        {
          Serial.print("Input:");
          Serial.println(input);
          node=0;
        }
        if(node>=steps and input==2)
        {
          Serial.print("Input:");
          Serial.println(input);
          input=0;
        }
         end_time=esp_timer_get_time()+time_step;
      }
   }

  if(input == 0)
  {        
        pca9685.setPWM(SER0,0,servo0);
        pca9685.setPWM(SER1,0,servo1);
        pca9685.setPWM(SER2,0,servo2);
        pca9685.setPWM(SER3,0,servo3);
        pca9685.setPWM(SER4,0,servo4);
        pca9685.setPWM(SER5,0,servo5);
        pca9685.setPWM(SER6,0,servo6);
        pca9685.setPWM(SER7,0,servo7);

        if(one_print==1)
        {
          Serial.print("Input:");
          Serial.println(input);
          Serial.print("Node:");
          Serial.println(node);
          Serial.print("servo0 -> rads:");
          Serial.print(SS_servo0[node]);
          Serial.print("        deg:");
          Serial.print(servo0_deg);
          Serial.print("        us:");
          Serial.println(servo0);
          Serial.print("servo1 -> rads:");
          Serial.print(SS_servo1[node]);
          Serial.print("        deg:");
          Serial.print(servo1_deg);
          Serial.print("        us:");
          Serial.println(servo1);
          Serial.print("servo2 -> rads:");
          Serial.print(SS_servo2[node]);
          Serial.print("        deg:");
          Serial.print(servo2_deg);
          Serial.print("        us:");
          Serial.println(servo2);
          Serial.print("servo3 -> rads:");
          Serial.print(SS_servo3[node]);
          Serial.print("        deg:");
          Serial.print(servo3_deg);
          Serial.print("        us:");
          Serial.println(servo3);
          Serial.print("servo4 -> rads:");
          Serial.print(SS_servo4[node]);
          Serial.print("        deg:");
          Serial.print(servo4_deg);
          Serial.print("        us:");
          Serial.println(servo4);
          Serial.print("servo5 -> rads:");
          Serial.print(SS_servo5[node]);
          Serial.print("        deg:");
          Serial.print(servo5_deg);
          Serial.print("        us:");
          Serial.println(servo5);
          Serial.print("servo6 -> rads:");
          Serial.print(SS_servo6[node]);
          Serial.print("        deg:");
          Serial.print(servo6_deg);
          Serial.print("        us:");
          Serial.println(servo6);
          Serial.print("servo7 -> rads:");
          Serial.print(SS_servo7[node]);
          Serial.print("        deg:");
          Serial.print(servo7_deg);
          Serial.print("        us:");
          Serial.println(servo7);
          one_print=0;
        }
  
  }
}
