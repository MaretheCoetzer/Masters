// HOW TO:
// ------------------------------
// Serial input = 2 -> Steps through gait sequence once and stops at the end.
// Serial input = 1 -> Steps through gait sequence in a loop.
// Serial input = 0 -> Stops infinite loop at the node where it is at that moment

//Gait template
#include <Wire.h>
#include <Adafruit_PWMServoDriver.h>

Adafruit_PWMServoDriver pca9685 = Adafruit_PWMServoDriver();

#define SERVO_FREQ 300
#define SER0 0 //Hip 1
#define SER1 1 //Knee 1
#define SER2 2 //Hip 2
#define SER3 3 //Knee 2
#define SER4 4 //Hip 3
#define SER5 5 //Knee 3
#define SER6 6 //Hip 4
#define SER7 7 //Knee 4

// Insert servo angles here:
// For 3D gaits, these angles are obtained from linearisation.py
// For 2D gaits, these angles are obtained from 2D_trajectory_reader.py
float SS_servo0[] = {-0.28600577, -0.29849254, -0.31591678, -0.33154946, -0.34655722, -0.35295121, -0.35926804, -0.36186747, -0.35813297, -0.35121663, -0.3330663, -0.30426359, -0.27107237, -0.23630357, -0.19909228, -0.15867335, -0.11688863, -0.07601066, -0.03776126, -0.00327974,  0.00745879,  0.00926049,  0.00797573,  0.00374256, -0.00088574, -0.00970816, -0.0185622 , -0.02559476, -0.02962054, -0.03250165, -0.03175538, -0.03782185, -0.04413773, -0.0504536 , -0.057278  , -0.07150034, -0.08572269, -0.1006813 , -0.11780738, -0.12711685, -0.13082915, -0.13394726, -0.13732269, -0.14291912, -0.15057604, -0.15674763, -0.1613462 , -0.16684569, -0.17096686, -0.17618191, -0.18002884, -0.18593067, -0.19188255, -0.19673174, -0.19739304, -0.19861086, -0.19982867, -0.2023073 , -0.20494058, -0.20757387, -0.21020715, -0.21284044, -0.21547372, -0.21810701, -0.22608535, -0.23552503, -0.24496471, -0.25440439, -0.26384407, -0.27573323, -0.2802093 , -0.28422871, -0.28031941, -0.27356277, -0.26303392, -0.25713195, -0.25533074, -0.25361998, -0.24977287, -0.24898912, -0.24820537, -0.24905259, -0.25197238, -0.25523679, -0.2595812 , -0.27165654};
float SS_servo1[] = {0.17816527, 0.22467379, 0.30241684, 0.38597444, 0.47969049, 0.55378279, 0.6276737 , 0.69163283, 0.73866963, 0.77782518, 0.78004457, 0.74247269, 0.68704349, 0.62562066, 0.55741604, 0.48030503, 0.39970314, 0.31607954, 0.22609668, 0.14679961, 0.11315423, 0.09739463, 0.08932001, 0.08758836, 0.08670042, 0.09476823, 0.10264023, 0.1050332 , 0.10181165, 0.09623891, 0.08311597, 0.08156517, 0.08043802, 0.07931087, 0.0788116 , 0.08744677, 0.09608193, 0.10499798, 0.11227371, 0.11510319, 0.10874543, 0.10110303, 0.09225418, 0.08338128, 0.07699975, 0.07912759, 0.08042063, 0.08285659, 0.08450947, 0.08599581, 0.08713864, 0.09144833, 0.09581592, 0.09693257, 0.09112185, 0.08696465, 0.08280746, 0.0818319 , 0.08124664, 0.08066137, 0.0800761 , 0.07949083, 0.07890556, 0.07832029, 0.09011886, 0.10530318, 0.1204875 , 0.13567181, 0.15085613, 0.16881378, 0.17282459, 0.17603074, 0.16609403, 0.15070994, 0.12844095, 0.1156236 , 0.11156279, 0.10668021, 0.09882315, 0.09745942, 0.0960957 , 0.09826254, 0.1049159 , 0.11200332, 0.12143843, 0.14508123};
float SS_servo2[] = { 0.15152269,  0.15115916,  0.14369292,  0.13424923,  0.12455368,  0.11424432,  0.10391665,  0.09306061,  0.08130429,  0.07212663,  0.06404942,  0.05738466,  0.05233217,  0.04597504,  0.03833455,  0.02900865,  0.02141737,  0.01114036, -0.00620856, -0.01850564, -0.02562217, -0.02935864, -0.03145432, -0.03196469, -0.03242722, -0.03238205, -0.03274625, -0.03533592, -0.04032964, -0.04679021, -0.0544099 , -0.06207476, -0.06974126, -0.07740777, -0.08508522, -0.09292192, -0.10075862, -0.10870609, -0.11707516, -0.12634326, -0.14196738, -0.16097012, -0.18719478, -0.21678191, -0.24882067, -0.27556133, -0.30058231, -0.32323748, -0.34328213, -0.3583481 , -0.36424712, -0.36043014, -0.34850225, -0.32914027, -0.29942189, -0.25840628, -0.21739068, -0.18035496, -0.14380744, -0.10725993, -0.07071241, -0.03416489,  0.00238262,  0.03893014,  0.06558763,  0.08954118,  0.11349473,  0.13744828,  0.16140183,  0.1771801 ,  0.17910318,  0.18055135,  0.17700487,  0.17147425,  0.16671465,  0.16642491,  0.16925564,  0.1714108 ,  0.17302238,  0.1736932 ,  0.17436403,  0.17416105,  0.17284767,  0.17083786,  0.16622927,  0.15689181};
float SS_servo3[] = {0.14684391, 0.1259108 , 0.1119179 , 0.10561994, 0.09911632, 0.09769515, 0.09633651, 0.09708675, 0.10143023, 0.10224771, 0.10223293, 0.09976723, 0.09529912, 0.09349932, 0.09493277, 0.10061239, 0.10454615, 0.11407679, 0.13604273, 0.15192448, 0.15460563, 0.15009209, 0.14365479, 0.13437513, 0.12504043, 0.11512168, 0.10577628, 0.09917028, 0.09792376, 0.09961209, 0.10344243, 0.10517876, 0.10683844, 0.10849811, 0.1097775 , 0.10552435, 0.1012712 , 0.09602826, 0.08562173, 0.0883584 , 0.10604717, 0.13184486, 0.18539909, 0.24801342, 0.32396482, 0.4077347 , 0.49635928, 0.58292108, 0.67277383, 0.74932924, 0.80220746, 0.82398848, 0.82110884, 0.79454732, 0.73542038, 0.61939708, 0.50337377, 0.45662588, 0.41837583, 0.38012578, 0.34187573, 0.30362569, 0.26537564, 0.22712559, 0.20591043, 0.18935261, 0.17279479, 0.15623697, 0.13967915, 0.11462817, 0.10559939, 0.09765257, 0.10269449, 0.1120553 , 0.12055698, 0.12017862, 0.11395568, 0.108062  , 0.10462336, 0.10352159, 0.10241983, 0.10336834, 0.10692226, 0.11164205, 0.12190366, 0.14063995};
float SS_servo4[] = { 0.21971615,  0.20287113,  0.18350363,  0.16936732,  0.15302327,  0.14180526,  0.13063466,  0.12110744,  0.11438032,  0.10801831,  0.10035228,  0.08906565,  0.07891328,  0.07058016,  0.06520752,  0.06372282,  0.06462692,  0.0652341 ,  0.06296417,  0.05903786,  0.0487324 ,  0.03436295,  0.02440889,  0.01694126,  0.01000443,  0.00870185,  0.00727737,  0.00128394, -0.00505686, -0.01137344, -0.02163283, -0.02261136, -0.02325014, -0.02388891, -0.02327258, -0.00439691,  0.01447877,  0.0352657 ,  0.05411915,  0.06052631,  0.04999886,  0.03896027,  0.03951032,  0.04076897,  0.04128079,  0.03164072,  0.01210843, -0.01003419, -0.03212099, -0.05444196, -0.07647954, -0.1005815 , -0.12654879, -0.15364663, -0.1780267 , -0.19920117, -0.22037563, -0.22456797, -0.22667714, -0.22878632, -0.23089549, -0.23300467, -0.23511384, -0.23722302, -0.22118023, -0.20017469, -0.17916916, -0.15816362, -0.13715808, -0.11040169, -0.07630609, -0.04200108, -0.0045195 ,  0.0338724 ,  0.07186613,  0.1059252 ,  0.13434678,  0.15665229,  0.17551959,  0.18697132,  0.19842304,  0.20643501,  0.21007586,  0.21311688,  0.21409824,  0.21618963};
float SS_servo5[] = {-0.12085097, -0.10798914, -0.09750455, -0.09400362, -0.08675507, -0.08616691, -0.0856505 , -0.08745719, -0.09322209, -0.09800086, -0.09872081, -0.091726  , -0.08577636, -0.08350404, -0.08661935, -0.09681012, -0.11006285, -0.12258414, -0.13125252, -0.13243065, -0.12322957, -0.1061308 , -0.09659309, -0.09177771, -0.08799998, -0.09523657, -0.10246565, -0.10217003, -0.10070342, -0.09934512, -0.09023458, -0.10209533, -0.11472382, -0.1273523 , -0.14298765, -0.20236719, -0.26174673, -0.32638193, -0.39384984, -0.42391554, -0.41656036, -0.40819557, -0.42602209, -0.45014705, -0.47453889, -0.46536479, -0.43290726, -0.39571389, -0.35660347, -0.31954311, -0.28063647, -0.23853016, -0.19273903, -0.14583732, -0.10313357, -0.06605122, -0.02896887, -0.02802616, -0.03151661, -0.03500706, -0.0384975 , -0.04198795, -0.0454784 , -0.04896885, -0.0881567 , -0.13710423, -0.18605176, -0.23499929, -0.28394681, -0.34735991, -0.41677545, -0.48607246, -0.55000868, -0.61208955, -0.66206635, -0.69077225, -0.69231773, -0.66934812, -0.63146159, -0.56185851, -0.49225543, -0.41461073, -0.32674703, -0.24142985, -0.16019958, -0.10906344};
float SS_servo6[] = {0.22695317, 0.214754  , 0.19817533, 0.18089129, 0.1642825 , 0.14952433, 0.13477916, 0.12059916, 0.10738214, 0.09447997, 0.0854305 , 0.08103301, 0.07621868, 0.07068151, 0.06415135, 0.05631711, 0.04767161, 0.04110292, 0.03716607, 0.03789222, 0.05471182, 0.08628946, 0.12344197, 0.16214499, 0.20087355, 0.23987318, 0.27791646, 0.30974763, 0.33220712, 0.34421632, 0.35403699, 0.34900279, 0.34342476, 0.33784674, 0.33152681, 0.31441353, 0.29730025, 0.27932854, 0.26360824, 0.27243905, 0.29075179, 0.31941358, 0.32341602, 0.31518169, 0.29903245, 0.29567046, 0.29025018, 0.28399318, 0.27917747, 0.2732359 , 0.26926644, 0.26621473, 0.26312438, 0.25750367, 0.25066046, 0.24476894, 0.23887741, 0.23437636, 0.23004587, 0.22571538, 0.22138489, 0.2170544 , 0.21272391, 0.20839342, 0.20718187, 0.20682304, 0.20646422, 0.20610539, 0.20574657, 0.2033695 , 0.20230129, 0.20136077, 0.1998563 , 0.19732066, 0.19514148, 0.19516458, 0.19594795, 0.19309979, 0.18968393, 0.18884548, 0.18800704, 0.18911214, 0.19268701, 0.1966739 , 0.20405424, 0.21875417};
float SS_servo7[] = {-0.15948734, -0.15596711, -0.15108479, -0.14125671, -0.13351429, -0.12576086, -0.11800919, -0.11039623, -0.10301959, -0.09456219, -0.09253216, -0.09948904, -0.10432165, -0.10769576, -0.10845857, -0.10579199, -0.09970522, -0.09770162, -0.10299678, -0.11360177, -0.15962123, -0.23646817, -0.3245534 , -0.41534637, -0.50578177, -0.5924217 , -0.67510042, -0.73386712, -0.75498225, -0.73714486, -0.71269338, -0.64202991, -0.56967467, -0.49731943, -0.42397846, -0.336297, -0.24861554, -0.16078145, -0.11745815, -0.14912598, -0.1995821 , -0.28109662, -0.24565272, -0.18126697, -0.1228833 , -0.12674154, -0.12408344, -0.12041272, -0.11756105, -0.11482342, -0.11358212, -0.11513356, -0.11662915, -0.11408653, -0.10755953, -0.10224779, -0.09693606, -0.09386283, -0.0910642 , -0.08826556, -0.08546693, -0.08266829, -0.07986965, -0.07707102, -0.07881994, -0.08181217, -0.0848044 , -0.08779662, -0.09078885, -0.0917022 , -0.09449127, -0.0974392 , -0.0965983 , -0.09343784, -0.09029099, -0.09132853, -0.09335012, -0.08903608, -0.08225985, -0.08038665, -0.07851346, -0.08029927, -0.08673481, -0.09423448, -0.10833534, -0.13834699};

int node=0;
int first=0;
int input=0;
int end_time=0;
int time_step=120000;
int steps = sizeof(SS_servo0)/sizeof(SS_servo0[0]);
int one_print = 0;

// -------------------Joint configurations-------------------
int servo0=0;
int servo0_deg=0;
int servo1=0;
int servo1_deg=0;
int servo2=0;
int servo2_deg=0;
int servo3=0;
int servo3_deg=0;
int servo4=0;
int servo4_deg=0;
int servo5=0;
int servo5_deg=0;
int servo6=0;
int servo6_deg=0;
int servo7=0;
int servo7_deg=0;

void setup() {
  Serial.begin(115200);
  pca9685.begin();

  pca9685.setOscillatorFrequency(27000000); //Value between 24MHz and 27MHz, tuned for this setup
  pca9685.setPWMFreq(SERVO_FREQ);
  delay (1000);

  servo0_deg=SS_servo0[0]/3.14159265*180;
  servo0=map(servo0_deg,-38,90,2200,1030);
  servo1_deg=SS_servo1[0]/3.14159265*180;
  servo1=map(servo1_deg,-90,90,2600,950);
  servo2_deg=SS_servo2[0]/3.14159265*180;
  servo2=map(servo2_deg,-38,90,1510,2730);
  servo3_deg=SS_servo3[0]/3.14159265*180;
  servo3=map(servo3_deg,-90,90,1100,2700);
  servo4_deg=SS_servo4[0]/3.14159265*180;
  servo4=map(servo4_deg,-90,38,2700,1500);
  servo5_deg=SS_servo5[0]/3.14159265*180;
  servo5=map(servo5_deg,-90,90,2600,930);
  servo6_deg=SS_servo6[0]/3.14159265*180;
  servo6=map(servo6_deg,-90,38,850,2250);
  servo7_deg=SS_servo7[0]/3.14159265*180;
  servo7=map(servo7_deg,-90,90,920,2620);
        
  pca9685.setPWM(SER0,0,servo0);
  pca9685.setPWM(SER1,0,servo1);
  pca9685.setPWM(SER2,0,servo2);
  pca9685.setPWM(SER3,0,servo3);
  pca9685.setPWM(SER4,0,servo4);
  pca9685.setPWM(SER5,0,servo5);
  pca9685.setPWM(SER6,0,servo6);
  pca9685.setPWM(SER7,0,servo7);

  Serial.print("Node:");
  Serial.println(node);
  Serial.print("servo0 -> rads:");
  Serial.print(SS_servo0[node]);
  Serial.print("        deg:");
  Serial.print(servo0_deg);
  Serial.print("        us:");
  Serial.println(servo0);
  Serial.print("servo1 -> rads:");
  Serial.print(SS_servo1[node]);
  Serial.print("        deg:");
  Serial.print(servo1_deg);
  Serial.print("        us:");
  Serial.println(servo1);
  Serial.print("servo2 -> rads:");
  Serial.print(SS_servo2[node]);
  Serial.print("        deg:");
  Serial.print(servo2_deg);
  Serial.print("        us:");
  Serial.println(servo2);
  Serial.print("servo3 -> rads:");
  Serial.print(SS_servo3[node]);
  Serial.print("        deg:");
  Serial.print(servo3_deg);
  Serial.print("        us:");
  Serial.println(servo3);
  Serial.print("servo4 -> rads:");
  Serial.print(SS_servo4[node]);
  Serial.print("        deg:");
  Serial.print(servo4_deg);
  Serial.print("        us:");
  Serial.println(servo4);
  Serial.print("servo5 -> rads:");
  Serial.print(SS_servo5[node]);
  Serial.print("        deg:");
  Serial.print(servo5_deg);
  Serial.print("        us:");
  Serial.println(servo5);
  Serial.print("servo6 -> rads:");
  Serial.print(SS_servo6[node]);
  Serial.print("        deg:");
  Serial.print(servo6_deg);
  Serial.print("        us:");
  Serial.println(servo6);
  Serial.print("servo7 -> rads:");
  Serial.print(SS_servo7[node]);
  Serial.print("        deg:");
  Serial.print(servo7_deg);
  Serial.print("        us:");
  Serial.println(servo7);

  Serial.println("10");
  delay(1000);
  Serial.println("9");
  delay(1000);
  Serial.println("8");
  delay(1000);
  Serial.println("7");
  delay(1000);
  Serial.println("6");
  delay(1000);
  Serial.println("5");
  delay(1000);
  Serial.println("4");
  delay(1000);
  Serial.println("3");
  delay(1000);
  Serial.println("2");
  delay(1000);
  Serial.println("1");
  delay(1000);

}

void loop() 
{
  if(Serial.available()>0)
  {
    first=Serial.read();
    if(first=='2')
    {
      input=2;
      node=0;
      one_print=1;
    }
    if(first=='1')
    {
      input=1;
      node=0;
      one_print=1;
    }
    if(first=='0')
    {
      input=0;
    }
  }
  if(input==1 or input==2)
  {
      if(esp_timer_get_time()>=end_time)
      {
        servo0_deg=SS_servo0[node]/3.14159265*180;
        servo0=map(servo0_deg,-38,90,2200,1030);
        servo1_deg=SS_servo1[node]/3.14159265*180;
        servo1=map(servo1_deg,-90,90,2600,950);
        servo2_deg=SS_servo2[node]/3.14159265*180;
        servo2=map(servo2_deg,-38,90,1510,2730);
        servo3_deg=SS_servo3[node]/3.14159265*180;
        servo3=map(servo3_deg,-90,90,1100,2700);
        servo4_deg=SS_servo4[node]/3.14159265*180;
        servo4=map(servo4_deg,-90,38,2700,1500);
        servo5_deg=SS_servo5[node]/3.14159265*180;
        servo5=map(servo5_deg,-90,90,2600,930);
        servo6_deg=SS_servo6[node]/3.14159265*180;
        servo6=map(servo6_deg,-90,38,850,2250);
        servo7_deg=SS_servo7[node]/3.14159265*180;
        servo7=map(servo7_deg,-90,90,920,2620);
        
        pca9685.setPWM(SER0,0,servo0);
        pca9685.setPWM(SER1,0,servo1);
        pca9685.setPWM(SER2,0,servo2);
        pca9685.setPWM(SER3,0,servo3);
        pca9685.setPWM(SER4,0,servo4);
        pca9685.setPWM(SER5,0,servo5);
        pca9685.setPWM(SER6,0,servo6);
        pca9685.setPWM(SER7,0,servo7);
        
        node+=1;
        if(node>=steps and input==1)
        {
          Serial.print("Input:");
          Serial.println(input);
          node=0;
        }
        if(node>=steps and input==2)
        {
          Serial.print("Input:");
          Serial.println(input);
          input=0;
        }
         end_time=esp_timer_get_time()+time_step;
      }
   }

  if(input == 0)
  {        
        pca9685.setPWM(SER0,0,servo0);
        pca9685.setPWM(SER1,0,servo1);
        pca9685.setPWM(SER2,0,servo2);
        pca9685.setPWM(SER3,0,servo3);
        pca9685.setPWM(SER4,0,servo4);
        pca9685.setPWM(SER5,0,servo5);
        pca9685.setPWM(SER6,0,servo6);
        pca9685.setPWM(SER7,0,servo7);

        if(one_print==1)
        {
          Serial.print("Input:");
          Serial.println(input);
          Serial.print("Node:");
          Serial.println(node);
          Serial.print("servo0 -> rads:");
          Serial.print(SS_servo0[node]);
          Serial.print("        deg:");
          Serial.print(servo0_deg);
          Serial.print("        us:");
          Serial.println(servo0);
          Serial.print("servo1 -> rads:");
          Serial.print(SS_servo1[node]);
          Serial.print("        deg:");
          Serial.print(servo1_deg);
          Serial.print("        us:");
          Serial.println(servo1);
          Serial.print("servo2 -> rads:");
          Serial.print(SS_servo2[node]);
          Serial.print("        deg:");
          Serial.print(servo2_deg);
          Serial.print("        us:");
          Serial.println(servo2);
          Serial.print("servo3 -> rads:");
          Serial.print(SS_servo3[node]);
          Serial.print("        deg:");
          Serial.print(servo3_deg);
          Serial.print("        us:");
          Serial.println(servo3);
          Serial.print("servo4 -> rads:");
          Serial.print(SS_servo4[node]);
          Serial.print("        deg:");
          Serial.print(servo4_deg);
          Serial.print("        us:");
          Serial.println(servo4);
          Serial.print("servo5 -> rads:");
          Serial.print(SS_servo5[node]);
          Serial.print("        deg:");
          Serial.print(servo5_deg);
          Serial.print("        us:");
          Serial.println(servo5);
          Serial.print("servo6 -> rads:");
          Serial.print(SS_servo6[node]);
          Serial.print("        deg:");
          Serial.print(servo6_deg);
          Serial.print("        us:");
          Serial.println(servo6);
          Serial.print("servo7 -> rads:");
          Serial.print(SS_servo7[node]);
          Serial.print("        deg:");
          Serial.print(servo7_deg);
          Serial.print("        us:");
          Serial.println(servo7);
          one_print=0;
        }
  
  }
}
