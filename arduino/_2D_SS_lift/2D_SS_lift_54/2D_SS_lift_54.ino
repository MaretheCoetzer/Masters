// HOW TO:
// ------------------------------
// Serial input = 2 -> Steps through gait sequence once and stops at the end.
// Serial input = 1 -> Steps through gait sequence in a loop.
// Serial input = 0 -> Stops infinite loop at the node where it is at that moment

//Gait template
#include <Wire.h>
#include <Adafruit_PWMServoDriver.h>

Adafruit_PWMServoDriver pca9685 = Adafruit_PWMServoDriver();

#define SERVO_FREQ 300
#define SER0 0 //Hip 1
#define SER1 1 //Knee 1
#define SER2 2 //Hip 2
#define SER3 3 //Knee 2
#define SER4 4 //Hip 3
#define SER5 5 //Knee 3
#define SER6 6 //Hip 4
#define SER7 7 //Knee 4

// Insert servo angles here:
// For 3D gaits, these angles are obtained from linearisation.py
// For 2D gaits, these angles are obtained from 2D_trajectory_reader.py
float SS_servo0[] = {-0.23328449, -0.25306175, -0.27949396, -0.30713889, -0.34111355, -0.36969813, -0.39474377, -0.41978941, -0.44483506, -0.45665075, -0.4670475, -0.47613512, -0.46913471, -0.45171076, -0.42310838, -0.39000294, -0.34906861, -0.30813427, -0.26719993, -0.22438177, -0.17666446, -0.12894715, -0.08161306, -0.04294299, -0.02955816, -0.02674503, -0.02912742, -0.03284274, -0.03559251, -0.03823585, -0.04459842, -0.0469429 , -0.04928739, -0.05154529, -0.05259239, -0.05363948, -0.05469727, -0.05588949, -0.05993772, -0.06669547, -0.07373179, -0.07909666, -0.08446153, -0.0898264 , -0.09317262, -0.09605015, -0.099414  , -0.10642292, -0.11468986, -0.12417563, -0.13143289, -0.13669605, -0.14215443, -0.14485936, -0.14035638, -0.13393058, -0.13265218, -0.13130885, -0.13278218, -0.13463796, -0.13649374, -0.13946478, -0.14516117, -0.15085756, -0.1537334 , -0.15671533, -0.15932853, -0.161026  , -0.15888834, -0.16499147, -0.1710946 , -0.17866102, -0.19962357, -0.22058613, -0.24515211, -0.25675857, -0.25299535, -0.24490741, -0.23570102, -0.22404117, -0.21431091, -0.21106008, -0.20809559, -0.20510704, -0.20211849, -0.2007005 , -0.19941349, -0.19799291, -0.19776253, -0.19916614, -0.19595923, -0.19310564, -0.19322924, -0.19335283, -0.19347643, -0.19360003, -0.19438988, -0.19698993, -0.19958998, -0.20219003, -0.20361168, -0.20376276, -0.21078704, -0.22366039};
float SS_servo1[] = {0.13658025, 0.15512282, 0.18644554, 0.23088797, 0.31068216, 0.39202957, 0.47224238, 0.55245519, 0.632668  , 0.70214971, 0.77048048, 0.83745654, 0.86646579, 0.86420597, 0.82691416, 0.77539144, 0.70383491, 0.63227838, 0.56072185, 0.48582497, 0.40224099, 0.31865701, 0.23047447, 0.14886001, 0.11377752, 0.10151049, 0.09863151, 0.09923687, 0.09855442, 0.100663  , 0.10725313, 0.10702095, 0.10678878, 0.10636851, 0.10331761, 0.10026671, 0.0952973 , 0.09333289, 0.09759727, 0.10523739, 0.11153682, 0.11466453, 0.11779225, 0.12091996, 0.11587631, 0.10893546, 0.10258152, 0.10750378, 0.11764866, 0.12992933, 0.13597645, 0.13840862, 0.13855058, 0.13357328, 0.11744527, 0.09955202, 0.09128783, 0.08365092, 0.08174584, 0.08061901, 0.07949219, 0.08054559, 0.08692674, 0.09330789, 0.09516745, 0.09687945, 0.0979124 , 0.09725895, 0.08950544, 0.09777472, 0.10604401, 0.11732678, 0.1561976 , 0.19506842, 0.24280269, 0.26173938, 0.24793473, 0.22396489, 0.19819442, 0.17116338, 0.14803764, 0.138777  , 0.13071714, 0.12288599, 0.11505485, 0.11163075, 0.10857417, 0.10375124, 0.10263198, 0.10443813, 0.09772572, 0.09178716, 0.09166416, 0.09154117, 0.09141818, 0.09129518, 0.09218545, 0.09582875, 0.09947204, 0.10311534, 0.1045956 , 0.10389749, 0.11322069, 0.12913101};
float SS_servo2[] = { 0.07587503,  0.07731828,  0.07407588,  0.06888818,  0.06368877,  0.05746464,  0.05049389,  0.04352315,  0.03655241,  0.02659175,  0.01631041,  0.00694688,  0.00095889, -0.0040315 , -0.00601311, -0.00679968, -0.00947498, -0.01215027, -0.01482557, -0.01937064, -0.02877831, -0.03818599, -0.0491906 , -0.05980761, -0.06464464, -0.06367504, -0.06057219, -0.05881643, -0.0591552 , -0.05691239, -0.05378252, -0.05546528, -0.05714804, -0.05916267, -0.06581884, -0.07247501, -0.07899161, -0.08254309, -0.08263556, -0.08072723, -0.08060058, -0.08399759, -0.08739461, -0.09079162, -0.09849622, -0.10720093, -0.11582501, -0.1209204 , -0.12372399, -0.12550151, -0.13156959, -0.13646939, -0.14003347, -0.14333141, -0.14817061, -0.14926792, -0.15888345, -0.17878587, -0.19428281, -0.20918158, -0.22408035, -0.23636914, -0.24228   , -0.24819085, -0.2477911 , -0.23210033, -0.21129238, -0.17777616, -0.13734204, -0.09575478, -0.05416752, -0.01278069,  0.02677134,  0.06632336,  0.10280061,  0.12242926,  0.12513136,  0.12322023,  0.12124785,  0.11689188,  0.11585276,  0.1177381 ,  0.11767882,  0.11713204,  0.11658527,  0.11431924,  0.11190984,  0.10961217,  0.10933151,  0.10985816,  0.11088192,  0.11168345,  0.11171896,  0.11175448,  0.11178999,  0.11182551,  0.11144673,  0.10994229, 0.10843785,  0.10693341,  0.10364994,  0.09837191,  0.09005405,  0.07737981};
float SS_servo3[] = {0.14299569, 0.12315393, 0.10777745, 0.09713521, 0.08808973, 0.08314861, 0.08093951, 0.07873041, 0.0765213 , 0.08340829, 0.09127085, 0.09772036, 0.09917414, 0.09929221, 0.09423198, 0.08719047, 0.08524228, 0.08329409, 0.08134589, 0.08360596, 0.09681022, 0.11001448, 0.12655279, 0.14353448, 0.14545581, 0.13699832, 0.12248952, 0.11201418, 0.10646879, 0.09870818, 0.0860645 , 0.0844837 , 0.08290289, 0.08198163, 0.09028471, 0.09858779, 0.10467555, 0.10753266, 0.10382777, 0.09394833, 0.08574634, 0.08486792, 0.08398951, 0.08311109, 0.08685875, 0.09168047, 0.09594207, 0.09703019, 0.09616007, 0.09287179, 0.09650506, 0.09820692, 0.09452837, 0.09073278, 0.09343766, 0.09735863, 0.14126978, 0.23154831, 0.32174312, 0.41192656, 0.50211   , 0.58960169, 0.67051559, 0.7514295 , 0.81848881, 0.83265558, 0.82738976, 0.77386392, 0.68994809, 0.59827162, 0.50659516, 0.41546982, 0.32939   , 0.24331018, 0.1667618 , 0.12208001, 0.1100933 , 0.1059959 , 0.10248125, 0.10759872, 0.10605435, 0.0994098 , 0.09739902, 0.09667446, 0.0959499 , 0.10001325, 0.1044759 , 0.10718912, 0.10713123, 0.10505145, 0.1026768 , 0.10083357, 0.10043437, 0.10003517, 0.09963597, 0.09923677, 0.0993517 , 0.10086351, 0.10237531, 0.10388712, 0.10922015, 0.11904359, 0.13125466, 0.1472475 };
float SS_servo4[] = { 0.25266491,  0.23776019,  0.2222199 ,  0.20942628,  0.19735973,  0.18711697,  0.17840325,  0.16968954,  0.16097583,  0.15612313,  0.15168453,  0.14670146,  0.14091349,  0.13618251,  0.12977204,  0.12179236,  0.11764369,  0.11349502,  0.10934635,  0.10625915,  0.10593247,  0.10560578,  0.10520423,  0.10507236,  0.10876803,  0.1116208 ,  0.11085231,  0.10396014,  0.09031481,  0.08212061,  0.07499374,  0.07144755,  0.06790137,  0.06465027,  0.06552629,  0.06640231,  0.06371185,  0.0625721 ,  0.06156412,  0.056498  ,  0.05250356,  0.05576839,  0.05903323,  0.06229806,  0.07678961,  0.09388773,  0.1115235 ,  0.12259486,  0.12040304,  0.1160766 ,  0.11403693,  0.11934631,  0.12668385,  0.13311801,  0.12954951,  0.12138516,  0.11059064,  0.10028773,  0.09222504,  0.08446653,  0.07670801,  0.06931695,  0.06282381,  0.05633067,  0.05023563,  0.04339266,  0.0361471 ,  0.02790169,  0.01950424,  0.01099444,  0.00248463, -0.00627043, -0.01727077, -0.0282711 , -0.04023294, -0.05103453, -0.05978899, -0.06509708, -0.06322366, -0.04095088, -0.00933957,  0.03082494,  0.07445975,  0.11861006,  0.16276037,  0.20659371,  0.25040061,  0.28737287,  0.31588305,  0.32928252,  0.33326457,  0.33294506,  0.32473441,  0.31652376,  0.30831311,  0.30010247,  0.29099008,  0.27942766, 0.26786525,  0.25630283,  0.24804639,  0.24628516,  0.24865884,  0.2546172 };
float SS_servo5[] = {-0.13076069, -0.11752496, -0.10806711, -0.10338609, -0.09861297, -0.09548192, -0.09421034, -0.09293876, -0.09166717, -0.0951692 , -0.0991832, -0.10164867, -0.10063201, -0.10106019, -0.09717161, -0.08966737, -0.08862252, -0.08757766, -0.08653281, -0.0872193 , -0.09240841, -0.09759752, -0.10254322, -0.10682659, -0.12215496, -0.13436923, -0.14100463, -0.13393676, -0.11258782, -0.09924511, -0.09106346, -0.08890089, -0.08673832, -0.08518631, -0.09217373, -0.09916115, -0.10081458, -0.10288353, -0.10478048, -0.10053766, -0.10038029, -0.11477503, -0.12916977, -0.14356451, -0.18494432, -0.23258943, -0.28174339, -0.31356228, -0.3157011 , -0.31390389, -0.31847264, -0.33769634, -0.36386409, -0.38772812, -0.38761609, -0.37594996, -0.35965966, -0.34365091, -0.33211163, -0.32117921, -0.31024679, -0.30013507, -0.29202886, -0.28392265, -0.27545108, -0.26575242, -0.2551707 , -0.24239591, -0.22866663, -0.21530729, -0.20194795, -0.18800558, -0.16872569, -0.14944579, -0.12640447, -0.10860566, -0.09711161, -0.09422664, -0.10554539, -0.15503368, -0.22425277, -0.31500662, -0.41356879, -0.51274033, -0.61191188, -0.70249508, -0.79236206, -0.85459798, -0.8811907 , -0.85010095, -0.77800886, -0.69809726, -0.61287899, -0.52766071, -0.44244243, -0.35722416, -0.28090743, -0.22877631, -0.17664518, -0.12451406, -0.0981986 , -0.09627083, -0.10565492, -0.12736834};
float SS_servo6[] = { 0.26441737,  0.25590696,  0.24040895,  0.22115316,  0.2017273 ,  0.18565814,  0.17133182,  0.1570055 ,  0.14267918,  0.13126195,  0.12015672,  0.10920605,  0.09820105,  0.08651472,  0.07458921,  0.06381852,  0.05561114,  0.04740377,  0.03919639,  0.03151778,  0.02521433,  0.01891087,  0.01254406,  0.00627688, -0.00100396, -0.00416494, -0.00598386,  0.00484833,  0.03019489,  0.06303475,  0.10096085,  0.13965458,  0.17834831,  0.21688836,  0.25327883,  0.2896693 ,  0.31852257,  0.33805223,  0.3448753 ,  0.34070098,  0.32697381,  0.30649373,  0.28601364,  0.26553355,  0.23966515,  0.2125457 ,  0.18806209,  0.18563036,  0.19354029,  0.20647946,  0.23038823,  0.24196415,  0.23656553,  0.22607164,  0.22314355,  0.21970693,  0.217167  ,  0.21165317,  0.20831951,  0.20528186,  0.20224422,  0.19976521,  0.19865133,  0.19753745,  0.19487303,  0.19270114,  0.19063434,  0.1888285 ,  0.18350084,  0.18095795,  0.17841505,  0.17608547,  0.17570871,  0.17533196,  0.17449632,  0.17665235,  0.1847089 ,  0.18899218,  0.18665175,  0.17475451,  0.15957326,  0.15066207,  0.14670118,  0.14386606,  0.14103093,  0.14586258,  0.1513336 ,  0.15336324,  0.15431286,  0.15116727,  0.14670861,  0.14301737,  0.14174508,  0.14047279,  0.13920049,  0.1379282 ,  0.13843141,  0.14375869, 0.14908598,  0.15441326,  0.1659639 ,  0.19012296,  0.22423325,  0.256271  };
float SS_servo7[] = {-0.35500391, -0.35460775, -0.34525269, -0.32762354, -0.30796056, -0.29305595, -0.28047664, -0.26789733, -0.25531802, -0.24558624, -0.23615986, -0.22658814, -0.21498062, -0.20128534, -0.18615771, -0.17291659, -0.16361173, -0.15430686, -0.14500199, -0.1363585 , -0.129435  , -0.1225115 , -0.11537416, -0.10725352, -0.1003513 , -0.10046111, -0.10501949, -0.13406533, -0.19206884, -0.26364916, -0.35938191, -0.45392794, -0.54847397, -0.64235226, -0.72689142, -0.81143059, -0.86919918, -0.8876934 , -0.85855785, -0.79083081, -0.69805309, -0.59286023, -0.48766737, -0.38247452, -0.28550249, -0.19043914, -0.11252013, -0.1168955 , -0.13936241, -0.17222301, -0.23378902, -0.22225587, -0.15476961, -0.10860503, -0.10982752, -0.10788032, -0.10849073, -0.10238063, -0.10056681, -0.09933633, -0.09810585, -0.09806699, -0.10094006, -0.10381313, -0.10238617, -0.10227923, -0.10232608, -0.10275485, -0.09542175, -0.09431238, -0.093203  , -0.09243971, -0.09484474, -0.09724978, -0.0968943 , -0.10542997, -0.12792474, -0.14434661, -0.14699012, -0.12674932, -0.0997933 , -0.08450557, -0.07862998, -0.07476577, -0.07090155, -0.08125801, -0.09280041, -0.09883929, -0.10142199, -0.09612062, -0.08730613, -0.07999359, -0.07782583, -0.07565806, -0.0734903 , -0.07132254, -0.07306442, -0.08542885, -0.09779327, -0.1101577 , -0.13483708, -0.18442889, -0.25756874, -0.33149842};

int node=0;
int first=0;
int input=0;
int end_time=0;
int time_step=120000;
int steps = sizeof(SS_servo0)/sizeof(SS_servo0[0]);
int one_print = 0;

// -------------------Joint configurations-------------------
int servo0=0;
int servo0_deg=0;
int servo1=0;
int servo1_deg=0;
int servo2=0;
int servo2_deg=0;
int servo3=0;
int servo3_deg=0;
int servo4=0;
int servo4_deg=0;
int servo5=0;
int servo5_deg=0;
int servo6=0;
int servo6_deg=0;
int servo7=0;
int servo7_deg=0;

void setup() {
  Serial.begin(115200);
  pca9685.begin();

  pca9685.setOscillatorFrequency(27000000); //Value between 24MHz and 27MHz, tuned for this setup
  pca9685.setPWMFreq(SERVO_FREQ);
  delay (1000);

  servo0_deg=SS_servo0[0]/3.14159265*180;
  servo0=map(servo0_deg,-38,90,2200,1030);
  servo1_deg=SS_servo1[0]/3.14159265*180;
  servo1=map(servo1_deg,-90,90,2600,950);
  servo2_deg=SS_servo2[0]/3.14159265*180;
  servo2=map(servo2_deg,-38,90,1510,2730);
  servo3_deg=SS_servo3[0]/3.14159265*180;
  servo3=map(servo3_deg,-90,90,1100,2700);
  servo4_deg=SS_servo4[0]/3.14159265*180;
  servo4=map(servo4_deg,-90,38,2700,1500);
  servo5_deg=SS_servo5[0]/3.14159265*180;
  servo5=map(servo5_deg,-90,90,2600,930);
  servo6_deg=SS_servo6[0]/3.14159265*180;
  servo6=map(servo6_deg,-90,38,850,2250);
  servo7_deg=SS_servo7[0]/3.14159265*180;
  servo7=map(servo7_deg,-90,90,920,2620);
        
  pca9685.setPWM(SER0,0,servo0);
  pca9685.setPWM(SER1,0,servo1);
  pca9685.setPWM(SER2,0,servo2);
  pca9685.setPWM(SER3,0,servo3);
  pca9685.setPWM(SER4,0,servo4);
  pca9685.setPWM(SER5,0,servo5);
  pca9685.setPWM(SER6,0,servo6);
  pca9685.setPWM(SER7,0,servo7);

  Serial.print("Node:");
  Serial.println(node);
  Serial.print("servo0 -> rads:");
  Serial.print(SS_servo0[node]);
  Serial.print("        deg:");
  Serial.print(servo0_deg);
  Serial.print("        us:");
  Serial.println(servo0);
  Serial.print("servo1 -> rads:");
  Serial.print(SS_servo1[node]);
  Serial.print("        deg:");
  Serial.print(servo1_deg);
  Serial.print("        us:");
  Serial.println(servo1);
  Serial.print("servo2 -> rads:");
  Serial.print(SS_servo2[node]);
  Serial.print("        deg:");
  Serial.print(servo2_deg);
  Serial.print("        us:");
  Serial.println(servo2);
  Serial.print("servo3 -> rads:");
  Serial.print(SS_servo3[node]);
  Serial.print("        deg:");
  Serial.print(servo3_deg);
  Serial.print("        us:");
  Serial.println(servo3);
  Serial.print("servo4 -> rads:");
  Serial.print(SS_servo4[node]);
  Serial.print("        deg:");
  Serial.print(servo4_deg);
  Serial.print("        us:");
  Serial.println(servo4);
  Serial.print("servo5 -> rads:");
  Serial.print(SS_servo5[node]);
  Serial.print("        deg:");
  Serial.print(servo5_deg);
  Serial.print("        us:");
  Serial.println(servo5);
  Serial.print("servo6 -> rads:");
  Serial.print(SS_servo6[node]);
  Serial.print("        deg:");
  Serial.print(servo6_deg);
  Serial.print("        us:");
  Serial.println(servo6);
  Serial.print("servo7 -> rads:");
  Serial.print(SS_servo7[node]);
  Serial.print("        deg:");
  Serial.print(servo7_deg);
  Serial.print("        us:");
  Serial.println(servo7);

  Serial.println("10");
  delay(1000);
  Serial.println("9");
  delay(1000);
  Serial.println("8");
  delay(1000);
  Serial.println("7");
  delay(1000);
  Serial.println("6");
  delay(1000);
  Serial.println("5");
  delay(1000);
  Serial.println("4");
  delay(1000);
  Serial.println("3");
  delay(1000);
  Serial.println("2");
  delay(1000);
  Serial.println("1");
  delay(1000);

}

void loop() 
{
  if(Serial.available()>0)
  {
    first=Serial.read();
    if(first=='2')
    {
      input=2;
      node=0;
      one_print=1;
    }
    if(first=='1')
    {
      input=1;
      node=0;
      one_print=1;
    }
    if(first=='0')
    {
      input=0;
    }
  }
  if(input==1 or input==2)
  {
      if(esp_timer_get_time()>=end_time)
      {
        servo0_deg=SS_servo0[node]/3.14159265*180;
        servo0=map(servo0_deg,-38,90,2200,1030);
        servo1_deg=SS_servo1[node]/3.14159265*180;
        servo1=map(servo1_deg,-90,90,2600,950);
        servo2_deg=SS_servo2[node]/3.14159265*180;
        servo2=map(servo2_deg,-38,90,1510,2730);
        servo3_deg=SS_servo3[node]/3.14159265*180;
        servo3=map(servo3_deg,-90,90,1100,2700);
        servo4_deg=SS_servo4[node]/3.14159265*180;
        servo4=map(servo4_deg,-90,38,2700,1500);
        servo5_deg=SS_servo5[node]/3.14159265*180;
        servo5=map(servo5_deg,-90,90,2600,930);
        servo6_deg=SS_servo6[node]/3.14159265*180;
        servo6=map(servo6_deg,-90,38,850,2250);
        servo7_deg=SS_servo7[node]/3.14159265*180;
        servo7=map(servo7_deg,-90,90,920,2620);
        
        pca9685.setPWM(SER0,0,servo0);
        pca9685.setPWM(SER1,0,servo1);
        pca9685.setPWM(SER2,0,servo2);
        pca9685.setPWM(SER3,0,servo3);
        pca9685.setPWM(SER4,0,servo4);
        pca9685.setPWM(SER5,0,servo5);
        pca9685.setPWM(SER6,0,servo6);
        pca9685.setPWM(SER7,0,servo7);
        
        node+=1;
        if(node>=steps and input==1)
        {
          Serial.print("Input:");
          Serial.println(input);
          node=0;
        }
        if(node>=steps and input==2)
        {
          Serial.print("Input:");
          Serial.println(input);
          input=0;
        }
         end_time=esp_timer_get_time()+time_step;
      }
   }

  if(input == 0)
  {        
        pca9685.setPWM(SER0,0,servo0);
        pca9685.setPWM(SER1,0,servo1);
        pca9685.setPWM(SER2,0,servo2);
        pca9685.setPWM(SER3,0,servo3);
        pca9685.setPWM(SER4,0,servo4);
        pca9685.setPWM(SER5,0,servo5);
        pca9685.setPWM(SER6,0,servo6);
        pca9685.setPWM(SER7,0,servo7);

        if(one_print==1)
        {
          Serial.print("Input:");
          Serial.println(input);
          Serial.print("Node:");
          Serial.println(node);
          Serial.print("servo0 -> rads:");
          Serial.print(SS_servo0[node]);
          Serial.print("        deg:");
          Serial.print(servo0_deg);
          Serial.print("        us:");
          Serial.println(servo0);
          Serial.print("servo1 -> rads:");
          Serial.print(SS_servo1[node]);
          Serial.print("        deg:");
          Serial.print(servo1_deg);
          Serial.print("        us:");
          Serial.println(servo1);
          Serial.print("servo2 -> rads:");
          Serial.print(SS_servo2[node]);
          Serial.print("        deg:");
          Serial.print(servo2_deg);
          Serial.print("        us:");
          Serial.println(servo2);
          Serial.print("servo3 -> rads:");
          Serial.print(SS_servo3[node]);
          Serial.print("        deg:");
          Serial.print(servo3_deg);
          Serial.print("        us:");
          Serial.println(servo3);
          Serial.print("servo4 -> rads:");
          Serial.print(SS_servo4[node]);
          Serial.print("        deg:");
          Serial.print(servo4_deg);
          Serial.print("        us:");
          Serial.println(servo4);
          Serial.print("servo5 -> rads:");
          Serial.print(SS_servo5[node]);
          Serial.print("        deg:");
          Serial.print(servo5_deg);
          Serial.print("        us:");
          Serial.println(servo5);
          Serial.print("servo6 -> rads:");
          Serial.print(SS_servo6[node]);
          Serial.print("        deg:");
          Serial.print(servo6_deg);
          Serial.print("        us:");
          Serial.println(servo6);
          Serial.print("servo7 -> rads:");
          Serial.print(SS_servo7[node]);
          Serial.print("        deg:");
          Serial.print(servo7_deg);
          Serial.print("        us:");
          Serial.println(servo7);
          one_print=0;
        }
  
  }
}
