// HOW TO:
// ------------------------------
// Serial input = 2 -> Steps through gait sequence once and stops at the end.
// Serial input = 1 -> Steps through gait sequence in a loop.
// Serial input = 0 -> Stops infinite loop at the node where it is at that moment

//Gait template
#include <Wire.h>
#include <Adafruit_PWMServoDriver.h>

Adafruit_PWMServoDriver pca9685 = Adafruit_PWMServoDriver();

#define SERVO_FREQ 300
#define SER0 0 //Hip 1
#define SER1 1 //Knee 1
#define SER2 2 //Hip 2
#define SER3 3 //Knee 2
#define SER4 4 //Hip 3
#define SER5 5 //Knee 3
#define SER6 6 //Hip 4
#define SER7 7 //Knee 4

// Insert servo angles here:
// For 3D gaits, these angles are obtained from linearisation.py
// For 2D gaits, these angles are obtained from 2D_trajectory_reader.py
float SS_servo0[] = {-0.18503006, -0.20603887, -0.24808767, -0.29053863, -0.33294176, -0.37560045, -0.41632838, -0.44810418, -0.47093691, -0.48289187, -0.48404747, -0.47527806, -0.45494805, -0.42265523, -0.38740405, -0.34995602, -0.3114452 , -0.27293438, -0.23442356, -0.19591274, -0.15740192, -0.12251149, -0.09499476, -0.06747804, -0.03996131, -0.01244459,  0.00583338,  0.01333886,  0.01267887,  0.00926208,  0.0030687 , -0.00410206, -0.01076847, -0.01746365, -0.02457165, -0.0338527 , -0.04588366, -0.05993127, -0.07200588, -0.08272908, -0.09216372, -0.09745925, -0.08941644, -0.07608114, -0.06894161, -0.0647759 , -0.0606102 , -0.0564445 , -0.05582579, -0.05931775, -0.06280971, -0.06466652, -0.06682208, -0.06976114, -0.0718881 , -0.07631785, -0.07431959, -0.07665067, -0.07964804, -0.08408169, -0.0930653 , -0.09851087, -0.09971082, -0.09903904, -0.0958952 , -0.09480357, -0.09528444, -0.0981039 , -0.10346248, -0.10881874, -0.11133418, -0.11008614, -0.10987866, -0.11288723, -0.11589581, -0.11952145, -0.12663779, -0.13375412, -0.14199874, -0.15409446, -0.17270367};
float SS_servo1[] = {0.16430112, 0.21340031, 0.29473788, 0.36231453, 0.44190176, 0.52691234, 0.61022423, 0.67467087, 0.7152768 , 0.72907053, 0.71118359, 0.6690085 , 0.59815858, 0.50719557, 0.41028241, 0.33791429, 0.27742052, 0.21692674, 0.15643297, 0.0959392 , 0.03544542, 0.00246157, 0.02550777, 0.04855397, 0.07160018, 0.09464638, 0.1233277 , 0.10667756, 0.1006785 , 0.10084161, 0.10890031, 0.11623054, 0.12310353, 0.12993323, 0.13614175, 0.14612492, 0.16357521, 0.17962299, 0.19580842, 0.21248159, 0.22628728, 0.2308023 , 0.20896922, 0.17137308, 0.14888957, 0.13365976, 0.11842996, 0.10320015, 0.09555747, 0.09670759, 0.09785771, 0.09716427, 0.09750076, 0.09854275, 0.09814816, 0.10027474, 0.09459983, 0.09498677, 0.09726511, 0.10226443, 0.11507997, 0.1216118 , 0.11931861, 0.11278982, 0.10294424, 0.0959355 , 0.09244823, 0.09367672, 0.10002538, 0.10427164, 0.10463179, 0.09791794, 0.09024939, 0.08960915, 0.08896891, 0.08925211, 0.09475915, 0.1002662 , 0.10645523, 0.11884505, 0.13871054};
float SS_servo2[] = {-0.14316694, -0.10421604, -0.04685616, -0.02955698, -0.01968917, -0.0145042 , -0.01736615, -0.02425246, -0.03231396, -0.03659363, -0.04403099, -0.05097164, -0.05646551, -0.05528982, -0.05619271, -0.05726749, -0.05842542, -0.05958335, -0.06074129, -0.06189922, -0.06305715, -0.06595939, -0.0724143 , -0.07886921, -0.08532412, -0.09177903, -0.10239739, -0.11157905, -0.11517764, -0.11488431, -0.11156544, -0.10915412, -0.11166655, -0.11445269, -0.12116548, -0.12744557, -0.13101185, -0.13516948, -0.13968427, -0.1425275 , -0.14568633, -0.14806794, -0.15118225, -0.16903596, -0.18854198, -0.20884106, -0.22914015, -0.24943923, -0.26940216, -0.2889755 , -0.30854884, -0.32661425, -0.33049899, -0.32537037, -0.30914667, -0.28218568, -0.24897574, -0.21191177, -0.17376859, -0.13492072, -0.09781262, -0.06816107, -0.05872801, -0.05661932, -0.06073703, -0.06549976, -0.06931457, -0.07213559, -0.07387757, -0.07618269, -0.08035985, -0.08734828, -0.09530869, -0.10098462, -0.10666056, -0.11244124, -0.11881447, -0.1251877 , -0.13362975, -0.1435855 , -0.15734565};
float SS_servo3[] = {0.20952726, 0.23359948, 0.21845898, 0.1638495 , 0.12903677, 0.10386823, 0.09348126, 0.0940602 , 0.09786638, 0.09822118, 0.10179622, 0.1043619 , 0.10331784, 0.09324609, 0.08740785, 0.08278717, 0.07875552, 0.07472388, 0.07069223, 0.06666059, 0.06262894, 0.06285537, 0.0717543 , 0.08065324, 0.08955217, 0.0984511 , 0.11454302, 0.12669812, 0.12670404, 0.11940241, 0.10821008, 0.0961422 , 0.09453811, 0.09338599, 0.09871776, 0.10256707, 0.10280946, 0.09874662, 0.09952305, 0.10014547, 0.1012883 , 0.09986712, 0.10071045, 0.13002789, 0.18662479, 0.2563152 , 0.32600562, 0.39569603, 0.47313277, 0.55954682, 0.64596087, 0.72966026, 0.76485072, 0.76666934, 0.72920008, 0.65252164, 0.56364101, 0.46671894, 0.37523714, 0.28964628, 0.20900819, 0.14429669, 0.12041668, 0.11093558, 0.11576054, 0.12061582, 0.1238932 , 0.12514127, 0.124186  , 0.1222589 , 0.12594671, 0.13586521, 0.14471663, 0.14949998, 0.15428333, 0.15895376, 0.16298539, 0.16701702, 0.17363956, 0.18174968, 0.19186408};
float SS_servo4[] = { 0.21811524,  0.20907299,  0.19649827,  0.18690724,  0.18062008,  0.17237905,  0.16228718,  0.15681479,  0.15318529,  0.15378064,  0.1519841 ,  0.1456195 ,  0.13143025,  0.12064289,  0.11275752,  0.10651193,  0.10105964,  0.09560734,  0.09015505,  0.08470275,  0.07925046,  0.0764173 ,  0.07891861,  0.08141992,  0.08392122,  0.08642253,  0.08826574,  0.08403452,  0.07920368,  0.07494894,  0.07323275,  0.06579788,  0.06481742,  0.06418014,  0.06846601,  0.0758187 ,  0.09465346,  0.10898474,  0.11442199,  0.11163597,  0.10389451,  0.09382488,  0.08309226,  0.07109811,  0.06116319,  0.05221666,  0.04327013,  0.03432359,  0.02562583,  0.01721636,  0.0088069 ,  0.00064224, -0.00352166, -0.00551399, -0.00535943, -0.00683384, -0.00934498, -0.01272663, -0.0149936 , -0.01703109, -0.01813385, -0.01552131,  0.00430422,  0.03433074,  0.07167717,  0.11195908,  0.15220671,  0.19172972,  0.23046597,  0.26081368,  0.28131158,  0.28876035,  0.28936959,  0.2825371 ,  0.2757046 ,  0.26772963,  0.25329169,  0.23885375,  0.22531438,  0.21796217,  0.22242167};
float SS_servo5[] = {-0.13640997, -0.12435764, -0.10861777, -0.10846602, -0.11045895, -0.10838218, -0.10418686, -0.10655234, -0.11179083, -0.12127843, -0.12910018, -0.1277093 , -0.11123854, -0.09709892, -0.08876862, -0.08292979, -0.07829627, -0.07366275, -0.06902924, -0.06439572, -0.0597622 , -0.05969853, -0.06894236, -0.07818619, -0.08743002, -0.09667385, -0.10577888, -0.10364353, -0.10117274, -0.09931734, -0.10036099, -0.09248074, -0.09720334, -0.10272282, -0.11967402, -0.14345499, -0.18863336, -0.2302713 , -0.24964886, -0.24911732, -0.2387763 , -0.2245876 , -0.20827297, -0.19448815, -0.18230355, -0.17088702, -0.1594705 , -0.14805397, -0.13675193, -0.12558256, -0.11441319, -0.1022725 , -0.09786309, -0.09875722, -0.10378618, -0.10765721, -0.10418502, -0.10166297, -0.10087474, -0.10073542, -0.10388712, -0.11373695, -0.15905494, -0.22625293, -0.30923638, -0.40326966, -0.49627807, -0.58570855, -0.67125427, -0.72618886, -0.74044865, -0.70496433, -0.6510625 , -0.57050001, -0.48993751, -0.40787448, -0.31732304, -0.22677159, -0.15225739, -0.1125438 , -0.136856  };
float SS_servo6[] = { 0.13917565,  0.13292184,  0.11926259,  0.1007295 ,  0.08259241,  0.06465092,  0.04615109,  0.02777702,  0.00879413, -0.01018016, -0.0281956 , -0.04217084, -0.05003897, -0.04941827, -0.04683985, -0.03182981, -0.01080561,  0.01021858,  0.03124278,  0.05226697,  0.07329117,  0.09745577,  0.12801652,  0.15857727,  0.18913802,  0.21969877,  0.24680196,  0.26552672,  0.27670716,  0.28117414,  0.27762721,  0.26886583,  0.25423244,  0.23945092,  0.22254439,  0.20562721,  0.1868261 ,  0.16245128,  0.15598597,  0.1535837 ,  0.15140304,  0.14805806,  0.14395192,  0.13621837,  0.13116162,  0.12738969,  0.12361776,  0.11984582,  0.11739973,  0.11649017,  0.11558061,  0.11530166,  0.11370269,  0.1106366 ,  0.1069054 ,  0.10606132,  0.11152578,  0.11677024,  0.12144583,  0.12516634,  0.12583369,  0.12233425,  0.11005804,  0.09428922,  0.0854444 ,  0.0795054 ,  0.07548417,  0.07415877,  0.07576041,  0.07369587,  0.07145561,  0.06633258,  0.05939622,  0.05712408,  0.05485195,  0.05397699,  0.06100575,  0.06803451,  0.08287433,  0.11125576,  0.13780531};
float SS_servo7[] = {-0.33718724, -0.33066837, -0.31253168, -0.29409518, -0.27193615, -0.25005943, -0.22865555, -0.20466782, -0.17860996, -0.14831423, -0.12320363, -0.10634482, -0.10260295, -0.1114139 , -0.12406807, -0.16215541, -0.21254676, -0.2629381 , -0.31332945, -0.3637208 , -0.41411215, -0.47057558, -0.53940615, -0.60823672, -0.67706729, -0.74589786, -0.80524477, -0.833076  , -0.83087647, -0.80046571, -0.73634536, -0.65944396, -0.56306243, -0.46690967, -0.3740388 , -0.28680521, -0.20131722, -0.10632017, -0.10163868, -0.10190852, -0.10286781, -0.10232504, -0.09951088, -0.09442008, -0.09217572, -0.09129758, -0.09041943, -0.08954129, -0.0909514 , -0.0950134 , -0.09907539, -0.10296176, -0.10370782, -0.10237296, -0.09950515, -0.10465016, -0.1173439 , -0.13221135, -0.14539239, -0.15683587, -0.16351624, -0.16092623, -0.14084125, -0.11416231, -0.09976854, -0.09254929, -0.08889617, -0.09071507, -0.09847525, -0.10087942, -0.10111925, -0.09495411, -0.0881191 , -0.09025548, -0.09239186, -0.09768575, -0.1208414 , -0.14399705, -0.18458305, -0.25424639, -0.32603846};

int node=0;
int first=0;
int input=0;
int end_time=0;
int time_step=120000;
int steps = sizeof(SS_servo0)/sizeof(SS_servo0[0]);
int one_print = 0;

// -------------------Joint configurations-------------------
int servo0=0;
int servo0_deg=0;
int servo1=0;
int servo1_deg=0;
int servo2=0;
int servo2_deg=0;
int servo3=0;
int servo3_deg=0;
int servo4=0;
int servo4_deg=0;
int servo5=0;
int servo5_deg=0;
int servo6=0;
int servo6_deg=0;
int servo7=0;
int servo7_deg=0;

void setup() {
  Serial.begin(115200);
  pca9685.begin();

  pca9685.setOscillatorFrequency(27000000); //Value between 24MHz and 27MHz, tuned for this setup
  pca9685.setPWMFreq(SERVO_FREQ);
  delay (1000);

  servo0_deg=SS_servo0[0]/3.14159265*180;
  servo0=map(servo0_deg,-38,90,2200,1030);
  servo1_deg=SS_servo1[0]/3.14159265*180;
  servo1=map(servo1_deg,-90,90,2600,950);
  servo2_deg=SS_servo2[0]/3.14159265*180;
  servo2=map(servo2_deg,-38,90,1510,2730);
  servo3_deg=SS_servo3[0]/3.14159265*180;
  servo3=map(servo3_deg,-90,90,1100,2700);
  servo4_deg=SS_servo4[0]/3.14159265*180;
  servo4=map(servo4_deg,-90,38,2700,1500);
  servo5_deg=SS_servo5[0]/3.14159265*180;
  servo5=map(servo5_deg,-90,90,2600,930);
  servo6_deg=SS_servo6[0]/3.14159265*180;
  servo6=map(servo6_deg,-90,38,850,2250);
  servo7_deg=SS_servo7[0]/3.14159265*180;
  servo7=map(servo7_deg,-90,90,920,2620);
        
  pca9685.setPWM(SER0,0,servo0);
  pca9685.setPWM(SER1,0,servo1);
  pca9685.setPWM(SER2,0,servo2);
  pca9685.setPWM(SER3,0,servo3);
  pca9685.setPWM(SER4,0,servo4);
  pca9685.setPWM(SER5,0,servo5);
  pca9685.setPWM(SER6,0,servo6);
  pca9685.setPWM(SER7,0,servo7);

  Serial.print("Node:");
  Serial.println(node);
  Serial.print("servo0 -> rads:");
  Serial.print(SS_servo0[node]);
  Serial.print("        deg:");
  Serial.print(servo0_deg);
  Serial.print("        us:");
  Serial.println(servo0);
  Serial.print("servo1 -> rads:");
  Serial.print(SS_servo1[node]);
  Serial.print("        deg:");
  Serial.print(servo1_deg);
  Serial.print("        us:");
  Serial.println(servo1);
  Serial.print("servo2 -> rads:");
  Serial.print(SS_servo2[node]);
  Serial.print("        deg:");
  Serial.print(servo2_deg);
  Serial.print("        us:");
  Serial.println(servo2);
  Serial.print("servo3 -> rads:");
  Serial.print(SS_servo3[node]);
  Serial.print("        deg:");
  Serial.print(servo3_deg);
  Serial.print("        us:");
  Serial.println(servo3);
  Serial.print("servo4 -> rads:");
  Serial.print(SS_servo4[node]);
  Serial.print("        deg:");
  Serial.print(servo4_deg);
  Serial.print("        us:");
  Serial.println(servo4);
  Serial.print("servo5 -> rads:");
  Serial.print(SS_servo5[node]);
  Serial.print("        deg:");
  Serial.print(servo5_deg);
  Serial.print("        us:");
  Serial.println(servo5);
  Serial.print("servo6 -> rads:");
  Serial.print(SS_servo6[node]);
  Serial.print("        deg:");
  Serial.print(servo6_deg);
  Serial.print("        us:");
  Serial.println(servo6);
  Serial.print("servo7 -> rads:");
  Serial.print(SS_servo7[node]);
  Serial.print("        deg:");
  Serial.print(servo7_deg);
  Serial.print("        us:");
  Serial.println(servo7);

  Serial.println("10");
  delay(1000);
  Serial.println("9");
  delay(1000);
  Serial.println("8");
  delay(1000);
  Serial.println("7");
  delay(1000);
  Serial.println("6");
  delay(1000);
  Serial.println("5");
  delay(1000);
  Serial.println("4");
  delay(1000);
  Serial.println("3");
  delay(1000);
  Serial.println("2");
  delay(1000);
  Serial.println("1");
  delay(1000);

}

void loop() 
{
  if(Serial.available()>0)
  {
    first=Serial.read();
    if(first=='2')
    {
      input=2;
      node=0;
      one_print=1;
    }
    if(first=='1')
    {
      input=1;
      node=0;
      one_print=1;
    }
    if(first=='0')
    {
      input=0;
    }
  }
  if(input==1 or input==2)
  {
      if(esp_timer_get_time()>=end_time)
      {
        servo0_deg=SS_servo0[node]/3.14159265*180;
        servo0=map(servo0_deg,-38,90,2200,1030);
        servo1_deg=SS_servo1[node]/3.14159265*180;
        servo1=map(servo1_deg,-90,90,2600,950);
        servo2_deg=SS_servo2[node]/3.14159265*180;
        servo2=map(servo2_deg,-38,90,1510,2730);
        servo3_deg=SS_servo3[node]/3.14159265*180;
        servo3=map(servo3_deg,-90,90,1100,2700);
        servo4_deg=SS_servo4[node]/3.14159265*180;
        servo4=map(servo4_deg,-90,38,2700,1500);
        servo5_deg=SS_servo5[node]/3.14159265*180;
        servo5=map(servo5_deg,-90,90,2600,930);
        servo6_deg=SS_servo6[node]/3.14159265*180;
        servo6=map(servo6_deg,-90,38,850,2250);
        servo7_deg=SS_servo7[node]/3.14159265*180;
        servo7=map(servo7_deg,-90,90,920,2620);
        
        pca9685.setPWM(SER0,0,servo0);
        pca9685.setPWM(SER1,0,servo1);
        pca9685.setPWM(SER2,0,servo2);
        pca9685.setPWM(SER3,0,servo3);
        pca9685.setPWM(SER4,0,servo4);
        pca9685.setPWM(SER5,0,servo5);
        pca9685.setPWM(SER6,0,servo6);
        pca9685.setPWM(SER7,0,servo7);
        
        node+=1;
        if(node>=steps and input==1)
        {
          Serial.print("Input:");
          Serial.println(input);
          node=0;
        }
        if(node>=steps and input==2)
        {
          Serial.print("Input:");
          Serial.println(input);
          input=0;
        }
         end_time=esp_timer_get_time()+time_step;
      }
   }

  if(input == 0)
  {        
        pca9685.setPWM(SER0,0,servo0);
        pca9685.setPWM(SER1,0,servo1);
        pca9685.setPWM(SER2,0,servo2);
        pca9685.setPWM(SER3,0,servo3);
        pca9685.setPWM(SER4,0,servo4);
        pca9685.setPWM(SER5,0,servo5);
        pca9685.setPWM(SER6,0,servo6);
        pca9685.setPWM(SER7,0,servo7);

        if(one_print==1)
        {
          Serial.print("Input:");
          Serial.println(input);
          Serial.print("Node:");
          Serial.println(node);
          Serial.print("servo0 -> rads:");
          Serial.print(SS_servo0[node]);
          Serial.print("        deg:");
          Serial.print(servo0_deg);
          Serial.print("        us:");
          Serial.println(servo0);
          Serial.print("servo1 -> rads:");
          Serial.print(SS_servo1[node]);
          Serial.print("        deg:");
          Serial.print(servo1_deg);
          Serial.print("        us:");
          Serial.println(servo1);
          Serial.print("servo2 -> rads:");
          Serial.print(SS_servo2[node]);
          Serial.print("        deg:");
          Serial.print(servo2_deg);
          Serial.print("        us:");
          Serial.println(servo2);
          Serial.print("servo3 -> rads:");
          Serial.print(SS_servo3[node]);
          Serial.print("        deg:");
          Serial.print(servo3_deg);
          Serial.print("        us:");
          Serial.println(servo3);
          Serial.print("servo4 -> rads:");
          Serial.print(SS_servo4[node]);
          Serial.print("        deg:");
          Serial.print(servo4_deg);
          Serial.print("        us:");
          Serial.println(servo4);
          Serial.print("servo5 -> rads:");
          Serial.print(SS_servo5[node]);
          Serial.print("        deg:");
          Serial.print(servo5_deg);
          Serial.print("        us:");
          Serial.println(servo5);
          Serial.print("servo6 -> rads:");
          Serial.print(SS_servo6[node]);
          Serial.print("        deg:");
          Serial.print(servo6_deg);
          Serial.print("        us:");
          Serial.println(servo6);
          Serial.print("servo7 -> rads:");
          Serial.print(SS_servo7[node]);
          Serial.print("        deg:");
          Serial.print(servo7_deg);
          Serial.print("        us:");
          Serial.println(servo7);
          one_print=0;
        }
  
  }
}
