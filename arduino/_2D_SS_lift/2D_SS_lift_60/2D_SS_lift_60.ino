// HOW TO:
// ------------------------------
// Serial input = 2 -> Steps through gait sequence once and stops at the end.
// Serial input = 1 -> Steps through gait sequence in a loop.
// Serial input = 0 -> Stops infinite loop at the node where it is at that moment

//Gait template
#include <Wire.h>
#include <Adafruit_PWMServoDriver.h>

Adafruit_PWMServoDriver pca9685 = Adafruit_PWMServoDriver();

#define SERVO_FREQ 300
#define SER0 0 //Hip 1
#define SER1 1 //Knee 1
#define SER2 2 //Hip 2
#define SER3 3 //Knee 2
#define SER4 4 //Hip 3
#define SER5 5 //Knee 3
#define SER6 6 //Hip 4
#define SER7 7 //Knee 4

// Insert servo angles here:
// For 3D gaits, these angles are obtained from linearisation.py
// For 2D gaits, these angles are obtained from 2D_trajectory_reader.py
float SS_servo0[] = {-0.24087407, -0.26748764, -0.3063656 , -0.34396648, -0.37787508, -0.40480457, -0.42506108, -0.43807482, -0.44039441, -0.43071883, -0.41686224, -0.39851281, -0.37342453, -0.34833624, -0.32324796, -0.29815967, -0.27307139, -0.246276  , -0.21644764, -0.18661927, -0.15679091, -0.12696255, -0.09804348, -0.07066092, -0.0398181 , -0.02254707, -0.01807582, -0.01750124, -0.02053154, -0.02514841, -0.03194456, -0.03865427, -0.04347655, -0.04476382, -0.04793498, -0.05680407, -0.06567316, -0.07584268, -0.08991702, -0.10375292, -0.11303734, -0.11940904, -0.12043628, -0.11698679, -0.11722571, -0.11868455, -0.12432062, -0.1289995 , -0.13509241, -0.13936192, -0.14381251, -0.14771368, -0.15171638, -0.15626776, -0.15973862, -0.16435415, -0.17021966, -0.17372491, -0.18576123, -0.19779755, -0.21469341, -0.23405682, -0.24672154, -0.25092438, -0.24285153, -0.23037537, -0.22043219, -0.21399711, -0.20812285, -0.20378447, -0.20216587, -0.20227385, -0.2026434 , -0.20090445, -0.20003213, -0.19946708, -0.20031897, -0.20278785, -0.20624978, -0.2148285 , -0.22912994};
float SS_servo1[] = {0.17152876, 0.20755389, 0.26610279, 0.33177246, 0.39525668, 0.44397726, 0.47906518, 0.49942142, 0.49344831, 0.46244505, 0.42667207, 0.39220588, 0.35969976, 0.32719364, 0.29468752, 0.2621814 , 0.22967527, 0.2058311 , 0.1973764 , 0.18892171, 0.18046702, 0.17201232, 0.1852161 , 0.19683898, 0.16224128, 0.11859176, 0.10111982, 0.09240801, 0.09062906, 0.09280435, 0.10046137, 0.10538752, 0.10496319, 0.0993607 , 0.09462715, 0.10097882, 0.10733049, 0.1152601 , 0.12792783, 0.14008881, 0.14685316, 0.1488273 , 0.14026175, 0.12172791, 0.10811364, 0.09521383, 0.08573648, 0.08448925, 0.08723495, 0.08837767, 0.08967778, 0.09088912, 0.09220615, 0.09407307, 0.0941618 , 0.09443948, 0.09812815, 0.10062326, 0.1187619 , 0.13690053, 0.16710977, 0.20344817, 0.22360962, 0.22560885, 0.2039868 , 0.17351951, 0.15104958, 0.13439395, 0.12028885, 0.1096609 , 0.10519038, 0.10324482, 0.10315572, 0.09831836, 0.09632382, 0.09522503, 0.0971479 , 0.102519  , 0.10919593, 0.12460426, 0.15312078};
float SS_servo2[] = { 0.07059069,  0.07656982,  0.07881668,  0.07393034,  0.06757646,  0.05908317,  0.04889435,  0.0380096 ,  0.03013574,  0.02554702,  0.02177493,  0.01810359,  0.01458334,  0.01106309,  0.00754284,  0.00402259,  0.00050234, -0.00435867, -0.01160178, -0.01884489, -0.02608799, -0.0333311 , -0.04085505, -0.05457905, -0.06640181, -0.07306943, -0.07474179, -0.07427158, -0.07343447, -0.07186078, -0.06914205, -0.06902965, -0.07471114, -0.08227072, -0.08930708, -0.09499832, -0.10068956, -0.10601708, -0.11025241, -0.11481678, -0.1217736 , -0.1279147 , -0.13361181, -0.13525725, -0.14127326, -0.15241199, -0.17164234, -0.18791589, -0.20176488, -0.21269582, -0.21918764, -0.21896335, -0.2104196 , -0.19362238, -0.1696839 , -0.13949159, -0.10391217, -0.06449115, -0.02570502,  0.01308111,  0.05125752,  0.08912433,  0.11011486,  0.11803092,  0.11761969,  0.11466825,  0.11353151,  0.11211247,  0.11062717,  0.10939561,  0.10861338,  0.10868461,  0.10804253,  0.1060806 ,  0.10405292,  0.10206192,  0.09962682,  0.09668491,  0.09219852,  0.08339702,  0.0708683 };
float SS_servo3[] = {0.17100722, 0.1412851 , 0.11342474, 0.10192062, 0.09507524, 0.09349648, 0.09665493, 0.10295799, 0.10411485, 0.09946722, 0.0938783 , 0.08931323, 0.08628383, 0.08325444, 0.08022504, 0.07719565, 0.07416625, 0.07448415, 0.0807491 , 0.08701405, 0.093279  , 0.09954395, 0.11030808, 0.12866273, 0.14700202, 0.15177196, 0.146801  , 0.13830747, 0.12873612, 0.11840739, 0.10681757, 0.09793572, 0.09926209, 0.10638984, 0.10947845, 0.10945643, 0.10943441, 0.10761952, 0.10042117, 0.09386017, 0.09590394, 0.0974042 , 0.09827471, 0.09076086, 0.106987  , 0.14346034, 0.21057821, 0.29326507, 0.37546093, 0.4581416 , 0.53197117, 0.58958995, 0.62157957, 0.62619467, 0.6079191 , 0.56532139, 0.50516635, 0.43366152, 0.36855741, 0.30345331, 0.23948324, 0.176089  , 0.13081212, 0.10800624, 0.10321765, 0.10359815, 0.10334817, 0.10243861, 0.10315679, 0.10375808, 0.10415235, 0.10182845, 0.10232321, 0.10496488, 0.10891416, 0.11308152, 0.11832936, 0.12481022, 0.13376347, 0.15001204, 0.17563155};
float SS_servo4[] = { 0.20340111,  0.18669043,  0.16713357,  0.15382811,  0.14171846,  0.1318248 ,  0.12446802,  0.1194297 ,  0.11304722,  0.10252813,  0.0902105 ,  0.08015759,  0.07350157,  0.06684555,  0.06018953,  0.05353351,  0.04687749,  0.04291868,  0.04375194,  0.0445852 ,  0.04541846,  0.04625172,  0.05211673,  0.05462067,  0.05480338,  0.04857557,  0.03629728,  0.0267292 ,  0.02001541,  0.01547454,  0.01385244,  0.00933628,  0.00497099,  0.00269372, -0.00264182,  0.00194021,  0.00652224,  0.0135525 ,  0.02793417,  0.04241124,  0.04984762,  0.04479741,  0.03367413,  0.02622082,  0.03193386,  0.04019318,  0.04725157,  0.04518614,  0.03286931,  0.0132745 , -0.00729171, -0.02734727, -0.0474714 , -0.06808387, -0.08773005, -0.10424642, -0.10771762, -0.10410539, -0.10128713, -0.09846887, -0.09511331, -0.09148491, -0.08652811, -0.08169669, -0.07160951, -0.04827524, -0.01257443,  0.02715234,  0.0671023 ,  0.10656052,  0.14514797,  0.17781266,  0.2011895 ,  0.21695717,  0.22285846,  0.22739428,  0.22785705,  0.22367178,  0.21744504,  0.20867966,  0.20819988};
float SS_servo5[] = {-0.13746629, -0.12095213, -0.10443256, -0.09878484, -0.09388784, -0.09259634, -0.09516643, -0.10070314, -0.10252786, -0.09510585, -0.08326758, -0.07482993, -0.07149287, -0.06815581, -0.06481875, -0.0614817 , -0.05814464, -0.05965845, -0.06979068, -0.07992291, -0.09005514, -0.10018737, -0.11656315, -0.13111384, -0.1371515 , -0.13327449, -0.1167463 , -0.10486691, -0.09919726, -0.09720595, -0.10007961, -0.09960184, -0.10096784, -0.10457457, -0.10489905, -0.1258971 , -0.14689516, -0.17400466, -0.21946518, -0.26517425, -0.29265838, -0.29342338, -0.2814975 , -0.27803204, -0.30431815, -0.33775526, -0.37401819, -0.38087886, -0.36529368, -0.33248503, -0.29791064, -0.26337429, -0.22884972, -0.19392945, -0.16064904, -0.13603424, -0.13716195, -0.1452499 , -0.14590538, -0.14656087, -0.13837815, -0.1257076 , -0.1173335 , -0.09612309, -0.10064892, -0.15398586, -0.2308178 , -0.31923874, -0.4041638 , -0.48474309, -0.55762678, -0.60657115, -0.61631798, -0.59853248, -0.54027297, -0.47607644, -0.40194663, -0.31648125, -0.23280991, -0.15344611, -0.14199902};
float SS_servo6[] = {0.20733112, 0.19666176, 0.18309247, 0.16860588, 0.1545452 , 0.14062961, 0.12659279, 0.11238856, 0.09824489, 0.0897154 , 0.08463757, 0.07970138, 0.07497762, 0.07025387, 0.06553011, 0.06080635, 0.0560826 , 0.05127872, 0.04633249, 0.04138627, 0.03644004, 0.03149381, 0.02868798, 0.02440127, 0.02657391, 0.03878192, 0.06947318, 0.10505409, 0.14207092, 0.17935689, 0.21694351, 0.24729233, 0.26747044, 0.27388642, 0.27217251, 0.25934936, 0.24652622, 0.23198043, 0.21226198, 0.19535781, 0.20145202, 0.21447561, 0.24101277, 0.26652642, 0.27120909, 0.26601665, 0.25130024, 0.25053352, 0.2468346 , 0.24009346, 0.233178  , 0.22779452, 0.22306739, 0.21898467, 0.21606308, 0.21361101, 0.20861461, 0.20403161, 0.20051229, 0.19699297, 0.19388522, 0.19098647, 0.18840941, 0.1878693 , 0.18787554, 0.18246275, 0.17726989, 0.17287949, 0.1709484 , 0.17055579, 0.17288754, 0.17231816, 0.17200055, 0.16807703, 0.16657196, 0.16574587, 0.16689248, 0.17029027, 0.1748675 , 0.18538078, 0.20567212};
float SS_servo7[] = {-0.1759802 , -0.17161161, -0.16712879, -0.1590943 , -0.15029197, -0.14085949, -0.12990901, -0.116909  , -0.10305891, -0.09965598, -0.10241544, -0.10429526, -0.10485568, -0.10541611, -0.10597654, -0.10653697, -0.1070974 , -0.10688807, -0.10531115, -0.10373422, -0.10215729, -0.10058037, -0.09938511, -0.10016943, -0.11024905, -0.14382479, -0.21478486, -0.29599264, -0.38180552, -0.46696044, -0.55083764, -0.61062309, -0.63511525, -0.60536441, -0.55621342, -0.46487817, -0.37354292, -0.28098294, -0.1847454 , -0.10700708, -0.13130024, -0.16834666, -0.23136482, -0.27697707, -0.24789284, -0.18395969, -0.11522532, -0.12450235, -0.12675098, -0.12078106, -0.11465773, -0.11055484, -0.10785475, -0.10698002, -0.10802764, -0.11214642, -0.11018692, -0.10547048, -0.10446555, -0.10346062, -0.1008991 , -0.09754719, -0.09751305, -0.10286479, -0.10842305, -0.10306437, -0.09515802, -0.09003434, -0.08846575, -0.08960542, -0.09554094, -0.09655088, -0.09675281, -0.09014805, -0.0873542 , -0.08566084, -0.08777633, -0.09423837, -0.10372614, -0.12669086, -0.16757518};

int node=0;
int first=0;
int input=0;
int end_time=0;
int time_step=120000; //was 120000
int steps = sizeof(SS_servo0)/sizeof(SS_servo0[0]);
int one_print = 0;

// -------------------Joint configurations-------------------
int servo0=0;
int servo0_deg=0;
int servo1=0;
int servo1_deg=0;
int servo2=0;
int servo2_deg=0;
int servo3=0;
int servo3_deg=0;
int servo4=0;
int servo4_deg=0;
int servo5=0;
int servo5_deg=0;
int servo6=0;
int servo6_deg=0;
int servo7=0;
int servo7_deg=0;

void setup() {
  Serial.begin(115200);
  pca9685.begin();

  pca9685.setOscillatorFrequency(27000000); //Value between 24MHz and 27MHz, tuned for this setup
  pca9685.setPWMFreq(SERVO_FREQ);
  delay (1000);

  servo0_deg=SS_servo0[0]/3.14159265*180;
  servo0=map(servo0_deg,-38,90,2200,1030);
  servo1_deg=SS_servo1[0]/3.14159265*180;
  servo1=map(servo1_deg,-90,90,2600,950);
  servo2_deg=SS_servo2[0]/3.14159265*180;
  servo2=map(servo2_deg,-38,90,1510,2730);
  servo3_deg=SS_servo3[0]/3.14159265*180;
  servo3=map(servo3_deg,-90,90,1100,2700);
  servo4_deg=SS_servo4[0]/3.14159265*180;
  servo4=map(servo4_deg,-90,38,2700,1500);
  servo5_deg=SS_servo5[0]/3.14159265*180;
  servo5=map(servo5_deg,-90,90,2600,930);
  servo6_deg=SS_servo6[0]/3.14159265*180;
  servo6=map(servo6_deg,-90,38,850,2250);
  servo7_deg=SS_servo7[0]/3.14159265*180;
  servo7=map(servo7_deg,-90,90,920,2620);
        
  pca9685.setPWM(SER0,0,servo0);
  pca9685.setPWM(SER1,0,servo1);
  pca9685.setPWM(SER2,0,servo2);
  pca9685.setPWM(SER3,0,servo3);
  pca9685.setPWM(SER4,0,servo4);
  pca9685.setPWM(SER5,0,servo5);
  pca9685.setPWM(SER6,0,servo6);
  pca9685.setPWM(SER7,0,servo7);

  Serial.print("Node:");
  Serial.println(node);
  Serial.print("servo0 -> rads:");
  Serial.print(SS_servo0[node]);
  Serial.print("        deg:");
  Serial.print(servo0_deg);
  Serial.print("        us:");
  Serial.println(servo0);
  Serial.print("servo1 -> rads:");
  Serial.print(SS_servo1[node]);
  Serial.print("        deg:");
  Serial.print(servo1_deg);
  Serial.print("        us:");
  Serial.println(servo1);
  Serial.print("servo2 -> rads:");
  Serial.print(SS_servo2[node]);
  Serial.print("        deg:");
  Serial.print(servo2_deg);
  Serial.print("        us:");
  Serial.println(servo2);
  Serial.print("servo3 -> rads:");
  Serial.print(SS_servo3[node]);
  Serial.print("        deg:");
  Serial.print(servo3_deg);
  Serial.print("        us:");
  Serial.println(servo3);
  Serial.print("servo4 -> rads:");
  Serial.print(SS_servo4[node]);
  Serial.print("        deg:");
  Serial.print(servo4_deg);
  Serial.print("        us:");
  Serial.println(servo4);
  Serial.print("servo5 -> rads:");
  Serial.print(SS_servo5[node]);
  Serial.print("        deg:");
  Serial.print(servo5_deg);
  Serial.print("        us:");
  Serial.println(servo5);
  Serial.print("servo6 -> rads:");
  Serial.print(SS_servo6[node]);
  Serial.print("        deg:");
  Serial.print(servo6_deg);
  Serial.print("        us:");
  Serial.println(servo6);
  Serial.print("servo7 -> rads:");
  Serial.print(SS_servo7[node]);
  Serial.print("        deg:");
  Serial.print(servo7_deg);
  Serial.print("        us:");
  Serial.println(servo7);

  Serial.println("10");
  delay(1000);
  Serial.println("9");
  delay(1000);
  Serial.println("8");
  delay(1000);
  Serial.println("7");
  delay(1000);
  Serial.println("6");
  delay(1000);
  Serial.println("5");
  delay(1000);
  Serial.println("4");
  delay(1000);
  Serial.println("3");
  delay(1000);
  Serial.println("2");
  delay(1000);
  Serial.println("1");
  delay(1000);

}

void loop() 
{
  if(Serial.available()>0)
  {
    first=Serial.read();
    if(first=='2')
    {
      input=2;
      node=0;
      one_print=1;
    }
    if(first=='1')
    {
      input=1;
      node=0;
      one_print=1;
    }
    if(first=='0')
    {
      input=0;
    }
  }
  if(input==1 or input==2)
  {
      if(esp_timer_get_time()>=end_time)
      {
        servo0_deg=SS_servo0[node]/3.14159265*180;
        servo0=map(servo0_deg,-38,90,2200,1030);
        servo1_deg=SS_servo1[node]/3.14159265*180;
        servo1=map(servo1_deg,-90,90,2600,950);
        servo2_deg=SS_servo2[node]/3.14159265*180;
        servo2=map(servo2_deg,-38,90,1510,2730);
        servo3_deg=SS_servo3[node]/3.14159265*180;
        servo3=map(servo3_deg,-90,90,1100,2700);
        servo4_deg=SS_servo4[node]/3.14159265*180;
        servo4=map(servo4_deg,-90,38,2700,1500);
        servo5_deg=SS_servo5[node]/3.14159265*180;
        servo5=map(servo5_deg,-90,90,2600,930);
        servo6_deg=SS_servo6[node]/3.14159265*180;
        servo6=map(servo6_deg,-90,38,850,2250);
        servo7_deg=SS_servo7[node]/3.14159265*180;
        servo7=map(servo7_deg,-90,90,920,2620);
        
        pca9685.setPWM(SER0,0,servo0);
        pca9685.setPWM(SER1,0,servo1);
        pca9685.setPWM(SER2,0,servo2);
        pca9685.setPWM(SER3,0,servo3);
        pca9685.setPWM(SER4,0,servo4);
        pca9685.setPWM(SER5,0,servo5);
        pca9685.setPWM(SER6,0,servo6);
        pca9685.setPWM(SER7,0,servo7);
        
        node+=1;
        if(node>=steps and input==1)
        {
          Serial.print("Input:");
          Serial.println(input);
          node=0;
        }
        if(node>=steps and input==2)
        {
          Serial.print("Input:");
          Serial.println(input);
          input=0;
        }
         end_time=esp_timer_get_time()+time_step;
      }
   }

  if(input == 0)
  {        
        pca9685.setPWM(SER0,0,servo0);
        pca9685.setPWM(SER1,0,servo1);
        pca9685.setPWM(SER2,0,servo2);
        pca9685.setPWM(SER3,0,servo3);
        pca9685.setPWM(SER4,0,servo4);
        pca9685.setPWM(SER5,0,servo5);
        pca9685.setPWM(SER6,0,servo6);
        pca9685.setPWM(SER7,0,servo7);

        if(one_print==1)
        {
          Serial.print("Input:");
          Serial.println(input);
          Serial.print("Node:");
          Serial.println(node);
          Serial.print("servo0 -> rads:");
          Serial.print(SS_servo0[node]);
          Serial.print("        deg:");
          Serial.print(servo0_deg);
          Serial.print("        us:");
          Serial.println(servo0);
          Serial.print("servo1 -> rads:");
          Serial.print(SS_servo1[node]);
          Serial.print("        deg:");
          Serial.print(servo1_deg);
          Serial.print("        us:");
          Serial.println(servo1);
          Serial.print("servo2 -> rads:");
          Serial.print(SS_servo2[node]);
          Serial.print("        deg:");
          Serial.print(servo2_deg);
          Serial.print("        us:");
          Serial.println(servo2);
          Serial.print("servo3 -> rads:");
          Serial.print(SS_servo3[node]);
          Serial.print("        deg:");
          Serial.print(servo3_deg);
          Serial.print("        us:");
          Serial.println(servo3);
          Serial.print("servo4 -> rads:");
          Serial.print(SS_servo4[node]);
          Serial.print("        deg:");
          Serial.print(servo4_deg);
          Serial.print("        us:");
          Serial.println(servo4);
          Serial.print("servo5 -> rads:");
          Serial.print(SS_servo5[node]);
          Serial.print("        deg:");
          Serial.print(servo5_deg);
          Serial.print("        us:");
          Serial.println(servo5);
          Serial.print("servo6 -> rads:");
          Serial.print(SS_servo6[node]);
          Serial.print("        deg:");
          Serial.print(servo6_deg);
          Serial.print("        us:");
          Serial.println(servo6);
          Serial.print("servo7 -> rads:");
          Serial.print(SS_servo7[node]);
          Serial.print("        deg:");
          Serial.print(servo7_deg);
          Serial.print("        us:");
          Serial.println(servo7);
          one_print=0;
        }
  
  }
}
