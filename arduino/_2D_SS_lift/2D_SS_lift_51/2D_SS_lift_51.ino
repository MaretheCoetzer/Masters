// HOW TO:
// ------------------------------
// Serial input = 2 -> Steps through gait sequence once and stops at the end.
// Serial input = 1 -> Steps through gait sequence in a loop.
// Serial input = 0 -> Stops infinite loop at the node where it is at that moment

//Gait template
#include <Wire.h>
#include <Adafruit_PWMServoDriver.h>

Adafruit_PWMServoDriver pca9685 = Adafruit_PWMServoDriver();

#define SERVO_FREQ 300
#define SER0 0 //Hip 1
#define SER1 1 //Knee 1
#define SER2 2 //Hip 2
#define SER3 3 //Knee 2
#define SER4 4 //Hip 3
#define SER5 5 //Knee 3
#define SER6 6 //Hip 4
#define SER7 7 //Knee 4

// Insert servo angles here:
// For 3D gaits, these angles are obtained from linearisation.py
// For 2D gaits, these angles are obtained from 2D_trajectory_reader.py
float SS_servo0[] = {-0.21635789, -0.20392215, -0.20169397, -0.2106271 , -0.22177824, -0.23265104, -0.24352383, -0.25439663, -0.26526942, -0.27515316, -0.28259773, -0.29004229, -0.29748686, -0.29941398, -0.28880538, -0.26799872, -0.24060518, -0.21123983, -0.18187448, -0.14971311, -0.11364966, -0.07758074, -0.04284794, -0.02322846, -0.01966596, -0.02273432, -0.02624328, -0.02991387, -0.03331246, -0.03684851, -0.03988607, -0.04292364, -0.04534815, -0.04714588, -0.04711205, -0.04893953, -0.05284512, -0.05984859, -0.06767008, -0.07445493, -0.08099682, -0.08684741, -0.09374673, -0.10524186, -0.1154535 , -0.12468828, -0.12400035, -0.11716342, -0.11210313, -0.11056245, -0.1109332 , -0.1119368 , -0.11294041, -0.11394401, -0.11494762, -0.12184115, -0.12939881, -0.13695646, -0.14474634, -0.14683775, -0.14871479, -0.14939947, -0.15266735, -0.15494174, -0.16257328, -0.17483101, -0.19588714, -0.21928987, -0.23234909, -0.23284192, -0.2261672 , -0.21832581, -0.21105372, -0.20748212, -0.20326028, -0.19903843, -0.1948616 , -0.19079067, -0.1867235 , -0.18343131, -0.18145248, -0.18309786, -0.18662739, -0.18912271, -0.19192729, -0.19662172, -0.20897967};
float SS_servo1[] = {0.15468055, 0.11724023, 0.10192789, 0.14192199, 0.19440845, 0.25820646, 0.32200448, 0.3858025 , 0.44960052, 0.51236702, 0.57258962, 0.63281222, 0.69303482, 0.7363173 , 0.7313769 , 0.68227067, 0.61609895, 0.54558133, 0.4750637 , 0.40035641, 0.31980206, 0.2392419 , 0.16276555, 0.11680421, 0.10104726, 0.09928399, 0.0996634 , 0.09893218, 0.09912248, 0.10245492, 0.10315232, 0.10384971, 0.10298842, 0.10053354, 0.0937487 , 0.0920652 , 0.09486136, 0.10319891, 0.11074647, 0.11663929, 0.12148624, 0.12335738, 0.12624683, 0.13434032, 0.13906334, 0.13632786, 0.1248717 , 0.10355922, 0.08683924, 0.0785842 , 0.07397942, 0.07058319, 0.06718697, 0.06379074, 0.06039451, 0.06886054, 0.07866411, 0.08846767, 0.09891683, 0.10016314, 0.09879562, 0.09565639, 0.0968494 , 0.09889116, 0.10935486, 0.13034207, 0.16807062, 0.21161298, 0.23708112, 0.22875738, 0.21004174, 0.18788497, 0.17053914, 0.15945149, 0.14869511, 0.13793874, 0.12786551, 0.1193993 , 0.11096233, 0.10232022, 0.09963883, 0.1017654 , 0.10790106, 0.11515904, 0.11886002, 0.12849587, 0.14885073};
float SS_servo2[] = { 0.05995534,  0.06393066,  0.06855603,  0.06762923,  0.06413712,  0.05892578,  0.05371443,  0.04850309,  0.04329175,  0.03630529,  0.02494107,  0.01357686,  0.00221265, -0.00647283, -0.00965622, -0.00921568, -0.01069057, -0.01286427, -0.01503798, -0.02023205, -0.02964132, -0.03909168, -0.05174952, -0.05956018, -0.06189964, -0.06049552, -0.05701336, -0.05608655, -0.05893376, -0.05750861, -0.05960726, -0.06170591, -0.06559878, -0.07132605, -0.0773522 , -0.0809883 , -0.08295891, -0.08253393, -0.08338099, -0.0864959 , -0.09093925, -0.09916244, -0.10764921, -0.11582239, -0.1213267 , -0.1270923 , -0.13223065, -0.13733538, -0.13825045, -0.13871301, -0.14340193, -0.14949015, -0.15557837, -0.1616666 , -0.16775482, -0.17481824, -0.18199162, -0.18916499, -0.19471285, -0.19129612, -0.17740968, -0.1535437 , -0.12185469, -0.0839667 , -0.04511947, -0.00674182,  0.03029618,  0.06768371,  0.09805755,  0.10381253,  0.1034879 ,  0.1004605 ,  0.10079332,  0.1015509 ,  0.10076373,  0.09997657,  0.09868317,  0.0961989 ,  0.09372462,  0.09151294,  0.09219954,  0.09268162,  0.09421909,  0.09576671,  0.09107823,  0.08321168,  0.07021687};
float SS_servo3[] = {0.15685564, 0.13601903, 0.10588525, 0.09028568, 0.07958573, 0.07522831, 0.07087089, 0.06651347, 0.06215604, 0.06233087, 0.07368302, 0.08503516, 0.09638731, 0.10514752, 0.10150178, 0.0913541 , 0.08644385, 0.08325687, 0.08006989, 0.08348286, 0.09610667, 0.10881153, 0.12882009, 0.13859876, 0.13484712, 0.12401483, 0.11024264, 0.10020292, 0.09929772, 0.09258112, 0.0913764 , 0.09017168, 0.09228462, 0.09778951, 0.10327837, 0.10530126, 0.10421815, 0.09754001, 0.09095986, 0.08940581, 0.08998666, 0.096642  , 0.10273528, 0.10411373, 0.09931868, 0.08955055, 0.08983336, 0.09263728, 0.09089214, 0.09673865, 0.13269768, 0.17862661, 0.22455555, 0.27048448, 0.31641342, 0.38970516, 0.46608221, 0.54245926, 0.6177729 , 0.67269691, 0.68655417, 0.66371145, 0.60682503, 0.52702719, 0.43890092, 0.35546719, 0.27410634, 0.19299835, 0.12989932, 0.10863687, 0.10380842, 0.10341022, 0.09988866, 0.09435374, 0.09365264, 0.09295154, 0.09388973, 0.09868414, 0.10347945, 0.10598721, 0.10593366, 0.10381365, 0.09971387, 0.09879938, 0.10641598, 0.12272106, 0.14486634};
float SS_servo4[] = { 0.24227199,  0.22235613,  0.20029362,  0.18593662,  0.17236127,  0.16333276,  0.15430424,  0.14527572,  0.1362472 ,  0.12942055,  0.12802408,  0.1266276 ,  0.12523113,  0.12459256,  0.11760209,  0.10692946,  0.10126006,  0.09738089,  0.09350173,  0.09111921,  0.0908254 ,  0.09052498,  0.08915938,  0.08875326,  0.0914793 ,  0.09384959,  0.09438355,  0.08930361,  0.07702   ,  0.06672633,  0.06093797,  0.05514962,  0.05210384,  0.05186204,  0.04912122,  0.04672713,  0.04413556,  0.03955213,  0.03512131,  0.03511489,  0.03753767,  0.04687225,  0.06038321,  0.08343715,  0.11325988,  0.13409754,  0.14027114,  0.13134565,  0.11831423,  0.10670483,  0.09776628,  0.08971202,  0.08165776,  0.0736035 ,  0.06554923,  0.05757055,  0.0496004 ,  0.04163024,  0.03325698,  0.02549089,  0.01729126,  0.00917841,  0.00035782, -0.00821554, -0.01858251, -0.03012721, -0.04396643, -0.0573966 , -0.06620314, -0.06898365, -0.05346619, -0.02600507,  0.01126423,  0.05064594,  0.08935001,  0.12805407,  0.16553535,  0.20014018,  0.23461884,  0.26049512,  0.27398175,  0.28004827,  0.27827681,  0.27320597,  0.2673987 ,  0.26178027,  0.25392803};
float SS_servo5[] = {-0.15863203, -0.13124237, -0.10734706, -0.0957402 , -0.08601573, -0.08266941, -0.07932309, -0.07597676, -0.07263044, -0.072811  , -0.08168947, -0.09056794, -0.09944641, -0.10695901, -0.10286627, -0.09050172, -0.08690655, -0.08662488, -0.08634321, -0.08861881, -0.09446332, -0.10029682, -0.10317493, -0.10840906, -0.12239465, -0.1351537 , -0.14293614, -0.14078115, -0.12260692, -0.10555355, -0.09932025, -0.09308694, -0.09272775, -0.0983742 , -0.09951885, -0.10005898, -0.09993596, -0.09649479, -0.09580284, -0.10368326, -0.11705532, -0.14605284, -0.18464115, -0.24682755, -0.32377705, -0.38821532, -0.41115721, -0.40054853, -0.38053794, -0.3620831 , -0.34925087, -0.33828021, -0.32730956, -0.3163389 , -0.30536825, -0.29456296, -0.28377631, -0.27298966, -0.26118287, -0.24827608, -0.23670886, -0.22467834, -0.21205428, -0.19707846, -0.18080666, -0.16092939, -0.13727909, -0.11329144, -0.09600808, -0.09975879, -0.1370903 , -0.20045397, -0.28291073, -0.37138325, -0.45191762, -0.532452  , -0.60531156, -0.66011707, -0.71427894, -0.73388088, -0.70118867, -0.6451505 , -0.5625804 , -0.46508356, -0.37671705, -0.29489026, -0.21351369};
float SS_servo6[] = {0.24704413, 0.23774224, 0.22079084, 0.20313743, 0.18629016, 0.17396958, 0.16164901, 0.14932843, 0.13700786, 0.12522258, 0.11475745, 0.10429231, 0.09382718, 0.08396428, 0.07685797, 0.07179432, 0.06506572, 0.05760835, 0.05015098, 0.04284157, 0.03573864, 0.02864841, 0.02338828, 0.02014114, 0.01678284, 0.01620973, 0.01810522, 0.02754807, 0.05740377, 0.09579428, 0.13677211, 0.17774993, 0.21829502, 0.25839769, 0.29530512, 0.32000513, 0.33691423, 0.34354121, 0.34157278, 0.33552164, 0.32769142, 0.31479915, 0.3003616 , 0.28209638, 0.25958235, 0.23546485, 0.23016447, 0.22726846, 0.22326882, 0.21845533, 0.21450526, 0.21084107, 0.20717687, 0.20351267, 0.19984848, 0.19841416, 0.19723127, 0.19604839, 0.19483151, 0.19272424, 0.18961084, 0.18665414, 0.18398169, 0.18194741, 0.17901915, 0.17760688, 0.17826418, 0.18161956, 0.18716081, 0.18710852, 0.17887742, 0.16452919, 0.15712028, 0.15139367, 0.14895451, 0.14651535, 0.14603098, 0.150145  , 0.15432451, 0.15396787, 0.15421482, 0.15371654, 0.15480369, 0.16216631, 0.17337969, 0.19947208, 0.22963271};
float SS_servo7[] = {-0.29894866, -0.29281267, -0.27919288, -0.26094583, -0.24460561, -0.23462058, -0.22463556, -0.21465053, -0.2046655 , -0.19483549, -0.18538777, -0.17594005, -0.16649233, -0.15538093, -0.15106989, -0.15004623, -0.14428316, -0.13673299, -0.12918281, -0.12146272, -0.11350551, -0.10557623, -0.10058443, -0.10008161, -0.10179069, -0.10224419, -0.11105344, -0.13843507, -0.20613514, -0.29087354, -0.38381402, -0.4767545 , -0.56728565, -0.65535353, -0.73089644, -0.7581052 , -0.75608503, -0.71744453, -0.65464845, -0.57870287, -0.50030887, -0.41494835, -0.33121842, -0.24995955, -0.16701166, -0.1096916 , -0.10923931, -0.11099917, -0.10952221, -0.10505216, -0.10249771, -0.1005775 , -0.09865729, -0.09673708, -0.09481687, -0.09739531, -0.10048099, -0.10356668, -0.10638528, -0.10507937, -0.10396017, -0.10252477, -0.10251512, -0.10095296, -0.09993585, -0.10076567, -0.10666317, -0.11678874, -0.12857173, -0.13772199, -0.12650952, -0.1040959 , -0.09192282, -0.08426587, -0.08165666, -0.07904744, -0.07978774, -0.08840731, -0.09713633, -0.09839159, -0.0975811 , -0.09776243, -0.10092283, -0.11355988, -0.13809564, -0.19033374, -0.25518628};

int node=0;
int first=0;
int input=0;
int end_time=0;
int time_step=120000;
int steps = sizeof(SS_servo0)/sizeof(SS_servo0[0]);
int one_print = 0;

// -------------------Joint configurations-------------------
int servo0=0;
int servo0_deg=0;
int servo1=0;
int servo1_deg=0;
int servo2=0;
int servo2_deg=0;
int servo3=0;
int servo3_deg=0;
int servo4=0;
int servo4_deg=0;
int servo5=0;
int servo5_deg=0;
int servo6=0;
int servo6_deg=0;
int servo7=0;
int servo7_deg=0;

void setup() {
  Serial.begin(115200);
  pca9685.begin();

  pca9685.setOscillatorFrequency(27000000); //Value between 24MHz and 27MHz, tuned for this setup
  pca9685.setPWMFreq(SERVO_FREQ);
  delay (1000);

  servo0_deg=SS_servo0[0]/3.14159265*180;
  servo0=map(servo0_deg,-38,90,2200,1030);
  servo1_deg=SS_servo1[0]/3.14159265*180;
  servo1=map(servo1_deg,-90,90,2600,950);
  servo2_deg=SS_servo2[0]/3.14159265*180;
  servo2=map(servo2_deg,-38,90,1510,2730);
  servo3_deg=SS_servo3[0]/3.14159265*180;
  servo3=map(servo3_deg,-90,90,1100,2700);
  servo4_deg=SS_servo4[0]/3.14159265*180;
  servo4=map(servo4_deg,-90,38,2700,1500);
  servo5_deg=SS_servo5[0]/3.14159265*180;
  servo5=map(servo5_deg,-90,90,2600,930);
  servo6_deg=SS_servo6[0]/3.14159265*180;
  servo6=map(servo6_deg,-90,38,850,2250);
  servo7_deg=SS_servo7[0]/3.14159265*180;
  servo7=map(servo7_deg,-90,90,920,2620);
        
  pca9685.setPWM(SER0,0,servo0);
  pca9685.setPWM(SER1,0,servo1);
  pca9685.setPWM(SER2,0,servo2);
  pca9685.setPWM(SER3,0,servo3);
  pca9685.setPWM(SER4,0,servo4);
  pca9685.setPWM(SER5,0,servo5);
  pca9685.setPWM(SER6,0,servo6);
  pca9685.setPWM(SER7,0,servo7);

  Serial.print("Node:");
  Serial.println(node);
  Serial.print("servo0 -> rads:");
  Serial.print(SS_servo0[node]);
  Serial.print("        deg:");
  Serial.print(servo0_deg);
  Serial.print("        us:");
  Serial.println(servo0);
  Serial.print("servo1 -> rads:");
  Serial.print(SS_servo1[node]);
  Serial.print("        deg:");
  Serial.print(servo1_deg);
  Serial.print("        us:");
  Serial.println(servo1);
  Serial.print("servo2 -> rads:");
  Serial.print(SS_servo2[node]);
  Serial.print("        deg:");
  Serial.print(servo2_deg);
  Serial.print("        us:");
  Serial.println(servo2);
  Serial.print("servo3 -> rads:");
  Serial.print(SS_servo3[node]);
  Serial.print("        deg:");
  Serial.print(servo3_deg);
  Serial.print("        us:");
  Serial.println(servo3);
  Serial.print("servo4 -> rads:");
  Serial.print(SS_servo4[node]);
  Serial.print("        deg:");
  Serial.print(servo4_deg);
  Serial.print("        us:");
  Serial.println(servo4);
  Serial.print("servo5 -> rads:");
  Serial.print(SS_servo5[node]);
  Serial.print("        deg:");
  Serial.print(servo5_deg);
  Serial.print("        us:");
  Serial.println(servo5);
  Serial.print("servo6 -> rads:");
  Serial.print(SS_servo6[node]);
  Serial.print("        deg:");
  Serial.print(servo6_deg);
  Serial.print("        us:");
  Serial.println(servo6);
  Serial.print("servo7 -> rads:");
  Serial.print(SS_servo7[node]);
  Serial.print("        deg:");
  Serial.print(servo7_deg);
  Serial.print("        us:");
  Serial.println(servo7);

  Serial.println("10");
  delay(1000);
  Serial.println("9");
  delay(1000);
  Serial.println("8");
  delay(1000);
  Serial.println("7");
  delay(1000);
  Serial.println("6");
  delay(1000);
  Serial.println("5");
  delay(1000);
  Serial.println("4");
  delay(1000);
  Serial.println("3");
  delay(1000);
  Serial.println("2");
  delay(1000);
  Serial.println("1");
  delay(1000);

}

void loop() 
{
  if(Serial.available()>0)
  {
    first=Serial.read();
    if(first=='2')
    {
      input=2;
      node=0;
      one_print=1;
    }
    if(first=='1')
    {
      input=1;
      node=0;
      one_print=1;
    }
    if(first=='0')
    {
      input=0;
    }
  }
  if(input==1 or input==2)
  {
      if(esp_timer_get_time()>=end_time)
      {
        servo0_deg=SS_servo0[node]/3.14159265*180;
        servo0=map(servo0_deg,-38,90,2200,1030);
        servo1_deg=SS_servo1[node]/3.14159265*180;
        servo1=map(servo1_deg,-90,90,2600,950);
        servo2_deg=SS_servo2[node]/3.14159265*180;
        servo2=map(servo2_deg,-38,90,1510,2730);
        servo3_deg=SS_servo3[node]/3.14159265*180;
        servo3=map(servo3_deg,-90,90,1100,2700);
        servo4_deg=SS_servo4[node]/3.14159265*180;
        servo4=map(servo4_deg,-90,38,2700,1500);
        servo5_deg=SS_servo5[node]/3.14159265*180;
        servo5=map(servo5_deg,-90,90,2600,930);
        servo6_deg=SS_servo6[node]/3.14159265*180;
        servo6=map(servo6_deg,-90,38,850,2250);
        servo7_deg=SS_servo7[node]/3.14159265*180;
        servo7=map(servo7_deg,-90,90,920,2620);
        
        pca9685.setPWM(SER0,0,servo0);
        pca9685.setPWM(SER1,0,servo1);
        pca9685.setPWM(SER2,0,servo2);
        pca9685.setPWM(SER3,0,servo3);
        pca9685.setPWM(SER4,0,servo4);
        pca9685.setPWM(SER5,0,servo5);
        pca9685.setPWM(SER6,0,servo6);
        pca9685.setPWM(SER7,0,servo7);
        
        node+=1;
        if(node>=steps and input==1)
        {
          Serial.print("Input:");
          Serial.println(input);
          node=0;
        }
        if(node>=steps and input==2)
        {
          Serial.print("Input:");
          Serial.println(input);
          input=0;
        }
         end_time=esp_timer_get_time()+time_step;
      }
   }

  if(input == 0)
  {        
        pca9685.setPWM(SER0,0,servo0);
        pca9685.setPWM(SER1,0,servo1);
        pca9685.setPWM(SER2,0,servo2);
        pca9685.setPWM(SER3,0,servo3);
        pca9685.setPWM(SER4,0,servo4);
        pca9685.setPWM(SER5,0,servo5);
        pca9685.setPWM(SER6,0,servo6);
        pca9685.setPWM(SER7,0,servo7);

        if(one_print==1)
        {
          Serial.print("Input:");
          Serial.println(input);
          Serial.print("Node:");
          Serial.println(node);
          Serial.print("servo0 -> rads:");
          Serial.print(SS_servo0[node]);
          Serial.print("        deg:");
          Serial.print(servo0_deg);
          Serial.print("        us:");
          Serial.println(servo0);
          Serial.print("servo1 -> rads:");
          Serial.print(SS_servo1[node]);
          Serial.print("        deg:");
          Serial.print(servo1_deg);
          Serial.print("        us:");
          Serial.println(servo1);
          Serial.print("servo2 -> rads:");
          Serial.print(SS_servo2[node]);
          Serial.print("        deg:");
          Serial.print(servo2_deg);
          Serial.print("        us:");
          Serial.println(servo2);
          Serial.print("servo3 -> rads:");
          Serial.print(SS_servo3[node]);
          Serial.print("        deg:");
          Serial.print(servo3_deg);
          Serial.print("        us:");
          Serial.println(servo3);
          Serial.print("servo4 -> rads:");
          Serial.print(SS_servo4[node]);
          Serial.print("        deg:");
          Serial.print(servo4_deg);
          Serial.print("        us:");
          Serial.println(servo4);
          Serial.print("servo5 -> rads:");
          Serial.print(SS_servo5[node]);
          Serial.print("        deg:");
          Serial.print(servo5_deg);
          Serial.print("        us:");
          Serial.println(servo5);
          Serial.print("servo6 -> rads:");
          Serial.print(SS_servo6[node]);
          Serial.print("        deg:");
          Serial.print(servo6_deg);
          Serial.print("        us:");
          Serial.println(servo6);
          Serial.print("servo7 -> rads:");
          Serial.print(SS_servo7[node]);
          Serial.print("        deg:");
          Serial.print(servo7_deg);
          Serial.print("        us:");
          Serial.println(servo7);
          one_print=0;
        }
  
  }
}
