// HOW TO:
// ------------------------------
// Serial input = 2 -> Steps through gait sequence once and stops at the end.
// Serial input = 1 -> Steps through gait sequence in a loop.
// Serial input = 0 -> Stops infinite loop at the node where it is at that moment

//Gait template
#include <Wire.h>
#include <Adafruit_PWMServoDriver.h>

Adafruit_PWMServoDriver pca9685 = Adafruit_PWMServoDriver();

#define SERVO_FREQ 300
#define SER0 0 //Hip 1
#define SER1 1 //Knee 1
#define SER2 2 //Hip 2
#define SER3 3 //Knee 2
#define SER4 4 //Hip 3
#define SER5 5 //Knee 3
#define SER6 6 //Hip 4
#define SER7 7 //Knee 4

// Insert servo angles here:
// For 3D gaits, these angles are obtained from linearisation.py
// For 2D gaits, these angles are obtained from 2D_trajectory_reader.py
float SS_servo0[] = {-0.20941678, -0.19630291, -0.189587  , -0.18809007, -0.18773464, -0.19149025, -0.19971469, -0.20793913, -0.21616357, -0.224388  , -0.23261244, -0.24083688, -0.24917609, -0.25887332, -0.26857055, -0.27826778, -0.28796501, -0.29766224, -0.30275725, -0.29699423, -0.27957677, -0.25243463, -0.21919402, -0.18494474, -0.1491102 , -0.11212858, -0.07519109, -0.04105411, -0.01419654, -0.00745281, -0.00834917, -0.0120972 , -0.01232307, -0.01345568, -0.01555387, -0.01765206, -0.02300343, -0.0289237 , -0.03656005, -0.04704708, -0.06076047, -0.07337059, -0.0847293 , -0.09103029, -0.09404357, -0.09108492, -0.08875301, -0.09011243, -0.09176272, -0.09593028, -0.09975795, -0.10345097, -0.10810675, -0.11439426, -0.11943823, -0.12412474, -0.1261442 , -0.12874546, -0.13387055, -0.13531343, -0.14157095, -0.14126985, -0.14553441, -0.1522773 , -0.16155693, -0.17298687, -0.18745039, -0.19084513, -0.19117045, -0.19149577, -0.1918211 , -0.19014445, -0.18421088, -0.17827731, -0.17279538, -0.17298529, -0.1736413 , -0.17412437, -0.17461445, -0.17391903, -0.16831767, -0.16679684, -0.16615418, -0.16551152, -0.16486885, -0.1674469 , -0.17065088, -0.17385486, -0.18037603, -0.19305178, -0.21282911};
float SS_servo1[] = {0.1738077 , 0.13606131, 0.10324782, 0.1075499 , 0.11841718, 0.14762003, 0.19675415, 0.24588826, 0.29502238, 0.34415649, 0.39329061, 0.44242472, 0.49231315, 0.55112688, 0.60994061, 0.66875434, 0.72756806, 0.78638179, 0.82900607, 0.83183047, 0.78939456, 0.70781732, 0.61386666, 0.52011816, 0.43085478, 0.34483678, 0.26229639, 0.18571816, 0.12755025, 0.10422928, 0.09977139, 0.09995778, 0.09695234, 0.09285919, 0.09084313, 0.08882708, 0.09355151, 0.09945471, 0.10713382, 0.1208256 , 0.14119648, 0.15938855, 0.17323378, 0.17577598, 0.17221192, 0.15045245, 0.1278206 , 0.11183561, 0.09462229, 0.08376909, 0.082263  , 0.08142789, 0.08269719, 0.08753311, 0.09154771, 0.0939102 , 0.09209866, 0.0913741 , 0.09422728, 0.09303423, 0.09800287, 0.09404378, 0.09615034, 0.10165576, 0.11471868, 0.13333381, 0.15747079, 0.15957425, 0.15556773, 0.15156122, 0.1475547 , 0.14076749, 0.12806747, 0.11536746, 0.10340927, 0.10059978, 0.10105739, 0.10147152, 0.10195884, 0.09989686, 0.0888206 , 0.08607487, 0.08512194, 0.08416901, 0.08321608, 0.08765591, 0.09314381, 0.09863171, 0.11219427, 0.14003087, 0.18410722};
float SS_servo2[] = { 0.04162192,  0.04880081,  0.05806879,  0.0569451 ,  0.05279896,  0.04899611,  0.04556643,  0.04213675,  0.03870707,  0.03527739,  0.03184771,  0.02841803,  0.02444978,  0.014109  ,  0.00376823, -0.00657254, -0.01691331, -0.02725408, -0.03751802, -0.04006981, -0.04174092, -0.04099676, -0.04214035, -0.04435812, -0.04911821, -0.05571789, -0.06721218, -0.08100044, -0.08820766, -0.09053906, -0.08731338, -0.08225946, -0.07825234, -0.07949549, -0.08181283, -0.08413018, -0.08814286, -0.09245202, -0.09709039, -0.10077471, -0.10385271, -0.10793711, -0.11230214, -0.11705825, -0.12209827, -0.12889323, -0.13872941, -0.15295125, -0.17360652, -0.19546356, -0.21292759, -0.22996445, -0.24528551, -0.25769854, -0.2675578 , -0.27009066, -0.26537537, -0.25140572, -0.22721741, -0.19544374, -0.15799378, -0.11721112, -0.07533905, -0.03389529,  0.00675123,  0.04455035,  0.07245607,  0.08186927,  0.08615443,  0.09043959,  0.09472475,  0.09554917,  0.08901481,  0.08248045,  0.07600772,  0.07107253,  0.06896812,  0.06889351,  0.07110797,  0.0741382 ,  0.07659969,  0.07738797,  0.07781617,  0.07824437,  0.07867257,  0.07636476,  0.07352521,  0.07068566,  0.06521636,  0.0554752 ,  0.04103525};
float SS_servo3[] = {0.17028731, 0.14397383, 0.105497  , 0.0919815 , 0.08393159, 0.07696751, 0.07118374, 0.06539997, 0.0596162 , 0.05383243, 0.04804866, 0.04226489, 0.03784337, 0.04954034, 0.06123732, 0.07293429, 0.08463126, 0.09632823, 0.10909354, 0.10757574, 0.10365223, 0.09452443, 0.09033028, 0.08855035, 0.09234362, 0.10016959, 0.11679801, 0.13800528, 0.14913014, 0.14427565, 0.1315011 , 0.11388508, 0.10233438, 0.09847847, 0.09691345, 0.09534843, 0.09734924, 0.09997362, 0.10158708, 0.101519  , 0.10032235, 0.10121699, 0.10087227, 0.10025033, 0.10073633, 0.09873261, 0.1082827 , 0.13739421, 0.19346252, 0.26349169, 0.34754543, 0.43272044, 0.51793049, 0.60319992, 0.68635017, 0.75020486, 0.79349742, 0.80495834, 0.7768295 , 0.72574371, 0.64830712, 0.56491373, 0.46837732, 0.37031006, 0.27916051, 0.19679077, 0.13469779, 0.11063618, 0.09712081, 0.08360544, 0.07009006, 0.06491339, 0.07746784, 0.0900223 , 0.10228262, 0.10916932, 0.11262994, 0.11226279, 0.10727939, 0.10043365, 0.09566898, 0.0944589 , 0.09401379, 0.09356868, 0.09312358, 0.09713128, 0.10200437, 0.10687746, 0.11853615, 0.14087518, 0.17498247};
float SS_servo4[] = { 0.22375325,  0.20426401,  0.17980303,  0.16472475,  0.15005378,  0.13854228,  0.1304652 ,  0.12238813,  0.11431105,  0.10623397,  0.0981569,  0.09007982,  0.08268441,  0.0833546 ,  0.0840248 ,  0.084695  ,  0.08536519,  0.08603539,  0.08790784,  0.08576009,  0.07923612,  0.0699922 ,  0.06511401,  0.0617801 ,  0.06184286,  0.06436339,  0.06826451,  0.07082348,  0.07222433,  0.06765463,  0.05756641,  0.0436165 ,  0.03637993,  0.03037164,  0.02614039,  0.02190913,  0.02218976,  0.02325942,  0.02122343,  0.01731217,  0.01266789,  0.00871451,  0.00433353,  0.00491072,  0.010328  ,  0.01883516,  0.03509137,  0.05562838,  0.07195919,  0.0828802 ,  0.07965915,  0.07518775,  0.06578612,  0.04802852,  0.03050706,  0.01633538,  0.00466541, -0.00675485, -0.01926476, -0.03201796, -0.04858639, -0.06605527, -0.08107912, -0.09392918, -0.10002145, -0.10092966, -0.09599728, -0.0771789 , -0.05450988, -0.03184087, -0.00917185,  0.01770829,  0.05354283,  0.08937738,  0.1252657 ,  0.15953932,  0.18932523,  0.21405798,  0.23230318,  0.24175329,  0.24859636,  0.24508049,  0.2393353 ,  0.23359011,  0.22784492,  0.21657443,  0.20423011,  0.19188579,  0.19438136,  0.20666407,  0.22916909};
float SS_servo5[] = {-0.16278858, -0.13514874, -0.10528436, -0.09054639, -0.07731256, -0.06867459, -0.06503247, -0.06139034, -0.05774821, -0.05410608, -0.05046395, -0.04682183, -0.04428967, -0.05489098, -0.06549228, -0.07609359, -0.0866949 , -0.09729621, -0.10906098, -0.11133991, -0.10539329, -0.09426097, -0.09087547, -0.09037708, -0.09634104, -0.10698109, -0.12151262, -0.13341349, -0.13972   , -0.14001275, -0.1257994 , -0.10492723, -0.09368008, -0.08786981, -0.08558067, -0.08329152, -0.09002918, -0.09834543, -0.10202514, -0.10166678, -0.09969127, -0.09905568, -0.09932102, -0.11076142, -0.13150423, -0.16469385, -0.21591846, -0.27694439, -0.33145612, -0.37378659, -0.37668503, -0.37603164, -0.36505094, -0.33656712, -0.30689464, -0.28503332, -0.26707026, -0.24971024, -0.23165333, -0.20965479, -0.18346772, -0.15109945, -0.12695949, -0.10887593, -0.10214915, -0.10661149, -0.13108685, -0.18849997, -0.25504684, -0.32159372, -0.3881406 , -0.46057507, -0.54552871, -0.63048235, -0.7152577 , -0.78844751, -0.83596282, -0.85935407, -0.85410897, -0.81324815, -0.76201745, -0.67601883, -0.58253787, -0.48905691, -0.39557595, -0.29949718, -0.20291353, -0.10632987, -0.10716472, -0.1294894 , -0.17017329};
float SS_servo6[] = {0.23245373, 0.2164227 , 0.19571546, 0.18112199, 0.16742477, 0.15543525, 0.14530205, 0.13516886, 0.12503566, 0.11490247, 0.10476927, 0.09463608, 0.08489598, 0.07980717, 0.07471837, 0.06962956, 0.06454075, 0.05945194, 0.05529624, 0.05164385, 0.050122  , 0.04868213, 0.04594423, 0.04293795, 0.03894961, 0.03425067, 0.02935715, 0.02624685, 0.02633507, 0.03028671, 0.05297877, 0.0854966 , 0.12485738, 0.16585264, 0.2067703 , 0.24768796, 0.28668798, 0.32535264, 0.35748891, 0.37879965, 0.38702407, 0.38596071, 0.37815822, 0.36480604, 0.34855022, 0.33054939, 0.30852387, 0.28199396, 0.25329604, 0.23420663, 0.22963197, 0.22610755, 0.22298277, 0.22053531, 0.21850113, 0.21488693, 0.21061514, 0.20686736, 0.20347202, 0.20023111, 0.19795358, 0.19916082, 0.19841392, 0.19491592, 0.18827402, 0.18007605, 0.17268358, 0.16820311, 0.16453015, 0.16085718, 0.15718422, 0.15568243, 0.15879737, 0.1619123 , 0.16503044, 0.16496172, 0.16480582, 0.16442661, 0.16384257, 0.16171882, 0.15687728, 0.15764589, 0.15962185, 0.16159781, 0.16357377, 0.17423508, 0.18658435, 0.19893363, 0.2131549 , 0.22424532, 0.23729944};
float SS_servo7[] = {-0.23744119, -0.21678508, -0.19451153, -0.18072143, -0.16940199, -0.15977329, -0.15198247, -0.14419164, -0.13640082, -0.12860999, -0.12081917, -0.11302834, -0.10576455, -0.10473679, -0.10370904, -0.10268129, -0.10165353, -0.10062578, -0.10022762, -0.09950002, -0.10371435, -0.10840097, -0.10932826, -0.10947258, -0.10721589, -0.10322187, -0.09996195, -0.10039338, -0.10407621, -0.12169832, -0.17422252, -0.24825818, -0.33613135, -0.43334222, -0.52956906, -0.62579589, -0.71420473, -0.80124636, -0.86459087, -0.88536631, -0.85624615, -0.79416609, -0.71267513, -0.6197556 , -0.51799176, -0.42531352, -0.32889171, -0.2275789 , -0.13614036, -0.10242145, -0.1025621 , -0.10385745, -0.10578954, -0.10880077, -0.11092976, -0.11080569, -0.10812505, -0.10658932, -0.10727354, -0.10485797, -0.10795416, -0.11371892, -0.11869506, -0.11972887, -0.11198785, -0.09986399, -0.0898245 , -0.08552722, -0.08282226, -0.08011731, -0.07741236, -0.07784001, -0.0849287 , -0.0920174 , -0.09927509, -0.10229604, -0.10284425, -0.10262661, -0.10193394, -0.09831702, -0.08817543, -0.08937681, -0.09301928, -0.09666175, -0.10030422, -0.12251086, -0.14832538, -0.1741399 , -0.20217666, -0.22199013, -0.24366966};

int node=0;
int first=0;
int input=0;
int end_time=0;
int time_step=120000;
int steps = sizeof(SS_servo0)/sizeof(SS_servo0[0]);
int one_print = 0;

// -------------------Joint configurations-------------------
int servo0=0;
int servo0_deg=0;
int servo1=0;
int servo1_deg=0;
int servo2=0;
int servo2_deg=0;
int servo3=0;
int servo3_deg=0;
int servo4=0;
int servo4_deg=0;
int servo5=0;
int servo5_deg=0;
int servo6=0;
int servo6_deg=0;
int servo7=0;
int servo7_deg=0;

void setup() {
  Serial.begin(115200);
  pca9685.begin();

  pca9685.setOscillatorFrequency(27000000); //Value between 24MHz and 27MHz, tuned for this setup
  pca9685.setPWMFreq(SERVO_FREQ);
  delay (1000);

  servo0_deg=SS_servo0[0]/3.14159265*180;
  servo0=map(servo0_deg,-38,90,2200,1030);
  servo1_deg=SS_servo1[0]/3.14159265*180;
  servo1=map(servo1_deg,-90,90,2600,950);
  servo2_deg=SS_servo2[0]/3.14159265*180;
  servo2=map(servo2_deg,-38,90,1510,2730);
  servo3_deg=SS_servo3[0]/3.14159265*180;
  servo3=map(servo3_deg,-90,90,1100,2700);
  servo4_deg=SS_servo4[0]/3.14159265*180;
  servo4=map(servo4_deg,-90,38,2700,1500);
  servo5_deg=SS_servo5[0]/3.14159265*180;
  servo5=map(servo5_deg,-90,90,2600,930);
  servo6_deg=SS_servo6[0]/3.14159265*180;
  servo6=map(servo6_deg,-90,38,850,2250);
  servo7_deg=SS_servo7[0]/3.14159265*180;
  servo7=map(servo7_deg,-90,90,920,2620);
        
  pca9685.setPWM(SER0,0,servo0);
  pca9685.setPWM(SER1,0,servo1);
  pca9685.setPWM(SER2,0,servo2);
  pca9685.setPWM(SER3,0,servo3);
  pca9685.setPWM(SER4,0,servo4);
  pca9685.setPWM(SER5,0,servo5);
  pca9685.setPWM(SER6,0,servo6);
  pca9685.setPWM(SER7,0,servo7);

  Serial.print("Node:");
  Serial.println(node);
  Serial.print("servo0 -> rads:");
  Serial.print(SS_servo0[node]);
  Serial.print("        deg:");
  Serial.print(servo0_deg);
  Serial.print("        us:");
  Serial.println(servo0);
  Serial.print("servo1 -> rads:");
  Serial.print(SS_servo1[node]);
  Serial.print("        deg:");
  Serial.print(servo1_deg);
  Serial.print("        us:");
  Serial.println(servo1);
  Serial.print("servo2 -> rads:");
  Serial.print(SS_servo2[node]);
  Serial.print("        deg:");
  Serial.print(servo2_deg);
  Serial.print("        us:");
  Serial.println(servo2);
  Serial.print("servo3 -> rads:");
  Serial.print(SS_servo3[node]);
  Serial.print("        deg:");
  Serial.print(servo3_deg);
  Serial.print("        us:");
  Serial.println(servo3);
  Serial.print("servo4 -> rads:");
  Serial.print(SS_servo4[node]);
  Serial.print("        deg:");
  Serial.print(servo4_deg);
  Serial.print("        us:");
  Serial.println(servo4);
  Serial.print("servo5 -> rads:");
  Serial.print(SS_servo5[node]);
  Serial.print("        deg:");
  Serial.print(servo5_deg);
  Serial.print("        us:");
  Serial.println(servo5);
  Serial.print("servo6 -> rads:");
  Serial.print(SS_servo6[node]);
  Serial.print("        deg:");
  Serial.print(servo6_deg);
  Serial.print("        us:");
  Serial.println(servo6);
  Serial.print("servo7 -> rads:");
  Serial.print(SS_servo7[node]);
  Serial.print("        deg:");
  Serial.print(servo7_deg);
  Serial.print("        us:");
  Serial.println(servo7);

  Serial.println("10");
  delay(1000);
  Serial.println("9");
  delay(1000);
  Serial.println("8");
  delay(1000);
  Serial.println("7");
  delay(1000);
  Serial.println("6");
  delay(1000);
  Serial.println("5");
  delay(1000);
  Serial.println("4");
  delay(1000);
  Serial.println("3");
  delay(1000);
  Serial.println("2");
  delay(1000);
  Serial.println("1");
  delay(1000);

}

void loop() 
{
  if(Serial.available()>0)
  {
    first=Serial.read();
    if(first=='2')
    {
      input=2;
      node=0;
      one_print=1;
    }
    if(first=='1')
    {
      input=1;
      node=0;
      one_print=1;
    }
    if(first=='0')
    {
      input=0;
    }
  }
  if(input==1 or input==2)
  {
      if(esp_timer_get_time()>=end_time)
      {
        servo0_deg=SS_servo0[node]/3.14159265*180;
        servo0=map(servo0_deg,-38,90,2200,1030);
        servo1_deg=SS_servo1[node]/3.14159265*180;
        servo1=map(servo1_deg,-90,90,2600,950);
        servo2_deg=SS_servo2[node]/3.14159265*180;
        servo2=map(servo2_deg,-38,90,1510,2730);
        servo3_deg=SS_servo3[node]/3.14159265*180;
        servo3=map(servo3_deg,-90,90,1100,2700);
        servo4_deg=SS_servo4[node]/3.14159265*180;
        servo4=map(servo4_deg,-90,38,2700,1500);
        servo5_deg=SS_servo5[node]/3.14159265*180;
        servo5=map(servo5_deg,-90,90,2600,930);
        servo6_deg=SS_servo6[node]/3.14159265*180;
        servo6=map(servo6_deg,-90,38,850,2250);
        servo7_deg=SS_servo7[node]/3.14159265*180;
        servo7=map(servo7_deg,-90,90,920,2620);
        
        pca9685.setPWM(SER0,0,servo0);
        pca9685.setPWM(SER1,0,servo1);
        pca9685.setPWM(SER2,0,servo2);
        pca9685.setPWM(SER3,0,servo3);
        pca9685.setPWM(SER4,0,servo4);
        pca9685.setPWM(SER5,0,servo5);
        pca9685.setPWM(SER6,0,servo6);
        pca9685.setPWM(SER7,0,servo7);
        
        node+=1;
        if(node>=steps and input==1)
        {
          Serial.print("Input:");
          Serial.println(input);
          node=0;
        }
        if(node>=steps and input==2)
        {
          Serial.print("Input:");
          Serial.println(input);
          input=0;
        }
         end_time=esp_timer_get_time()+time_step;
      }
   }

  if(input == 0)
  {        
        pca9685.setPWM(SER0,0,servo0);
        pca9685.setPWM(SER1,0,servo1);
        pca9685.setPWM(SER2,0,servo2);
        pca9685.setPWM(SER3,0,servo3);
        pca9685.setPWM(SER4,0,servo4);
        pca9685.setPWM(SER5,0,servo5);
        pca9685.setPWM(SER6,0,servo6);
        pca9685.setPWM(SER7,0,servo7);

        if(one_print==1)
        {
          Serial.print("Input:");
          Serial.println(input);
          Serial.print("Node:");
          Serial.println(node);
          Serial.print("servo0 -> rads:");
          Serial.print(SS_servo0[node]);
          Serial.print("        deg:");
          Serial.print(servo0_deg);
          Serial.print("        us:");
          Serial.println(servo0);
          Serial.print("servo1 -> rads:");
          Serial.print(SS_servo1[node]);
          Serial.print("        deg:");
          Serial.print(servo1_deg);
          Serial.print("        us:");
          Serial.println(servo1);
          Serial.print("servo2 -> rads:");
          Serial.print(SS_servo2[node]);
          Serial.print("        deg:");
          Serial.print(servo2_deg);
          Serial.print("        us:");
          Serial.println(servo2);
          Serial.print("servo3 -> rads:");
          Serial.print(SS_servo3[node]);
          Serial.print("        deg:");
          Serial.print(servo3_deg);
          Serial.print("        us:");
          Serial.println(servo3);
          Serial.print("servo4 -> rads:");
          Serial.print(SS_servo4[node]);
          Serial.print("        deg:");
          Serial.print(servo4_deg);
          Serial.print("        us:");
          Serial.println(servo4);
          Serial.print("servo5 -> rads:");
          Serial.print(SS_servo5[node]);
          Serial.print("        deg:");
          Serial.print(servo5_deg);
          Serial.print("        us:");
          Serial.println(servo5);
          Serial.print("servo6 -> rads:");
          Serial.print(SS_servo6[node]);
          Serial.print("        deg:");
          Serial.print(servo6_deg);
          Serial.print("        us:");
          Serial.println(servo6);
          Serial.print("servo7 -> rads:");
          Serial.print(SS_servo7[node]);
          Serial.print("        deg:");
          Serial.print(servo7_deg);
          Serial.print("        us:");
          Serial.println(servo7);
          one_print=0;
        }
  
  }
}
