// HOW TO:
// ------------------------------
// Serial input = 2 -> Steps through gait sequence once and stops at the end.
// Serial input = 1 -> Steps through gait sequence in a loop.
// Serial input = 0 -> Stops infinite loop at the node where it is at that moment

//Gait template
#include <Wire.h>
#include <Adafruit_PWMServoDriver.h>

Adafruit_PWMServoDriver pca9685 = Adafruit_PWMServoDriver();

#define SERVO_FREQ 300
#define SER0 0 //Hip 1
#define SER1 1 //Knee 1
#define SER2 2 //Hip 2
#define SER3 3 //Knee 2
#define SER4 4 //Hip 3
#define SER5 5 //Knee 3
#define SER6 6 //Hip 4
#define SER7 7 //Knee 4

// Insert servo angles here:
// For 3D gaits, these angles are obtained from linearisation.py
// For 2D gaits, these angles are obtained from 2D_trajectory_reader.py
float SS_servo0[] = {-0.22045035, -0.20894576, -0.18812424, -0.17250342, -0.18288348, -0.1952792 , -0.20990499, -0.22469238, -0.23947977, -0.25426716, -0.26905455, -0.28384193, -0.29643438, -0.30894479, -0.32145521, -0.33396562, -0.34114028, -0.33776271, -0.32193617, -0.29906706, -0.27019302, -0.24131898, -0.21244494, -0.17635672, -0.13983444, -0.10250746, -0.06657031, -0.03712658, -0.02848503, -0.02590343, -0.02868682, -0.03309356, -0.03850783, -0.04181311, -0.04302099, -0.04422888, -0.04424911, -0.04420159, -0.04469048, -0.04665175, -0.05260723, -0.06009197, -0.06665856, -0.07300671, -0.07935486, -0.08568292, -0.09199314, -0.09876192, -0.11089393, -0.12389445, -0.13476518, -0.14057814, -0.1421398 , -0.13792223, -0.12762391, -0.12170463, -0.12019247, -0.11991429, -0.12085194, -0.12178959, -0.12272724, -0.1236649 , -0.12579724, -0.13241843, -0.13903963, -0.14566082, -0.15098531, -0.15423573, -0.15677459, -0.15641671, -0.15221826, -0.15666398, -0.16110971, -0.16690797, -0.18688437, -0.20686077, -0.22928766, -0.23791091, -0.23396873, -0.22612458, -0.21651287, -0.20462749, -0.1955754 , -0.19039023, -0.1882499 , -0.1861618 , -0.18474449, -0.18631474, -0.18746534, -0.18734788, -0.18822774, -0.18680852, -0.18433673, -0.18432589, -0.18431504, -0.1843042 , -0.18488602, -0.18723637, -0.18958672, -0.19216872, -0.19708072, -0.21031068};
float SS_servo1[] = {0.1694143 , 0.2111238 , 0.25270658, 0.21203887, 0.23079714, 0.25658228, 0.30610735, 0.35735269, 0.40859804, 0.45984339, 0.51108873, 0.56233408, 0.62157612, 0.68111701, 0.7406579 , 0.80019879, 0.84618451, 0.85369501, 0.81249225, 0.75099681, 0.67686927, 0.60274172, 0.52861418, 0.44682264, 0.36456999, 0.28180001, 0.20092489, 0.13835503, 0.11344789, 0.10037813, 0.10108627, 0.10454329, 0.11253863, 0.11400523, 0.11186884, 0.10973245, 0.10498021, 0.10002223, 0.09437455, 0.09265376, 0.09952529, 0.10806384, 0.11363698, 0.11858872, 0.12354046, 0.12610598, 0.12655302, 0.12721758, 0.13293533, 0.13819595, 0.14368334, 0.14824256, 0.14667979, 0.13128435, 0.103927  , 0.08645914, 0.07942753, 0.07436913, 0.07125493, 0.06814073, 0.06502653, 0.06191233, 0.0612981 , 0.07007706, 0.07885602, 0.08763498, 0.0948757 , 0.09814654, 0.09965818, 0.09514966, 0.08388397, 0.08930806, 0.09473216, 0.10291922, 0.14006929, 0.17721937, 0.22145205, 0.23445988, 0.22124245, 0.1988912 , 0.17331318, 0.14675577, 0.1261982 , 0.11317726, 0.10734165, 0.10163364, 0.09741324, 0.09981849, 0.10123084, 0.10004788, 0.10090542, 0.0971809 , 0.09155922, 0.09096343, 0.09036764, 0.08977184, 0.09027821, 0.09407346, 0.09786871, 0.10169542, 0.10773545, 0.13347968};
float SS_servo2[] = { 0.06415432,  0.0679614 ,  0.06588355,  0.06314121,  0.05998385,  0.05623327,  0.05170332,  0.04711688,  0.04253045,  0.03794402,  0.03335759,  0.02877116,  0.01905982,  0.00915696, -0.00074591, -0.01064877, -0.0178249 , -0.02235933, -0.02236425, -0.0209592 , -0.02243222, -0.02390524, -0.02537826, -0.03230097, -0.03955158, -0.04885844, -0.06321622, -0.07133894, -0.07452307, -0.07412973, -0.07024139, -0.06541466, -0.05992333, -0.05961526, -0.06145892, -0.06330257, -0.06922117, -0.07530359, -0.08041856, -0.08405124, -0.08411939, -0.08145512, -0.08362765, -0.08681482, -0.09000199, -0.09629822, -0.10535469, -0.1146663 , -0.12432141, -0.13174616, -0.13662256, -0.14132388, -0.14328871, -0.14965533, -0.1573181 , -0.16184433, -0.16837079, -0.17714965, -0.18814779, -0.19914592, -0.21014406, -0.22114219, -0.23152099, -0.23957271, -0.24762443, -0.25567615, -0.26109178, -0.25007545, -0.23337985, -0.20251634, -0.16265824, -0.12079646, -0.07893467, -0.03716763,  0.00360622,  0.04438007,  0.08273107,  0.09987472,  0.10339106,  0.10261166,  0.10052975,  0.09682725,  0.09531395,  0.09468018,  0.09410514,  0.09353172,  0.09290028,  0.09201035,  0.09112492,  0.09096226,  0.09139195,  0.09271426,  0.09387749,  0.09381307,  0.09374866,  0.09368424,  0.0930579 ,  0.09075478, 0.08845166,  0.08549882,  0.07868214,  0.0689992 };
float SS_servo3[] = {0.14507125, 0.12570128, 0.11344495, 0.10110362, 0.09105099, 0.08209261, 0.07760047, 0.07343198, 0.06926349, 0.065095  , 0.06092651, 0.05675801, 0.06616609, 0.07608155, 0.08599702, 0.09591248, 0.10282097, 0.1037861 , 0.09477946, 0.08540837, 0.08217727, 0.07894618, 0.07571508, 0.08517404, 0.09539651, 0.10942443, 0.1309248 , 0.14475331, 0.14387205, 0.13527981, 0.12250767, 0.10729401, 0.09320881, 0.0873612 , 0.08652443, 0.08568767, 0.09289215, 0.10035921, 0.1041125 , 0.10585251, 0.1008529 , 0.08888438, 0.08559246, 0.08417398, 0.08275549, 0.0852688 , 0.09127275, 0.09707968, 0.0978261 , 0.09184599, 0.08522868, 0.08753414, 0.08677266, 0.09271844, 0.10165769, 0.10765685, 0.13003696, 0.17155971, 0.23194369, 0.29232767, 0.35271166, 0.41309564, 0.47811267, 0.56053761, 0.64296255, 0.7253875 , 0.80574688, 0.8330204 , 0.83725973, 0.78463438, 0.69437347, 0.60010641, 0.50583936, 0.41222588, 0.32546367, 0.23870147, 0.15917348, 0.11968032, 0.10706152, 0.10189558, 0.09970738, 0.10451847, 0.10523339, 0.10387029, 0.10354127, 0.1032332 , 0.10318277, 0.10427986, 0.10520672, 0.1046201 , 0.10287371, 0.09932072, 0.09631934, 0.09594489, 0.09557044, 0.09519599, 0.09587291, 0.09968714, 0.10350138, 0.10819896, 0.1183129 , 0.13734254};
float SS_servo4[] = { 0.23663308,  0.22039969,  0.20028639,  0.18238525,  0.16880829,  0.15482812,  0.14656604,  0.13871832,  0.1308706 ,  0.12302288,  0.11517516,  0.10732744,  0.10613928,  0.1052    ,  0.10426073,  0.10332145,  0.10288182,  0.09909898,  0.0899537 ,  0.08184888,  0.07829328,  0.07473768,  0.07118208,  0.07219217,  0.07347697,  0.0746127 ,  0.07555653,  0.08080537,  0.0819284 ,  0.07867321,  0.06970399,  0.05740443,  0.05157341,  0.04674377,  0.0434316 ,  0.04011943,  0.04104203,  0.04200833,  0.0388057 ,  0.03648601,  0.03344303,  0.02633408,  0.02623126,  0.02760124,  0.02897123,  0.03871688,  0.05589847,  0.07400147,  0.10257922,  0.13160992,  0.14496542,  0.14052301,  0.12959956,  0.1196878 ,  0.11095081,  0.10062044,  0.09064707,  0.08225311,  0.07541534,  0.06857757,  0.06173979,  0.05490202,  0.04804035,  0.0410889 ,  0.03413745,  0.027186  ,  0.02002869,  0.01188898,  0.00346223, -0.005655  , -0.01456391, -0.02294395, -0.03132399, -0.0398614 , -0.05004848, -0.06023556, -0.07075427, -0.07988511, -0.08703907, -0.09075033, -0.08553081, -0.06096312, -0.02806757,  0.01259996,  0.05521893,  0.09786018,  0.14032153,  0.18198168,  0.22333901,  0.25437724,  0.27539439,  0.28646562,  0.29151244,  0.28693962,  0.28236679,  0.27779397,  0.27067814,  0.25597392, 0.2412697 ,  0.22634388,  0.21560384,  0.22739465};
float SS_servo5[] = {-0.16648615, -0.14533989, -0.12122095, -0.10298147, -0.09196358, -0.08023728, -0.0771654 , -0.07472065, -0.0722759 , -0.06983115, -0.0673864, -0.06494165, -0.07279853, -0.0810404 , -0.08928227, -0.09752415, -0.10424351, -0.10473781, -0.09520212, -0.08530492, -0.08430168, -0.08329844, -0.0822952 , -0.08890012, -0.09596279, -0.10307409, -0.11256782, -0.12584409, -0.13542156, -0.13661188, -0.12333724, -0.10388146, -0.09501539, -0.09044756, -0.08833304, -0.08621852, -0.09290817, -0.09975378, -0.09986502, -0.10083148, -0.09985893, -0.09200433, -0.09950406, -0.11017915, -0.12085423, -0.15098756, -0.19839595, -0.24840549, -0.32582832, -0.40672295, -0.45110207, -0.44936838, -0.43183146, -0.41857323, -0.40740136, -0.39184232, -0.37548603, -0.36286787, -0.35393286, -0.34499786, -0.33606285, -0.32712784, -0.31805093, -0.30844079, -0.29883065, -0.28922052, -0.27809347, -0.26466271, -0.25096637, -0.23605943, -0.22060191, -0.20697407, -0.19334623, -0.17935094, -0.16150371, -0.14365649, -0.12283908, -0.10843736, -0.09921821, -0.09839884, -0.11550297, -0.16878189, -0.23940208, -0.3340282 , -0.43131991, -0.52861113, -0.62424171, -0.71247606, -0.79933732, -0.84343686, -0.84843267, -0.81309839, -0.75809591, -0.67773159, -0.59736727, -0.51700294, -0.43429839, -0.34461051, -0.25492263, -0.17029553, -0.12134077, -0.14580709};
float SS_servo6[] = {0.24911625, 0.23346855, 0.21574458, 0.19853744, 0.18343202, 0.16897988, 0.15776154, 0.14677754, 0.13579353, 0.12480952, 0.11382552, 0.10284151, 0.09524482, 0.08777473, 0.08030463, 0.07283453, 0.06658319, 0.06249789, 0.06093087, 0.05997393, 0.05634333, 0.05271274, 0.04908215, 0.04506547, 0.04102557, 0.03733673, 0.03249342, 0.0289859 , 0.0286906 , 0.03369062, 0.05825253, 0.09250635, 0.13240721, 0.1739647 , 0.21559735, 0.25722999, 0.29658948, 0.33581582, 0.36569552, 0.38949718, 0.39684386, 0.39982466, 0.39178275, 0.38170013, 0.37161752, 0.35709922, 0.3386429 , 0.31971516, 0.29552551, 0.267979  , 0.25229599, 0.25016301, 0.2476362 , 0.24477448, 0.23997237, 0.23685922, 0.23306814, 0.22943229, 0.22594939, 0.22246649, 0.21898359, 0.21550069, 0.21256919, 0.21170948, 0.21084977, 0.20999006, 0.20866681, 0.20687816, 0.20505309, 0.20284389, 0.19727933, 0.19485428, 0.19242924, 0.19024773, 0.1906191 , 0.19099047, 0.19157798, 0.19626211, 0.20519655, 0.20978027, 0.20670603, 0.19388787, 0.18072152, 0.17236808, 0.16942071, 0.1665661 , 0.16492346, 0.16867876, 0.17193098, 0.17243175, 0.1715684 , 0.16827592, 0.16549195, 0.16559633, 0.16570071, 0.16580509, 0.16926175, 0.18272169, 0.19618163, 0.21207478, 0.23128928, 0.2454434 };
float SS_servo7[] = {-0.26890861, -0.248996  , -0.22972016, -0.21289853, -0.1988125 , -0.18614002, -0.17709309, -0.16830888, -0.15952467, -0.15074047, -0.14195626, -0.13317205, -0.12806448, -0.12309431, -0.11812415, -0.11315398, -0.10811802, -0.10805102, -0.11386201, -0.11839787, -0.11724036, -0.11608286, -0.11492535, -0.11136542, -0.10766094, -0.10502267, -0.10281816, -0.0983757 , -0.10512829, -0.1231133 , -0.17807958, -0.25362716, -0.34219194, -0.43945876, -0.53552134, -0.63158391, -0.71881168, -0.80557056, -0.85749493, -0.8851053 , -0.85025189, -0.80299512, -0.72547834, -0.64236893, -0.55925951, -0.47292197, -0.38371849, -0.29452787, -0.21058203, -0.13420318, -0.11143345, -0.11443632, -0.11416195, -0.11537742, -0.11232692, -0.11164983, -0.10807988, -0.10531583, -0.10334584, -0.10137584, -0.09940584, -0.09743584, -0.09648209, -0.09934667, -0.10221126, -0.10507585, -0.10592304, -0.10556555, -0.10545759, -0.10477814, -0.09634468, -0.09497633, -0.09360798, -0.09268163, -0.0963886 , -0.10009557, -0.10191183, -0.11553499, -0.138778  , -0.15459614, -0.15470968, -0.13167194, -0.10756099, -0.09327002, -0.08888016, -0.08465597, -0.08273726, -0.09108684, -0.09856009, -0.10050592, -0.09968629, -0.09383852, -0.08878061, -0.08959352, -0.09040642, -0.09121932, -0.09885556, -0.1268528 , -0.15485004, -0.18812138, -0.23036477, -0.25941271};

int node=0;
int first=0;
int input=0;
int end_time=0;
int time_step=120000;
int steps = sizeof(SS_servo0)/sizeof(SS_servo0[0]);
int one_print = 0;

// -------------------Joint configurations-------------------
int servo0=0;
int servo0_deg=0;
int servo1=0;
int servo1_deg=0;
int servo2=0;
int servo2_deg=0;
int servo3=0;
int servo3_deg=0;
int servo4=0;
int servo4_deg=0;
int servo5=0;
int servo5_deg=0;
int servo6=0;
int servo6_deg=0;
int servo7=0;
int servo7_deg=0;

void setup() {
  Serial.begin(115200);
  pca9685.begin();

  pca9685.setOscillatorFrequency(27000000); //Value between 24MHz and 27MHz, tuned for this setup
  pca9685.setPWMFreq(SERVO_FREQ);
  delay (1000);

  servo0_deg=SS_servo0[0]/3.14159265*180;
  servo0=map(servo0_deg,-38,90,2200,1030);
  servo1_deg=SS_servo1[0]/3.14159265*180;
  servo1=map(servo1_deg,-90,90,2600,950);
  servo2_deg=SS_servo2[0]/3.14159265*180;
  servo2=map(servo2_deg,-38,90,1510,2730);
  servo3_deg=SS_servo3[0]/3.14159265*180;
  servo3=map(servo3_deg,-90,90,1100,2700);
  servo4_deg=SS_servo4[0]/3.14159265*180;
  servo4=map(servo4_deg,-90,38,2700,1500);
  servo5_deg=SS_servo5[0]/3.14159265*180;
  servo5=map(servo5_deg,-90,90,2600,930);
  servo6_deg=SS_servo6[0]/3.14159265*180;
  servo6=map(servo6_deg,-90,38,850,2250);
  servo7_deg=SS_servo7[0]/3.14159265*180;
  servo7=map(servo7_deg,-90,90,920,2620);
        
  pca9685.setPWM(SER0,0,servo0);
  pca9685.setPWM(SER1,0,servo1);
  pca9685.setPWM(SER2,0,servo2);
  pca9685.setPWM(SER3,0,servo3);
  pca9685.setPWM(SER4,0,servo4);
  pca9685.setPWM(SER5,0,servo5);
  pca9685.setPWM(SER6,0,servo6);
  pca9685.setPWM(SER7,0,servo7);

  Serial.print("Node:");
  Serial.println(node);
  Serial.print("servo0 -> rads:");
  Serial.print(SS_servo0[node]);
  Serial.print("        deg:");
  Serial.print(servo0_deg);
  Serial.print("        us:");
  Serial.println(servo0);
  Serial.print("servo1 -> rads:");
  Serial.print(SS_servo1[node]);
  Serial.print("        deg:");
  Serial.print(servo1_deg);
  Serial.print("        us:");
  Serial.println(servo1);
  Serial.print("servo2 -> rads:");
  Serial.print(SS_servo2[node]);
  Serial.print("        deg:");
  Serial.print(servo2_deg);
  Serial.print("        us:");
  Serial.println(servo2);
  Serial.print("servo3 -> rads:");
  Serial.print(SS_servo3[node]);
  Serial.print("        deg:");
  Serial.print(servo3_deg);
  Serial.print("        us:");
  Serial.println(servo3);
  Serial.print("servo4 -> rads:");
  Serial.print(SS_servo4[node]);
  Serial.print("        deg:");
  Serial.print(servo4_deg);
  Serial.print("        us:");
  Serial.println(servo4);
  Serial.print("servo5 -> rads:");
  Serial.print(SS_servo5[node]);
  Serial.print("        deg:");
  Serial.print(servo5_deg);
  Serial.print("        us:");
  Serial.println(servo5);
  Serial.print("servo6 -> rads:");
  Serial.print(SS_servo6[node]);
  Serial.print("        deg:");
  Serial.print(servo6_deg);
  Serial.print("        us:");
  Serial.println(servo6);
  Serial.print("servo7 -> rads:");
  Serial.print(SS_servo7[node]);
  Serial.print("        deg:");
  Serial.print(servo7_deg);
  Serial.print("        us:");
  Serial.println(servo7);

  Serial.println("10");
  delay(1000);
  Serial.println("9");
  delay(1000);
  Serial.println("8");
  delay(1000);
  Serial.println("7");
  delay(1000);
  Serial.println("6");
  delay(1000);
  Serial.println("5");
  delay(1000);
  Serial.println("4");
  delay(1000);
  Serial.println("3");
  delay(1000);
  Serial.println("2");
  delay(1000);
  Serial.println("1");
  delay(1000);

}

void loop() 
{
  if(Serial.available()>0)
  {
    first=Serial.read();
    if(first=='2')
    {
      input=2;
      node=0;
      one_print=1;
    }
    if(first=='1')
    {
      input=1;
      node=0;
      one_print=1;
    }
    if(first=='0')
    {
      input=0;
    }
  }
  if(input==1 or input==2)
  {
      if(esp_timer_get_time()>=end_time)
      {
        servo0_deg=SS_servo0[node]/3.14159265*180;
        servo0=map(servo0_deg,-38,90,2200,1030);
        servo1_deg=SS_servo1[node]/3.14159265*180;
        servo1=map(servo1_deg,-90,90,2600,950);
        servo2_deg=SS_servo2[node]/3.14159265*180;
        servo2=map(servo2_deg,-38,90,1510,2730);
        servo3_deg=SS_servo3[node]/3.14159265*180;
        servo3=map(servo3_deg,-90,90,1100,2700);
        servo4_deg=SS_servo4[node]/3.14159265*180;
        servo4=map(servo4_deg,-90,38,2700,1500);
        servo5_deg=SS_servo5[node]/3.14159265*180;
        servo5=map(servo5_deg,-90,90,2600,930);
        servo6_deg=SS_servo6[node]/3.14159265*180;
        servo6=map(servo6_deg,-90,38,850,2250);
        servo7_deg=SS_servo7[node]/3.14159265*180;
        servo7=map(servo7_deg,-90,90,920,2620);
        
        pca9685.setPWM(SER0,0,servo0);
        pca9685.setPWM(SER1,0,servo1);
        pca9685.setPWM(SER2,0,servo2);
        pca9685.setPWM(SER3,0,servo3);
        pca9685.setPWM(SER4,0,servo4);
        pca9685.setPWM(SER5,0,servo5);
        pca9685.setPWM(SER6,0,servo6);
        pca9685.setPWM(SER7,0,servo7);
        
        node+=1;
        if(node>=steps and input==1)
        {
          Serial.print("Input:");
          Serial.println(input);
          node=0;
        }
        if(node>=steps and input==2)
        {
          Serial.print("Input:");
          Serial.println(input);
          input=0;
        }
         end_time=esp_timer_get_time()+time_step;
      }
   }

  if(input == 0)
  {        
        pca9685.setPWM(SER0,0,servo0);
        pca9685.setPWM(SER1,0,servo1);
        pca9685.setPWM(SER2,0,servo2);
        pca9685.setPWM(SER3,0,servo3);
        pca9685.setPWM(SER4,0,servo4);
        pca9685.setPWM(SER5,0,servo5);
        pca9685.setPWM(SER6,0,servo6);
        pca9685.setPWM(SER7,0,servo7);

        if(one_print==1)
        {
          Serial.print("Input:");
          Serial.println(input);
          Serial.print("Node:");
          Serial.println(node);
          Serial.print("servo0 -> rads:");
          Serial.print(SS_servo0[node]);
          Serial.print("        deg:");
          Serial.print(servo0_deg);
          Serial.print("        us:");
          Serial.println(servo0);
          Serial.print("servo1 -> rads:");
          Serial.print(SS_servo1[node]);
          Serial.print("        deg:");
          Serial.print(servo1_deg);
          Serial.print("        us:");
          Serial.println(servo1);
          Serial.print("servo2 -> rads:");
          Serial.print(SS_servo2[node]);
          Serial.print("        deg:");
          Serial.print(servo2_deg);
          Serial.print("        us:");
          Serial.println(servo2);
          Serial.print("servo3 -> rads:");
          Serial.print(SS_servo3[node]);
          Serial.print("        deg:");
          Serial.print(servo3_deg);
          Serial.print("        us:");
          Serial.println(servo3);
          Serial.print("servo4 -> rads:");
          Serial.print(SS_servo4[node]);
          Serial.print("        deg:");
          Serial.print(servo4_deg);
          Serial.print("        us:");
          Serial.println(servo4);
          Serial.print("servo5 -> rads:");
          Serial.print(SS_servo5[node]);
          Serial.print("        deg:");
          Serial.print(servo5_deg);
          Serial.print("        us:");
          Serial.println(servo5);
          Serial.print("servo6 -> rads:");
          Serial.print(SS_servo6[node]);
          Serial.print("        deg:");
          Serial.print(servo6_deg);
          Serial.print("        us:");
          Serial.println(servo6);
          Serial.print("servo7 -> rads:");
          Serial.print(SS_servo7[node]);
          Serial.print("        deg:");
          Serial.print(servo7_deg);
          Serial.print("        us:");
          Serial.println(servo7);
          one_print=0;
        }
  
  }
}
