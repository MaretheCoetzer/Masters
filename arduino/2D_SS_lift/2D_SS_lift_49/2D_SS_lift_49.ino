// HOW TO:
// ------------------------------
// Serial input = 2 -> Steps through gait sequence once and stops at the end.
// Serial input = 1 -> Steps through gait sequence in a loop.
// Serial input = 0 -> Stops infinite loop at the node where it is at that moment

//Gait template
#include <Wire.h>
#include <Adafruit_PWMServoDriver.h>

Adafruit_PWMServoDriver pca9685 = Adafruit_PWMServoDriver();

#define SERVO_FREQ 300
#define SER0 0 //Hip 1
#define SER1 1 //Knee 1
#define SER2 2 //Hip 2
#define SER3 3 //Knee 2
#define SER4 4 //Hip 3
#define SER5 5 //Knee 3
#define SER6 6 //Hip 4
#define SER7 7 //Knee 4

// Insert servo angles here:
// For 3D gaits, these angles are obtained from linearisation.py
// For 2D gaits, these angles are obtained from 2D_trajectory_reader.py
float SS_servo0[] = {-0.19222024, -0.18025404, -0.17542561, -0.17656911, -0.17893986, -0.18265985, -0.18798228, -0.19330471, -0.19862714, -0.20394957, -0.209272, -0.21459443, -0.21991686, -0.22535149, -0.23078768, -0.23622387, -0.24166006, -0.24709625, -0.25007042, -0.24321265, -0.22460509, -0.19724631, -0.16377333, -0.12910613, -0.09310347, -0.05795861, -0.02471943, -0.00576027, -0.00278349, -0.00544739, -0.00878772, -0.01002635, -0.01207562, -0.0141249 , -0.01896619, -0.02482521, -0.03559969, -0.050177  , -0.06568443, -0.0793589 , -0.08964631, -0.09204915, -0.08925688, -0.0835039 , -0.08106856, -0.08297723, -0.0843505 , -0.08920653, -0.09262542, -0.09654024, -0.09913255, -0.10181861, -0.10501315, -0.10880938, -0.11382376, -0.11659557, -0.11946113, -0.12412993, -0.12419759, -0.12887078, -0.13084639, -0.13685258, -0.1453288 , -0.16382908, -0.18339497, -0.19497073, -0.19522096, -0.19041758, -0.18123312, -0.17091855, -0.16385934, -0.15801839, -0.15712636, -0.15556174, -0.1552029 , -0.15733073, -0.15710353, -0.15716775, -0.15747263, -0.1577775 , -0.15808238, -0.15860769, -0.15937634, -0.16014499, -0.16172087, -0.16737636, -0.18074549};
float SS_servo1[] = {0.16378884, 0.12914123, 0.10101788, 0.10326504, 0.11060314, 0.13374   , 0.17564023, 0.21754046, 0.25944069, 0.30134092, 0.34324114, 0.38514137, 0.4270416 , 0.47731023, 0.52769518, 0.57808012, 0.62846507, 0.67885001, 0.7175457 , 0.71892315, 0.67069459, 0.59106318, 0.49506965, 0.4029178 , 0.31760754, 0.23437021, 0.16110779, 0.11704003, 0.10102857, 0.09992   , 0.10091934, 0.09768518, 0.09516067, 0.09263616, 0.09665927, 0.10250198, 0.11556619, 0.13862835, 0.16294815, 0.18220182, 0.19295076, 0.18888081, 0.16767017, 0.13834851, 0.11479592, 0.09550143, 0.08518007, 0.08606707, 0.08673802, 0.08819732, 0.08748125, 0.08673483, 0.08679953, 0.08789537, 0.09107882, 0.09143338, 0.09226157, 0.09515772, 0.0924062 , 0.09517154, 0.09599205, 0.10371665, 0.11702922, 0.15000133, 0.18551114, 0.20594228, 0.20130371, 0.18557788, 0.1640704 , 0.13927905, 0.12226557, 0.10791778, 0.10439875, 0.09916512, 0.09700814, 0.09956429, 0.09772951, 0.09689044, 0.09675847, 0.09662651, 0.09649454, 0.09719516, 0.09881492, 0.10043468, 0.1031895 , 0.11267312, 0.14120554};
float SS_servo2[] = { 0.02012467,  0.02854127,  0.03940212,  0.03896593,  0.03547826,  0.03223838,  0.02929277,  0.02634716,  0.02340155,  0.02045594,  0.01751033,  0.01456472,  0.01161911,  0.00147602, -0.00876711, -0.01901023, -0.02925336, -0.03949648, -0.05032644, -0.05283429, -0.05636364, -0.05443882, -0.057413  , -0.06168354, -0.06722938, -0.08128385, -0.09320771, -0.09904794, -0.09973232, -0.09556239, -0.08958932, -0.08695727, -0.08980523, -0.09265319, -0.09710523, -0.10186614, -0.10622512, -0.10913028, -0.11242547, -0.11757088, -0.12117098, -0.12548156, -0.13536349, -0.14838779, -0.16095608, -0.17184918, -0.17439798, -0.17096922, -0.16805947, -0.17335196, -0.18839239, -0.20337921, -0.21775771, -0.23033467, -0.23926433, -0.24473373, -0.2406594 , -0.22615068, -0.20041417, -0.16652929, -0.12710419, -0.08660129, -0.04660798, -0.00798854,  0.03078512,  0.0617951 ,  0.06889855,  0.06901803,  0.06598003,  0.06104209,  0.05755619,  0.05457784,  0.0536613 ,  0.053588  ,  0.05534438,  0.05862477,  0.0636472 ,  0.06583212,  0.06635558,  0.06687905,  0.06740251,  0.06578137,  0.06179269,  0.057804  ,  0.05248813,  0.04313214,  0.03090095};
float SS_servo3[] = {0.17305502, 0.14511027, 0.10437052, 0.09066893, 0.08269144, 0.07571094, 0.0699145 , 0.06411806, 0.05832162, 0.05252518, 0.04672874, 0.0409323 , 0.03513586, 0.04679152, 0.05868976, 0.07058799, 0.08248623, 0.09438446, 0.10802307, 0.10704334, 0.10538351, 0.09491656, 0.09366457, 0.0961918 , 0.10306849, 0.12304481, 0.14206909, 0.14850482, 0.139991  , 0.12508323, 0.1072631 , 0.09620288, 0.09531621, 0.09442953, 0.09766572, 0.10127311, 0.10135107, 0.10075805, 0.10029475, 0.10222551, 0.09939649, 0.09917287, 0.10364501, 0.11237607, 0.11948768, 0.11860064, 0.11068329, 0.09487184, 0.09246216, 0.12753574, 0.20733207, 0.29780694, 0.38802863, 0.47641262, 0.56107611, 0.63961552, 0.68902822, 0.69988035, 0.67483696, 0.61175372, 0.53157428, 0.44227744, 0.35657107, 0.27499079, 0.19087937, 0.12444578, 0.10475899, 0.09836213, 0.10145161, 0.10743713, 0.11175662, 0.11525661, 0.11542759, 0.11348967, 0.10851328, 0.10012214, 0.08850169, 0.08308209, 0.081277  , 0.0794719 , 0.07766681, 0.08062395, 0.08883839, 0.09705283, 0.10749194, 0.12471538, 0.15140772};
float SS_servo4[] = { 2.20808066e-01,  2.02273376e-01,  1.79318129e-01,  1.64427755e-01,  1.49836424e-01,  1.38567911e-01,  1.31245741e-01,  1.23923571e-01,  1.16601401e-01,  1.09279231e-01,  1.01957061e-01,  9.46348907e-02,  8.73127206e-02,  8.78350707e-02,  8.84664530e-02,  8.90978353e-02,  8.97292175e-02,  9.03605998e-02,  9.16412229e-02,  8.99479375e-02,  8.36098677e-02,  7.60321985e-02,  7.29183943e-02,  7.26279548e-02,  7.58242215e-02,  7.75941515e-02,  7.91960206e-02,  7.85297406e-02,  7.20106946e-02,  5.99592555e-02,  4.87637974e-02,  4.13236711e-02,  3.70652297e-02,  3.28067882e-02,  3.28883799e-02,  3.33256212e-02,  2.93128296e-02,  2.55683198e-02,  2.08087520e-02,  1.85100583e-02,  1.84287730e-02,  2.73925448e-02,  3.75576089e-02,  5.73981309e-02,  7.98409898e-02,  9.82866783e-02,  1.06844327e-01,  1.02516640e-01,  8.79049779e-02,  7.32477695e-02,  6.09222615e-02,  5.03655913e-02,  4.00324249e-02,  2.97497072e-02,  1.95691250e-02,  9.81276609e-03,  6.17980726e-05, -1.03466922e-02, -1.95721904e-02, -3.01975878e-02, -3.96273039e-02, -4.96006147e-02, -5.95113364e-02, -6.98662245e-02, -8.04039846e-02, -8.45341118e-02, -7.05506675e-02, -4.49280154e-02, -1.02463126e-02,  3.02866982e-02,  7.14854690e-02,  1.12643049e-01,  1.53633303e-01,  1.92047388e-01,  2.20487092e-01, 2.36361189e-01,  2.43922479e-01,  2.43910827e-01,  2.39761181e-01,  2.35611535e-01,  2.31461889e-01,  2.24038403e-01,  2.13000734e-01,  2.01963065e-01,  1.93590151e-01,  1.93250940e-01,  2.07836034e-01};
float SS_servo5[] = {-0.16073492, -0.13417687, -0.10644717, -0.09091619, -0.07646379, -0.06721716, -0.06415315, -0.06108914, -0.05802514, -0.05496113, -0.05189712, -0.04883312, -0.04576911, -0.05570888, -0.06582939, -0.0759499 , -0.08607041, -0.09619092, -0.10703677, -0.10961129, -0.10556044, -0.09676922, -0.09773094, -0.10325792, -0.11407247, -0.12610451, -0.13446159, -0.13849297, -0.13518323, -0.11725384, -0.10033956, -0.0909645 , -0.08901771, -0.08707091, -0.0930553 , -0.10000137, -0.10065431, -0.09957236, -0.0970601 , -0.10088702, -0.11083196, -0.13802554, -0.17428615, -0.23252061, -0.29719979, -0.35863337, -0.38963488, -0.38990176, -0.36631083, -0.34283993, -0.32366677, -0.30828406, -0.29356418, -0.27914341, -0.26532817, -0.25065605, -0.23567153, -0.22096433, -0.20498196, -0.18996562, -0.17381573, -0.15784638, -0.14140806, -0.12458936, -0.10700435, -0.10145864, -0.13539557, -0.19469341, -0.27064128, -0.36507863, -0.45839451, -0.55025969, -0.63623176, -0.71084459, -0.74369104, -0.7279192 , -0.67552044, -0.60542827, -0.52607177, -0.44671527, -0.36735878, -0.29169835, -0.22011823, -0.14853812, -0.10537068, -0.10660638, -0.13427601};
float SS_servo6[] = {0.23090617, 0.21414313, 0.19262973, 0.17867407, 0.16583603, 0.15425167, 0.14415623, 0.13406079, 0.12396534, 0.1138699 , 0.10377446, 0.09367902, 0.08358358, 0.0783307 , 0.07314513, 0.06795955, 0.06277398, 0.05758841, 0.05322168, 0.05022554, 0.04886168, 0.04734756, 0.04371465, 0.03955299, 0.03456803, 0.02953625, 0.02671696, 0.02819669, 0.0356535 , 0.06293776, 0.09759025, 0.13731676, 0.17694045, 0.21656414, 0.25528519, 0.29349066, 0.32347206, 0.3413319 , 0.3492757 , 0.34836932, 0.34156527, 0.32929614, 0.3145654 , 0.29315073, 0.26819226, 0.23962943, 0.22859572, 0.22515035, 0.22144019, 0.21782868, 0.21370008, 0.20964345, 0.20587583, 0.20260905, 0.20035625, 0.19790531, 0.19532065, 0.19200949, 0.18956517, 0.18692337, 0.18493561, 0.18310565, 0.18265328, 0.18684763, 0.19322243, 0.19591024, 0.18806676, 0.17325817, 0.16502897, 0.15910913, 0.15655099, 0.15519867, 0.15874472, 0.16014938, 0.16022139, 0.1581616 , 0.15368044, 0.15180597, 0.15147778, 0.15114959, 0.1508214 , 0.15612563, 0.1676478 , 0.17916998, 0.19356735, 0.2098336 , 0.2237853 };
float SS_servo7[] = {-0.25245003, -0.22949751, -0.20470973, -0.19108398, -0.18018099, -0.17029623, -0.16162078, -0.15294534, -0.14426989, -0.13559445, -0.126919, -0.11824356, -0.10956811, -0.10782369, -0.10617561, -0.10452753, -0.10287944, -0.10123136, -0.10066713, -0.10064333, -0.10668674, -0.11018332, -0.11006438, -0.10772289, -0.10195826, -0.10023838, -0.09967418, -0.10809532, -0.13318523, -0.19530159, -0.2721342 , -0.36359235, -0.45479659, -0.54600083, -0.63135413, -0.71463419, -0.76896968, -0.77406547, -0.74277438, -0.68274763, -0.60609378, -0.51262531, -0.42346045, -0.32250482, -0.21837226, -0.1283981 , -0.10915306, -0.11125281, -0.11010298, -0.10936396, -0.10707795, -0.10509626, -0.10390009, -0.10390251, -0.10633153, -0.10665455, -0.10639042, -0.10626265, -0.10421925, -0.10556512, -0.10467208, -0.10536425, -0.1082202 , -0.12096049, -0.13758663, -0.1457621 , -0.13505716, -0.1113299 , -0.09780705, -0.08989823, -0.087563  , -0.08744549, -0.09633691, -0.10123815, -0.10282521, -0.1004269 , -0.09266494, -0.08984804, -0.08998602, -0.090124  , -0.09026197, -0.10133931, -0.12449325, -0.14764719, -0.17701051, -0.21149882, -0.23775759};

int node=0;
int first=0;
int input=0;
int end_time=0;
int time_step=120000;
int steps = sizeof(SS_servo0)/sizeof(SS_servo0[0]);
int one_print = 0;

// -------------------Joint configurations-------------------
int servo0=0;
int servo0_deg=0;
int servo1=0;
int servo1_deg=0;
int servo2=0;
int servo2_deg=0;
int servo3=0;
int servo3_deg=0;
int servo4=0;
int servo4_deg=0;
int servo5=0;
int servo5_deg=0;
int servo6=0;
int servo6_deg=0;
int servo7=0;
int servo7_deg=0;

void setup() {
  Serial.begin(115200);
  pca9685.begin();

  pca9685.setOscillatorFrequency(27000000); //Value between 24MHz and 27MHz, tuned for this setup
  pca9685.setPWMFreq(SERVO_FREQ);
  delay (1000);

  servo0_deg=SS_servo0[0]/3.14159265*180;
  servo0=map(servo0_deg,-38,90,2200,1030);
  servo1_deg=SS_servo1[0]/3.14159265*180;
  servo1=map(servo1_deg,-90,90,2600,950);
  servo2_deg=SS_servo2[0]/3.14159265*180;
  servo2=map(servo2_deg,-38,90,1510,2730);
  servo3_deg=SS_servo3[0]/3.14159265*180;
  servo3=map(servo3_deg,-90,90,1100,2700);
  servo4_deg=SS_servo4[0]/3.14159265*180;
  servo4=map(servo4_deg,-90,38,2700,1500);
  servo5_deg=SS_servo5[0]/3.14159265*180;
  servo5=map(servo5_deg,-90,90,2600,930);
  servo6_deg=SS_servo6[0]/3.14159265*180;
  servo6=map(servo6_deg,-90,38,850,2250);
  servo7_deg=SS_servo7[0]/3.14159265*180;
  servo7=map(servo7_deg,-90,90,920,2620);
        
  pca9685.setPWM(SER0,0,servo0);
  pca9685.setPWM(SER1,0,servo1);
  pca9685.setPWM(SER2,0,servo2);
  pca9685.setPWM(SER3,0,servo3);
  pca9685.setPWM(SER4,0,servo4);
  pca9685.setPWM(SER5,0,servo5);
  pca9685.setPWM(SER6,0,servo6);
  pca9685.setPWM(SER7,0,servo7);

  Serial.print("Node:");
  Serial.println(node);
  Serial.print("servo0 -> rads:");
  Serial.print(SS_servo0[node]);
  Serial.print("        deg:");
  Serial.print(servo0_deg);
  Serial.print("        us:");
  Serial.println(servo0);
  Serial.print("servo1 -> rads:");
  Serial.print(SS_servo1[node]);
  Serial.print("        deg:");
  Serial.print(servo1_deg);
  Serial.print("        us:");
  Serial.println(servo1);
  Serial.print("servo2 -> rads:");
  Serial.print(SS_servo2[node]);
  Serial.print("        deg:");
  Serial.print(servo2_deg);
  Serial.print("        us:");
  Serial.println(servo2);
  Serial.print("servo3 -> rads:");
  Serial.print(SS_servo3[node]);
  Serial.print("        deg:");
  Serial.print(servo3_deg);
  Serial.print("        us:");
  Serial.println(servo3);
  Serial.print("servo4 -> rads:");
  Serial.print(SS_servo4[node]);
  Serial.print("        deg:");
  Serial.print(servo4_deg);
  Serial.print("        us:");
  Serial.println(servo4);
  Serial.print("servo5 -> rads:");
  Serial.print(SS_servo5[node]);
  Serial.print("        deg:");
  Serial.print(servo5_deg);
  Serial.print("        us:");
  Serial.println(servo5);
  Serial.print("servo6 -> rads:");
  Serial.print(SS_servo6[node]);
  Serial.print("        deg:");
  Serial.print(servo6_deg);
  Serial.print("        us:");
  Serial.println(servo6);
  Serial.print("servo7 -> rads:");
  Serial.print(SS_servo7[node]);
  Serial.print("        deg:");
  Serial.print(servo7_deg);
  Serial.print("        us:");
  Serial.println(servo7);

  Serial.println("10");
  delay(1000);
  Serial.println("9");
  delay(1000);
  Serial.println("8");
  delay(1000);
  Serial.println("7");
  delay(1000);
  Serial.println("6");
  delay(1000);
  Serial.println("5");
  delay(1000);
  Serial.println("4");
  delay(1000);
  Serial.println("3");
  delay(1000);
  Serial.println("2");
  delay(1000);
  Serial.println("1");
  delay(1000);

}

void loop() 
{
  if(Serial.available()>0)
  {
    first=Serial.read();
    if(first=='2')
    {
      input=2;
      node=0;
      one_print=1;
    }
    if(first=='1')
    {
      input=1;
      node=0;
      one_print=1;
    }
    if(first=='0')
    {
      input=0;
    }
  }
  if(input==1 or input==2)
  {
      if(esp_timer_get_time()>=end_time)
      {
        servo0_deg=SS_servo0[node]/3.14159265*180;
        servo0=map(servo0_deg,-38,90,2200,1030);
        servo1_deg=SS_servo1[node]/3.14159265*180;
        servo1=map(servo1_deg,-90,90,2600,950);
        servo2_deg=SS_servo2[node]/3.14159265*180;
        servo2=map(servo2_deg,-38,90,1510,2730);
        servo3_deg=SS_servo3[node]/3.14159265*180;
        servo3=map(servo3_deg,-90,90,1100,2700);
        servo4_deg=SS_servo4[node]/3.14159265*180;
        servo4=map(servo4_deg,-90,38,2700,1500);
        servo5_deg=SS_servo5[node]/3.14159265*180;
        servo5=map(servo5_deg,-90,90,2600,930);
        servo6_deg=SS_servo6[node]/3.14159265*180;
        servo6=map(servo6_deg,-90,38,850,2250);
        servo7_deg=SS_servo7[node]/3.14159265*180;
        servo7=map(servo7_deg,-90,90,920,2620);
        
        pca9685.setPWM(SER0,0,servo0);
        pca9685.setPWM(SER1,0,servo1);
        pca9685.setPWM(SER2,0,servo2);
        pca9685.setPWM(SER3,0,servo3);
        pca9685.setPWM(SER4,0,servo4);
        pca9685.setPWM(SER5,0,servo5);
        pca9685.setPWM(SER6,0,servo6);
        pca9685.setPWM(SER7,0,servo7);
        
        node+=1;
        if(node>=steps and input==1)
        {
          Serial.print("Input:");
          Serial.println(input);
          node=0;
        }
        if(node>=steps and input==2)
        {
          Serial.print("Input:");
          Serial.println(input);
          input=0;
        }
         end_time=esp_timer_get_time()+time_step;
      }
   }

  if(input == 0)
  {        
        pca9685.setPWM(SER0,0,servo0);
        pca9685.setPWM(SER1,0,servo1);
        pca9685.setPWM(SER2,0,servo2);
        pca9685.setPWM(SER3,0,servo3);
        pca9685.setPWM(SER4,0,servo4);
        pca9685.setPWM(SER5,0,servo5);
        pca9685.setPWM(SER6,0,servo6);
        pca9685.setPWM(SER7,0,servo7);

        if(one_print==1)
        {
          Serial.print("Input:");
          Serial.println(input);
          Serial.print("Node:");
          Serial.println(node);
          Serial.print("servo0 -> rads:");
          Serial.print(SS_servo0[node]);
          Serial.print("        deg:");
          Serial.print(servo0_deg);
          Serial.print("        us:");
          Serial.println(servo0);
          Serial.print("servo1 -> rads:");
          Serial.print(SS_servo1[node]);
          Serial.print("        deg:");
          Serial.print(servo1_deg);
          Serial.print("        us:");
          Serial.println(servo1);
          Serial.print("servo2 -> rads:");
          Serial.print(SS_servo2[node]);
          Serial.print("        deg:");
          Serial.print(servo2_deg);
          Serial.print("        us:");
          Serial.println(servo2);
          Serial.print("servo3 -> rads:");
          Serial.print(SS_servo3[node]);
          Serial.print("        deg:");
          Serial.print(servo3_deg);
          Serial.print("        us:");
          Serial.println(servo3);
          Serial.print("servo4 -> rads:");
          Serial.print(SS_servo4[node]);
          Serial.print("        deg:");
          Serial.print(servo4_deg);
          Serial.print("        us:");
          Serial.println(servo4);
          Serial.print("servo5 -> rads:");
          Serial.print(SS_servo5[node]);
          Serial.print("        deg:");
          Serial.print(servo5_deg);
          Serial.print("        us:");
          Serial.println(servo5);
          Serial.print("servo6 -> rads:");
          Serial.print(SS_servo6[node]);
          Serial.print("        deg:");
          Serial.print(servo6_deg);
          Serial.print("        us:");
          Serial.println(servo6);
          Serial.print("servo7 -> rads:");
          Serial.print(SS_servo7[node]);
          Serial.print("        deg:");
          Serial.print(servo7_deg);
          Serial.print("        us:");
          Serial.println(servo7);
          one_print=0;
        }
  
  }
}
