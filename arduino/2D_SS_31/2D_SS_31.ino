// HOW TO:
// ------------------------------
// Serial input = 2 -> Steps through gait sequence once and stops at the end.
// Serial input = 1 -> Steps through gait sequence in a loop.
// Serial input = 0 -> Stops infinite loop at the node where it is at that moment

//Gait template
#include <Wire.h>
#include <Adafruit_PWMServoDriver.h>

Adafruit_PWMServoDriver pca9685 = Adafruit_PWMServoDriver();

#define SERVO_FREQ 300
#define SER0 0 //Hip 1
#define SER1 1 //Knee 1
#define SER2 2 //Hip 2
#define SER3 3 //Knee 2
#define SER4 4 //Hip 3
#define SER5 5 //Knee 3
#define SER6 6 //Hip 4
#define SER7 7 //Knee 4

// Insert servo angles here:
// For 3D gaits, these angles are obtained from linearisation.py
// For 2D gaits, these angles are obtained from 2D_trajectory_reader.py
float SS_servo0[] = {-6.20289405e-02, -6.21088772e-02, -6.23004549e-02, -6.37583482e-02, -6.54954547e-02, -6.72325612e-02, -6.89696677e-02, -6.67143692e-02, -6.34560571e-02, -6.01977450e-02, -5.69394329e-02, -5.36811208e-02, -5.04228087e-02, -4.71644966e-02, -4.39061845e-02, -4.06478724e-02, -3.73895603e-02, -3.41312482e-02, -3.08729361e-02, -2.72853672e-02, -2.03916126e-02, -1.34978580e-02, -6.60410335e-03,  2.89651263e-04,  7.18340588e-03,  1.40771605e-02,  2.09709151e-02,  2.78646697e-02,  3.47584243e-02,  4.09783077e-02,  4.71063373e-02,  5.32343669e-02,  5.93623966e-02,  6.35670324e-02,  6.12920918e-02,  5.90171512e-02,  5.67422107e-02,  5.44672701e-02,  5.21923295e-02,  4.99173889e-02,  4.76424483e-02,  4.53675077e-02,  4.30925671e-02,  4.08176266e-02,  3.85426860e-02,  3.62677454e-02,  3.39928048e-02,  3.17178642e-02,  2.90754011e-02,  2.61111350e-02,  2.31468689e-02,  2.01826029e-02,  1.72183368e-02,  1.42540707e-02,  1.12898046e-02,  8.32553851e-03,  5.36127242e-03,  2.39700633e-03, -5.67259753e-04,  2.03931199e-03,  5.38756631e-03,  8.73582064e-03,  1.20840750e-02,  1.25927054e-02,  1.17440850e-02,  1.08954647e-02,  1.00468444e-02,  9.19822403e-03,  8.34960369e-03,  7.50098335e-03,  6.65236302e-03,  5.80374268e-03,  4.95512234e-03,  4.10650200e-03,  3.25788167e-03,  2.40926133e-03,  1.62556223e-05, -4.81610801e-03, -9.64847163e-03, -1.44808353e-02, -1.93131989e-02, -2.41455625e-02, -2.89779261e-02, -3.38102898e-02, -3.86426534e-02, -4.34750170e-02, -4.84408703e-02, -5.21936723e-02, -5.46219957e-02, -5.58999025e-02, -5.62303197e-02, -5.61768154e-02, -5.64809772e-02, -5.70205718e-02, -5.77867302e-02, -5.87651930e-02, -5.99491292e-02, -6.11157924e-02, -6.16528056e-02, -6.17651556e-02, -6.19338781e-02};
float SS_servo1[] = { 0.01039777,  0.00988287,  0.00844579,  0.00927621,  0.01062206,  0.01196791,  0.01331375,  0.02322819,  0.03529532,  0.04736245,  0.05942958,  0.07149671,  0.08356383,  0.09563096,  0.10769809,  0.11976522,  0.13183235,  0.14389948,  0.15596661,  0.16652855,  0.16197639,  0.15742423,  0.15287207,  0.14831992,  0.14376776,  0.1392156 ,  0.13466344,  0.13011128,  0.12555912,  0.1069654 ,  0.0864577 ,  0.06595   ,  0.0454423 ,  0.02939519,  0.02837502,  0.02735485,  0.02633469,  0.02531452,  0.02429435,  0.02327418,  0.02225401,  0.02123384,  0.02021367,  0.0191935 ,  0.01817333,  0.01715316,  0.016133  ,  0.01511283,  0.01370749,  0.0119649 ,  0.01022231,  0.00847971,  0.00673712,  0.00499453,  0.00325194,  0.00150935, -0.00023324, -0.00197583, -0.00371843, -0.01555242, -0.02872994, -0.04190747, -0.05508499, -0.06055193, -0.06233346, -0.06411499, -0.06589652, -0.06767805, -0.06945957, -0.0712411 , -0.07302263, -0.07480416, -0.07658568, -0.07836721, -0.08014874, -0.08193027, -0.07969413, -0.07111209, -0.06253005, -0.05394801, -0.04536597, -0.03678393, -0.02820189, -0.01961985, -0.01103781, -0.00245577,  0.00585077,  0.01165467,  0.01490376,  0.01592849,  0.01512068,  0.0135274 ,  0.01254359,  0.01214372,  0.01221647,  0.01272528,  0.01365004,  0.01450143,  0.01402571,  0.01259824,  0.01123889};
float SS_servo2[] = {-0.07838997, -0.07812125, -0.07685735, -0.074273  , -0.07153547, -0.06879794, -0.0660604 , -0.06665604, -0.06808907, -0.06952211, -0.07095514, -0.07238817, -0.07382121, -0.07525424, -0.07668728, -0.07812031, -0.07955334, -0.08098638, -0.08241941, -0.08394949, -0.0864541 , -0.0889587 , -0.09146331, -0.09396792, -0.09647252, -0.09897713, -0.10148173, -0.10398634, -0.10649094, -0.10230158, -0.09719977, -0.09209797, -0.08699617, -0.08154508, -0.0749173 , -0.06828953, -0.06166175, -0.05503398, -0.0484062 , -0.04177843, -0.03515065, -0.02852287, -0.0218951 , -0.01526732, -0.00863955, -0.00201177,  0.004616  ,  0.01124378,  0.0140241 ,  0.01343558,  0.01284706,  0.01225855,  0.01167003,  0.01108151,  0.01049299,  0.00990448,  0.00931596,  0.00872744,  0.00813892,  0.00417855, -0.00023074, -0.00464002, -0.00904931, -0.01166622, -0.01342643, -0.01518663, -0.01694684, -0.01870705, -0.02046726, -0.02222746, -0.02398767, -0.02574788, -0.02750808, -0.02926829, -0.0310285 , -0.03278871, -0.03436425, -0.03564813, -0.03693201, -0.03821588, -0.03949976, -0.04078364, -0.04206752, -0.04335139, -0.04463527, -0.04591915, -0.04785334, -0.05039457, -0.05357073, -0.05762888, -0.06286532, -0.06857213, -0.07263244, -0.07491765, -0.0756243 , -0.0749675 , -0.07324219, -0.071725  , -0.07285399, -0.07575584, -0.07789531};
float SS_servo3[] = { 0.05050322,  0.04930748,  0.04502461,  0.0376855 ,  0.02995909,  0.02223267,  0.01450626,  0.01292294,  0.01288295,  0.01284296,  0.01280297,  0.01276298,  0.01272299,  0.012683  ,  0.01264301,  0.01260302,  0.01256302,  0.01252303,  0.01248304,  0.01236607,  0.01147606,  0.01058605,  0.00969605,  0.00880604,  0.00791603,  0.00702602,  0.00613601,  0.005246  ,  0.004356  , -0.00789172, -0.02168758, -0.03548345, -0.04927931, -0.06089799, -0.06518212, -0.06946625, -0.07375038, -0.07803451, -0.08231864, -0.08660277, -0.0908869 , -0.09517103, -0.09945516, -0.10373929, -0.10802343, -0.11230756, -0.11659169, -0.12087582, -0.11687403, -0.10561708, -0.09436013, -0.08310318, -0.07184623, -0.06058927, -0.04933232, -0.03807537, -0.02681842, -0.01556147, -0.00430452, -0.00126227,  0.0006863 ,  0.00263488,  0.00458345,  0.00510951,  0.00495566,  0.0048018 ,  0.00464794,  0.00449409,  0.00434023,  0.00418637,  0.00403252,  0.00387866,  0.00372481,  0.00357095,  0.00341709,  0.00326324,  0.00347705,  0.00427161,  0.00506617,  0.00586073,  0.00665529,  0.00744985,  0.00824441,  0.00903897,  0.00983353,  0.01062809,  0.01279295,  0.01622634,  0.02094145,  0.02740928,  0.03620333,  0.04588007,  0.05224242,  0.05525522,  0.05521033,  0.05251989,  0.0477533 ,  0.04335409,  0.04403687,  0.04806702,  0.05056331};
float SS_servo4[] = { 0.0541395 ,  0.0542886 ,  0.05394498,  0.05108315,  0.04784784,  0.04461253,  0.04137722,  0.03954493,  0.03806512,  0.03658531,  0.0351055 ,  0.03362569,  0.03214588,  0.03066607,  0.02918626,  0.02770645,  0.02622664,  0.02474683,  0.02326702,  0.02159058,  0.01793962,  0.01428867,  0.01063771,  0.00698676,  0.0033358 , -0.00031515, -0.00396611, -0.00761706, -0.01126802, -0.01516074, -0.01908642, -0.0230121 , -0.02693778, -0.0306069 , -0.03341169, -0.03621649, -0.03902129, -0.04182609, -0.04463089, -0.04743568, -0.05024048, -0.05304528, -0.05585008, -0.05865488, -0.06145967, -0.06426447, -0.06706927, -0.06987407, -0.07312075, -0.07675434, -0.08038794, -0.08402153, -0.08765513, -0.09128873, -0.09492232, -0.09855592, -0.10218951, -0.10582311, -0.1094567 , -0.10798954, -0.10584328, -0.10369702, -0.10155076, -0.09562276, -0.08788719, -0.08015163, -0.07241607, -0.06468051, -0.05694494, -0.04920938, -0.04147382, -0.03373826, -0.02600269, -0.01826713, -0.01053157, -0.00279601,  0.00399384,  0.00928994,  0.01458604,  0.01988214,  0.02517823,  0.03047433,  0.03577043,  0.04106652,  0.04636262,  0.05165872,  0.05632877,  0.05955638,  0.0613275 ,  0.06172858,  0.06091054,  0.05911211,  0.0570136 ,  0.05564393,  0.05498848,  0.05489835,  0.05492504,  0.05433332,  0.05327425,  0.05272167,  0.05317842};
float SS_servo5[] = {-0.02619927, -0.02656531, -0.02573042, -0.0219689 , -0.01799604, -0.01402318, -0.01005032, -0.00920817, -0.00915256, -0.00909694, -0.00904133, -0.00898572, -0.0089301 , -0.00887449, -0.00881888, -0.00876326, -0.00870765, -0.00865204, -0.00859642, -0.00842043, -0.00703573, -0.00565102, -0.00426631, -0.0028816 , -0.0014969 , -0.00011219,  0.00127252,  0.00265723,  0.00404194,  0.00351731,  0.00273243,  0.00194755,  0.00116266,  0.00056441,  0.00059487,  0.00062533,  0.00065579,  0.00068624,  0.0007167 ,  0.00074716,  0.00077762,  0.00080808,  0.00083854,  0.000869  ,  0.00089946,  0.00092991,  0.00096037,  0.00099083,  0.00075778,  0.00029399, -0.00016979, -0.00063358, -0.00109736, -0.00156115, -0.00202494, -0.00248872, -0.00295251, -0.00341629, -0.00388008, -0.01168004, -0.02045671, -0.02923339, -0.03801006, -0.04394539, -0.04852265, -0.0530999 , -0.05767716, -0.06225442, -0.06683167, -0.07140893, -0.07598618, -0.08056344, -0.0851407 , -0.08971795, -0.09429521, -0.09887247, -0.09760421, -0.08710297, -0.07660173, -0.06610049, -0.05559925, -0.04509801, -0.03459678, -0.02409554, -0.0135943 , -0.00309306, -0.0083612 , -0.0162217 , -0.02119064, -0.02345078, -0.02330339, -0.0212714 , -0.01874264, -0.01751731, -0.01766088, -0.01889057, -0.02033507, -0.02060832, -0.02006112, -0.0206256 , -0.02320783};
float SS_servo6[] = { 0.05229144,  0.05160844,  0.05018395,  0.04915593,  0.04812967,  0.0471034 ,  0.04607713,  0.04336556,  0.04023059,  0.03709562,  0.03396065,  0.03082568,  0.02769071,  0.02455573,  0.02142076,  0.01828579,  0.01515082,  0.01201585,  0.00888088,  0.00589386,  0.00439254,  0.00289122,  0.0013899 , -0.00011142, -0.00161274, -0.00311406, -0.00461538, -0.0061167 , -0.00761802, -0.0029316 ,  0.00259824,  0.00812809,  0.01365794,  0.01906964,  0.0240833 ,  0.02909697,  0.03411064,  0.03912431,  0.04413798,  0.04915165,  0.05416532,  0.05917899,  0.06419266,  0.06920633,  0.07422   ,  0.07923367,  0.08424734,  0.08926101,  0.09211816,  0.09308706,  0.09405596,  0.09502486,  0.09599377,  0.09696267,  0.09793157,  0.09890047,  0.09986937,  0.10083827,  0.10180718,  0.09945153,  0.09665327,  0.09385501,  0.09105675,  0.08902815,  0.08736743,  0.08570671,  0.08404599,  0.08238527,  0.08072456,  0.07906384,  0.07740312,  0.0757424 ,  0.07408168,  0.07242096,  0.07076024,  0.06909952,  0.06763102,  0.06646614,  0.06530127,  0.06413639,  0.06297151,  0.06180663,  0.06064175,  0.05947687,  0.05831199,  0.05714711,  0.0561224 ,  0.0555787 ,  0.05543211,  0.05558791,  0.05602744,  0.05678705,  0.05765593,  0.05791453,  0.05743365,  0.05639636,  0.05538423,  0.05511667,  0.05525778,  0.0548109 ,  0.05357068};
float SS_servo7[] = {-0.02281669, -0.0221504 , -0.02117209, -0.02143599, -0.02178987, -0.02214375, -0.02249763, -0.01993364, -0.0166366 , -0.01333956, -0.01004252, -0.00674548, -0.00344844, -0.0001514 ,  0.00314564,  0.00644268,  0.00973971,  0.01303675,  0.01633379,  0.01907634,  0.01625096,  0.01342559,  0.01060022,  0.00777484,  0.00494947,  0.0021241 , -0.00070127, -0.00352665, -0.00635202, -0.0274402 , -0.05101773, -0.07459527, -0.09817281, -0.11544598, -0.11148085, -0.10751573, -0.1035506 , -0.09958548, -0.09562035, -0.09165523, -0.0876901 , -0.08372498, -0.07975985, -0.07579473, -0.0718296 , -0.06786448, -0.06389935, -0.05993423, -0.05537236, -0.05028799, -0.04520362, -0.04011925, -0.03503488, -0.0299505 , -0.02486613, -0.01978176, -0.01469739, -0.00961302, -0.00452865, -0.00502129, -0.00625643, -0.00749158, -0.00872672, -0.00937013, -0.00973071, -0.01009129, -0.01045186, -0.01081244, -0.01117302, -0.0115336 , -0.01189418, -0.01225476, -0.01261533, -0.01297591, -0.01333649, -0.01369707, -0.01370061, -0.01314022, -0.01257984, -0.01201945, -0.01145906, -0.01089867, -0.01033828, -0.00977789, -0.0092175 , -0.00865712, -0.00827386, -0.00875193, -0.0099682 , -0.01174932, -0.01406413, -0.01703953, -0.02031925, -0.02228107, -0.02276629, -0.02214194, -0.02155301, -0.02246082, -0.02426283, -0.02503412, -0.02429455};

int node=0;
int first=0;
int input=0;
int end_time=0;
int time_step=50000;
int steps = sizeof(SS_servo0)/sizeof(SS_servo0[0]);
int one_print = 0;

// -------------------Joint configurations-------------------
int servo0=0;
int servo0_deg=0;
int servo1=0;
int servo1_deg=0;
int servo2=0;
int servo2_deg=0;
int servo3=0;
int servo3_deg=0;
int servo4=0;
int servo4_deg=0;
int servo5=0;
int servo5_deg=0;
int servo6=0;
int servo6_deg=0;
int servo7=0;
int servo7_deg=0;

void setup() {
  Serial.begin(115200);
  pca9685.begin();

  pca9685.setOscillatorFrequency(27000000); //Value between 24MHz and 27MHz, tuned for this setup
  pca9685.setPWMFreq(SERVO_FREQ);
  delay (1000);

  servo0_deg=SS_servo0[0]/3.14159265*180;
        servo0=map(servo0_deg,-38,90,2200,1030);
        servo1_deg=SS_servo1[0]/3.14159265*180;
        servo1=map(servo1_deg,-90,90,2600,950);
        servo2_deg=SS_servo2[0]/3.14159265*180;
        servo2=map(servo2_deg,-37,90,1500,2670);
        servo3_deg=SS_servo3[0]/3.14159265*180;
        servo3=map(servo3_deg,-90,90,1100,2700);
        servo4_deg=SS_servo4[0]/3.14159265*180;
        servo4=map(servo4_deg,-90,38,2700,1500);
        servo5_deg=SS_servo5[0]/3.14159265*180;
        servo5=map(servo5_deg,-90,90,2600,930);
        servo6_deg=SS_servo6[0]/3.14159265*180;
        servo6=map(servo6_deg,-90,38,850,2250);
        servo7_deg=SS_servo7[0]/3.14159265*180;
        servo7=map(servo7_deg,-90,90,920,2620);
        
        pca9685.setPWM(SER0,0,servo0);
        pca9685.setPWM(SER1,0,servo1);
        pca9685.setPWM(SER2,0,servo2);
        pca9685.setPWM(SER3,0,servo3);
        pca9685.setPWM(SER4,0,servo4);
        pca9685.setPWM(SER5,0,servo5);
        pca9685.setPWM(SER6,0,servo6);
        pca9685.setPWM(SER7,0,servo7);

        Serial.print("Node:");
        Serial.println(node);
        Serial.print("servo0 -> rads:");
        Serial.print(SS_servo0[node]);
        Serial.print("        deg:");
        Serial.print(servo0_deg);
        Serial.print("        us:");
        Serial.println(servo0);
        Serial.print("servo1 -> rads:");
        Serial.print(SS_servo1[node]);
        Serial.print("        deg:");
        Serial.print(servo1_deg);
        Serial.print("        us:");
        Serial.println(servo1);
        Serial.print("servo2 -> rads:");
        Serial.print(SS_servo2[node]);
        Serial.print("        deg:");
        Serial.print(servo2_deg);
        Serial.print("        us:");
        Serial.println(servo2);
        Serial.print("servo3 -> rads:");
        Serial.print(SS_servo3[node]);
        Serial.print("        deg:");
        Serial.print(servo3_deg);
        Serial.print("        us:");
        Serial.println(servo3);
        Serial.print("servo4 -> rads:");
        Serial.print(SS_servo4[node]);
        Serial.print("        deg:");
        Serial.print(servo4_deg);
        Serial.print("        us:");
        Serial.println(servo4);
        Serial.print("servo5 -> rads:");
        Serial.print(SS_servo5[node]);
        Serial.print("        deg:");
        Serial.print(servo5_deg);
        Serial.print("        us:");
        Serial.println(servo5);
        Serial.print("servo6 -> rads:");
        Serial.print(SS_servo6[node]);
        Serial.print("        deg:");
        Serial.print(servo6_deg);
        Serial.print("        us:");
        Serial.println(servo6);
        Serial.print("servo7 -> rads:");
        Serial.print(SS_servo7[node]);
        Serial.print("        deg:");
        Serial.print(servo7_deg);
        Serial.print("        us:");
        Serial.println(servo7);

        Serial.println("10");
        delay(1000);
        Serial.println("9");
        delay(1000);
        Serial.println("8");
        delay(1000);
        Serial.println("7");
        delay(1000);
        Serial.println("6");
        delay(1000);
        Serial.println("5");
        delay(1000);
        Serial.println("4");
        delay(1000);
        Serial.println("3");
        delay(1000);
        Serial.println("2");
        delay(1000);
        Serial.println("1");
        delay(1000);

}

void loop() 
{
  if(Serial.available()>0)
  {
    first=Serial.read();
    if(first=='2')
    {
      input=2;
      node=0;
      one_print=1;
    }
    if(first=='1')
    {
      input=1;
      node=0;
      one_print=1;
    }
    if(first=='0')
    {
      input=0;
    }
  }
  if(input==1 or input==2)
  {
      if(esp_timer_get_time()>=end_time)
      {
        servo0_deg=SS_servo0[node]/3.14159265*180;
        servo0=map(servo0_deg,-38,90,2200,1030);
        servo1_deg=SS_servo1[node]/3.14159265*180;
        servo1=map(servo1_deg,-90,90,2600,950);
        servo2_deg=SS_servo2[node]/3.14159265*180;
        servo2=map(servo2_deg,-37,90,1500,2670);
        servo3_deg=SS_servo3[node]/3.14159265*180;
        servo3=map(servo3_deg,-90,90,1100,2700);
        servo4_deg=SS_servo4[node]/3.14159265*180;
        servo4=map(servo4_deg,-90,38,2700,1500);
        servo5_deg=SS_servo5[node]/3.14159265*180;
        servo5=map(servo5_deg,-90,90,2600,930);
        servo6_deg=SS_servo6[node]/3.14159265*180;
        servo6=map(servo6_deg,-90,38,850,2250);
        servo7_deg=SS_servo7[node]/3.14159265*180;
        servo7=map(servo7_deg,-90,90,920,2620);
        
        pca9685.setPWM(SER0,0,servo0);
        pca9685.setPWM(SER1,0,servo1);
        pca9685.setPWM(SER2,0,servo2);
        pca9685.setPWM(SER3,0,servo3);
        pca9685.setPWM(SER4,0,servo4);
        pca9685.setPWM(SER5,0,servo5);
        pca9685.setPWM(SER6,0,servo6);
        pca9685.setPWM(SER7,0,servo7);
        
        node+=1;
        if(node>=steps and input==1)
        {
          Serial.print("Input:");
          Serial.println(input);
          node=0;
        }
        if(node>=steps and input==2)
        {
          Serial.print("Input:");
          Serial.println(input);
          input=0;
        }
         end_time=esp_timer_get_time()+time_step;
      }
   }

  if(input == 0)
  {        
        pca9685.setPWM(SER0,0,servo0);
        pca9685.setPWM(SER1,0,servo1);
        pca9685.setPWM(SER2,0,servo2);
        pca9685.setPWM(SER3,0,servo3);
        pca9685.setPWM(SER4,0,servo4);
        pca9685.setPWM(SER5,0,servo5);
        pca9685.setPWM(SER6,0,servo6);
        pca9685.setPWM(SER7,0,servo7);

        if(one_print==1)
        {
          Serial.print("Input:");
          Serial.println(input);
          Serial.print("Node:");
          Serial.println(node);
          Serial.print("servo0 -> rads:");
          Serial.print(SS_servo0[node]);
          Serial.print("        deg:");
          Serial.print(servo0_deg);
          Serial.print("        us:");
          Serial.println(servo0);
          Serial.print("servo1 -> rads:");
          Serial.print(SS_servo1[node]);
          Serial.print("        deg:");
          Serial.print(servo1_deg);
          Serial.print("        us:");
          Serial.println(servo1);
          Serial.print("servo2 -> rads:");
          Serial.print(SS_servo2[node]);
          Serial.print("        deg:");
          Serial.print(servo2_deg);
          Serial.print("        us:");
          Serial.println(servo2);
          Serial.print("servo3 -> rads:");
          Serial.print(SS_servo3[node]);
          Serial.print("        deg:");
          Serial.print(servo3_deg);
          Serial.print("        us:");
          Serial.println(servo3);
          Serial.print("servo4 -> rads:");
          Serial.print(SS_servo4[node]);
          Serial.print("        deg:");
          Serial.print(servo4_deg);
          Serial.print("        us:");
          Serial.println(servo4);
          Serial.print("servo5 -> rads:");
          Serial.print(SS_servo5[node]);
          Serial.print("        deg:");
          Serial.print(servo5_deg);
          Serial.print("        us:");
          Serial.println(servo5);
          Serial.print("servo6 -> rads:");
          Serial.print(SS_servo6[node]);
          Serial.print("        deg:");
          Serial.print(servo6_deg);
          Serial.print("        us:");
          Serial.println(servo6);
          Serial.print("servo7 -> rads:");
          Serial.print(SS_servo7[node]);
          Serial.print("        deg:");
          Serial.print(servo7_deg);
          Serial.print("        us:");
          Serial.println(servo7);
          one_print=0;
        }
  
  }
}
