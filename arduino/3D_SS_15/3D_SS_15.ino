// HOW TO:
// ------------------------------
// Serial input = 2 -> Steps through gait sequence once and stops at the end.
// Serial input = 1 -> Steps through gait sequence in a loop.
// Serial input = 0 -> Stops infinite loop at the node where it is at that moment

//Gait template
#include <Wire.h>
#include <Adafruit_PWMServoDriver.h>

Adafruit_PWMServoDriver pca9685 = Adafruit_PWMServoDriver();

#define SERVO_FREQ 300
#define SER0 0 //Hip 1
#define SER1 1 //Knee 1
#define SER2 2 //Hip 2
#define SER3 3 //Knee 2
#define SER4 4 //Hip 3
#define SER5 5 //Knee 3
#define SER6 6 //Hip 4
#define SER7 7 //Knee 4



// Insert servo angles here:
// For 3D gaits, these angles are obtained from linearisation.py
// For 2D gaits, these angles are obtained from 2D_trajectory_reader.py
float SS_servo0[] = {-0.41908792, -0.41662288, -0.39136946, -0.37373377, -0.36129892, -0.37962262, -0.42979185, -0.45784699, -0.47806129, -0.49827559, -0.50414189, -0.48513853, -0.46613517, -0.42203544, -0.3846624 , -0.36609571, -0.35192825, -0.34418908, -0.33644992, -0.32871075, -0.32097159, -0.31911437, -0.32389667, -0.32867897, -0.33346127, -0.34537597, -0.36103248, -0.37425573, -0.36937563, -0.3599032 , -0.35043076, -0.34095833, -0.33129211, -0.29216125, -0.2530304 , -0.21389955, -0.17169145, -0.13553314, -0.13691344, -0.15913618, -0.1772483 , -0.19466544, -0.21121833, -0.22640047, -0.24158262, -0.25676476, -0.2719469 , -0.28868715, -0.30735309, -0.32601903, -0.34468497, -0.36973014, -0.37746351, -0.37608276, -0.36695074, -0.37764126, -0.36844604, -0.35816152, -0.36107412, -0.36398671, -0.3668993 , -0.36981189, -0.3751197 , -0.38578897, -0.39645825, -0.40712752, -0.4104853 , -0.41721043, -0.41801121, -0.41630128, -0.41113922, -0.40987313, -0.40860704, -0.40734096, -0.40607487, -0.40539772, -0.40669675, -0.40799579, -0.40929483, -0.4086624 , -0.40750806, -0.40900147, -0.41049488, -0.41198829, -0.4134817 , -0.41532544, -0.41834415, -0.42136287, -0.42438158, -0.42456036, -0.42001221, -0.41309799, -0.41457554, -0.42462667, -0.4346778 , -0.44472892, -0.45704692, -0.47093424, -0.48482155, -0.50277201, -0.51669213, -0.52294697, -0.51855472, -0.50252685, -0.51892166, -0.51578108, -0.52372923, -0.52417118, -0.51694934, -0.51520051, -0.49715432, -0.47115336, -0.45230683, -0.44006167, -0.43673684, -0.43341201, -0.43008718, -0.42676235, -0.42982178, -0.43886578, -0.44790979, -0.4569538 , -0.44038436};
float SS_servo1[] = {0.05638935, 0.05438827, 0.03388793, 0.09302927, 0.1375471 , 0.11516228, 0.16813718, 0.20128811, 0.22684147, 0.25239483, 0.26233496, 0.24521241, 0.22808985, 0.18945521, 0.17090058, 0.16240262, 0.15810677, 0.16043802, 0.16276927, 0.16510052, 0.16743177, 0.1718167 , 0.17851981, 0.18522293, 0.19192604, 0.20024949, 0.21616966, 0.23608564, 0.26920572, 0.30567532, 0.34214492, 0.37861452, 0.41523171, 0.47428926, 0.53334682, 0.59240437, 0.63867645, 0.61714769, 0.60262542, 0.63280509, 0.66000572, 0.69414228, 0.72968896, 0.76697247, 0.80425598, 0.84153949, 0.878823  , 0.92106249, 0.96942714, 1.01779178, 1.06615642, 1.1269824 , 1.16058838, 1.17252609, 1.16171107, 1.18204848, 1.15743066, 1.12775774, 1.11563203, 1.10350631, 1.09138059, 1.07925488, 1.06838455, 1.06032432, 1.05226409, 1.04420386, 1.04289613, 1.05061806, 1.03899073, 1.01984282, 0.99387872, 0.97604042, 0.95820211, 0.9403638 , 0.92252549, 0.9071764 , 0.90017991, 0.89318341, 0.88618692, 0.88250438, 0.88114128, 0.88488345, 0.88862561, 0.89236778, 0.89610994, 0.90072466, 0.90826578, 0.91580689, 0.92334801, 0.92561591, 0.91752517, 0.90325928, 0.90096453, 0.91464152, 0.92831851, 0.9419955 , 0.96329505, 0.98987156, 1.01644807, 1.05367012, 1.07644139, 1.07391372, 1.05216882, 0.99739974, 0.99375518, 0.94960945, 0.92910311, 0.89050282, 0.83962249, 0.80776851, 0.74075657, 0.65454294, 0.57172721, 0.50063559, 0.44583945, 0.39104331, 0.33624717, 0.28145104, 0.24108907, 0.21425766, 0.18742625, 0.16059483, 0.10274309};
float SS_servo2[] = {-0.42016066, -0.42167914, -0.43723539, -0.4278736 , -0.41697231, -0.38597225, -0.34898957, -0.32772417, -0.31199031, -0.29625644, -0.28837298, -0.29409676, -0.29982054, -0.32602036, -0.34685311, -0.35350543, -0.35930155, -0.3652695 , -0.37123745, -0.37720541, -0.38317336, -0.39238692, -0.40526413, -0.41814135, -0.43101856, -0.44451654, -0.44787904, -0.44655738, -0.45229357, -0.45982015, -0.46734673, -0.47487331, -0.48241819, -0.49274515, -0.50307211, -0.51339907, -0.5190106 , -0.52343705, -0.52266286, -0.50770978, -0.49317572, -0.48921649, -0.48690248, -0.48606604, -0.48522961, -0.48439318, -0.48355675, -0.48650358, -0.49412618, -0.50174879, -0.50937139, -0.51399619, -0.5015169 , -0.47218932, -0.43907091, -0.41004055, -0.38544167, -0.36175249, -0.33976195, -0.31777142, -0.29578089, -0.27379036, -0.25270831, -0.23365983, -0.21461136, -0.19556288, -0.16965308, -0.15669217, -0.146919  , -0.14086722, -0.13532513, -0.13164053, -0.12795594, -0.12427135, -0.12058675, -0.11678398, -0.11258467, -0.10838536, -0.10418605, -0.09917859, -0.09367172, -0.08736852, -0.08106532, -0.07476211, -0.06845891, -0.06163869, -0.05308445, -0.04453022, -0.03597598, -0.02488814, -0.01199487,  0.00123509,  0.01383798,  0.02668973,  0.03954148,  0.05239323,  0.06640048,  0.08120766,  0.09601484,  0.11653135,  0.12725883,  0.1368554 ,  0.15097205,  0.1324598 ,  0.11679575,  0.09730671,  0.0949604 ,  0.07809275,  0.06064384,  0.0762764 ,  0.07975656,  0.05750214,  0.02062251, -0.0173059 , -0.05604817, -0.09479044, -0.13353272, -0.17227499, -0.21081614, -0.24916877, -0.28752139, -0.32587402, -0.36964615};
float SS_servo3[] = {0.65329424, 0.65375337, 0.65845705, 0.61435696, 0.56913256, 0.48247878, 0.38781729, 0.33265159, 0.29201186, 0.25137212, 0.23297716, 0.25313946, 0.27330175, 0.33147207, 0.38475886, 0.40932342, 0.42924259, 0.44411652, 0.45899046, 0.4738644 , 0.48873834, 0.50400579, 0.51971744, 0.53542909, 0.55114074, 0.56291911, 0.55378467, 0.5343198 , 0.53341696, 0.53722281, 0.54102866, 0.54483451, 0.54867745, 0.55815973, 0.56764201, 0.57712429, 0.5807066 , 0.57639593, 0.5579746 , 0.51525453, 0.48026326, 0.46895872, 0.46271206, 0.46276996, 0.46282787, 0.46288577, 0.46294368, 0.47038529, 0.48695251, 0.50351973, 0.52008695, 0.53267115, 0.52039602, 0.48145952, 0.42716281, 0.37612532, 0.3255504 , 0.28111785, 0.26361265, 0.24610745, 0.22860225, 0.21109705, 0.21163173, 0.25254707, 0.2934624 , 0.33437774, 0.35932989, 0.33689193, 0.31412084, 0.30347283, 0.29795804, 0.29896768, 0.29997733, 0.30098697, 0.30199662, 0.30371034, 0.30778661, 0.31186288, 0.31593915, 0.32046776, 0.32472423, 0.32568871, 0.32665318, 0.32761765, 0.32858212, 0.32804105, 0.32245059, 0.31686014, 0.31126969, 0.29589426, 0.27306734, 0.24998176, 0.23431647, 0.22678635, 0.21925622, 0.2117261 , 0.20769891, 0.20609674, 0.20449457, 0.18110135, 0.15778433, 0.12993659, 0.09287798, 0.11434386, 0.1290568 , 0.14969281, 0.13943559, 0.15221269, 0.16448552, 0.11681211, 0.09065271, 0.09962879, 0.13316921, 0.16973803, 0.20943684, 0.24913566, 0.28883448, 0.3285333 , 0.3696945 , 0.41222654, 0.45475857, 0.49729061, 0.55381861};
float SS_servo4[] = {0.54176622, 0.54227258, 0.54746014, 0.52854467, 0.50781467, 0.49464263, 0.46833605, 0.44808806, 0.43007872, 0.41206938, 0.39786826, 0.39026799, 0.38266771, 0.38928788, 0.40516333, 0.40870833, 0.41058537, 0.41012923, 0.40967309, 0.40921695, 0.40876081, 0.40932791, 0.41105003, 0.41277215, 0.41449427, 0.41748535, 0.41754773, 0.41731866, 0.41501591, 0.41218712, 0.40935833, 0.40652955, 0.40371488, 0.4030463 , 0.40237772, 0.40170914, 0.40201387, 0.39878421, 0.3938966 , 0.39542118, 0.39510728, 0.39553791, 0.39383269, 0.38705314, 0.38027359, 0.37349405, 0.3667145 , 0.36969021, 0.38472254, 0.39975487, 0.4147872 , 0.43227083, 0.44491352, 0.447491  , 0.43097311, 0.42011634, 0.40925245, 0.4046378 , 0.41273035, 0.4208229 , 0.42891545, 0.437008  , 0.44850708, 0.46763136, 0.48675564, 0.50587993, 0.52215376, 0.51895091, 0.49537986, 0.47943561, 0.4654209 , 0.45153355, 0.43764619, 0.42375884, 0.40987148, 0.39756056, 0.3905394 , 0.38351823, 0.37649706, 0.37713472, 0.38036149, 0.37661024, 0.37285898, 0.36910773, 0.36535647, 0.36126282, 0.35602085, 0.35077889, 0.34553692, 0.33956388, 0.33058557, 0.31880353, 0.30545526, 0.29411654, 0.28277783, 0.27143912, 0.2683182 , 0.27088632, 0.27345444, 0.27234606, 0.25749835, 0.2349606 , 0.2173606 , 0.20439648, 0.18809074, 0.18947392, 0.20778218, 0.22204641, 0.25142588, 0.3297556 , 0.40872736, 0.4781778 , 0.53853971, 0.57982868, 0.59467662, 0.60952455, 0.62437248, 0.63922041, 0.62855156, 0.59396337, 0.55937518, 0.52478699, 0.5225097 };
float SS_servo5[] = {-0.12731714, -0.13081807, -0.16668386, -0.16052351, -0.15168714, -0.17127517, -0.1591136 , -0.14784841, -0.1375282 , -0.12720799, -0.11841099, -0.11225422, -0.10609745, -0.111193  , -0.1323528 , -0.1395748 , -0.14683901, -0.15375426, -0.1606695 , -0.16758474, -0.17449998, -0.18674761, -0.20501442, -0.22328123, -0.24154805, -0.26654375, -0.28951698, -0.31385049, -0.33385295, -0.35275675, -0.37166054, -0.39056434, -0.4094535 , -0.42611822, -0.44278294, -0.45944765, -0.47525486, -0.48784867, -0.50297221, -0.52808374, -0.54379067, -0.56203776, -0.57507663, -0.57560498, -0.57613334, -0.57666169, -0.57719004, -0.59350799, -0.62934049, -0.66517298, -0.70100547, -0.73657284, -0.75498711, -0.74964897, -0.71493967, -0.69750252, -0.68346016, -0.68723461, -0.73381924, -0.78040388, -0.82698851, -0.87357315, -0.92871267, -1.00300153, -1.07729039, -1.15157925, -1.19527641, -1.19561761, -1.16540023, -1.15210319, -1.14245463, -1.13753454, -1.13261445, -1.12769436, -1.12277427, -1.11973315, -1.12299693, -1.12626072, -1.12952451, -1.14176803, -1.1565111 , -1.15944016, -1.16236922, -1.16529827, -1.16822733, -1.16985661, -1.16712664, -1.16439668, -1.16166671, -1.15493215, -1.13975468, -1.1225098 , -1.10657529, -1.0940797 , -1.08158411, -1.06908852, -1.06988172, -1.07987453, -1.08986734, -1.08847808, -1.06175625, -1.02836728, -1.00625895, -1.00529103, -0.99719019, -1.03072352, -1.10809475, -1.12705217, -1.07404329, -1.00607873, -0.93611274, -0.8570585 , -0.79603365, -0.7246199 , -0.63764159, -0.55066327, -0.46368496, -0.37670665, -0.30051441, -0.234433  , -0.16835159, -0.10227018, -0.09938709};
float SS_servo6[] = { 0.36533458,  0.36421252,  0.35271748,  0.32360924,  0.30433144,  0.30765659,  0.30216696,  0.29729405,  0.29253486,  0.28777566,  0.28638009,  0.29081476,  0.29524943,  0.29845658,  0.29083153,  0.2855557 ,  0.28018565,  0.27243727,  0.26468888,  0.2569405 ,  0.24919212,  0.23839525,  0.22415727,  0.20991928,  0.1956813 ,  0.17954624,  0.16506174,  0.15397973,  0.14091813,  0.12735436,  0.11379059,  0.10022682,  0.08665482,  0.07183121,  0.05700761,  0.04218401,  0.02728849,  0.00576924, -0.02170457, -0.04129112, -0.03638887, -0.01440304,  0.00543155,  0.02073706,  0.03604258,  0.0513481 ,  0.06665361,  0.07622529,  0.07871045,  0.08119562,  0.08368078,  0.09374593,  0.12234199,  0.15561009,  0.17670357,  0.1942976 ,  0.23535198,  0.27313635,  0.29419468,  0.31525302,  0.33631136,  0.3573697 ,  0.37277675,  0.37553391,  0.37829108,  0.38104824,  0.39687143,  0.37690633,  0.34596689,  0.33218421,  0.32108529,  0.31143205,  0.3017788 ,  0.29212556,  0.28247231,  0.27405547,  0.26978739,  0.26551931,  0.26125123,  0.26065176,  0.26181114,  0.26314199,  0.26447285,  0.2658037 ,  0.26713456,  0.26868078,  0.2709493 ,  0.27321782,  0.27548634,  0.27827169,  0.27965835,  0.27846598,  0.27830198,  0.28246075,  0.28661952,  0.29077829,  0.2990198 ,  0.31008771,  0.32115563,  0.33516095,  0.35467869,  0.36718984,  0.37793697,  0.39875552,  0.4125809 ,  0.4179797 ,  0.42055874,  0.42031852,  0.40579981,  0.37971629,  0.36165309,  0.35916699,  0.36157019,  0.3621486 ,  0.35995305,  0.3577575 ,  0.35556196,  0.35336641,  0.35073071,  0.34768242,  0.34463413,  0.34158584,  0.35571225};
float SS_servo7[] = {-1.08498926, -1.08485299, -1.08345689, -1.05330332, -1.03756337, -1.0667722 , -1.06413867, -1.05289103, -1.03941397, -1.02593691, -1.0163417 , -1.01347496, -1.01060823, -1.00972323, -0.97808496, -0.94005393, -0.90790601, -0.88326654, -0.85862707, -0.8339876 , -0.80934813, -0.78720271, -0.76787259, -0.74854246, -0.72921233, -0.71259678, -0.69849087, -0.68630926, -0.66959586, -0.65173286, -0.63386986, -0.61600686, -0.59809403, -0.57260392, -0.54711382, -0.52162371, -0.4946864 , -0.45972079, -0.42037997, -0.39482972, -0.41144918, -0.44933509, -0.4797175 , -0.49726921, -0.51482092, -0.53237264, -0.54992435, -0.55191047, -0.53465889, -0.51740732, -0.50015574, -0.49732126, -0.52924686, -0.56122893, -0.56693301, -0.52200235, -0.47588058, -0.43267369, -0.39272533, -0.35277697, -0.31282861, -0.27288025, -0.24554428, -0.24644003, -0.24733579, -0.24823154, -0.27767053, -0.24527616, -0.19911269, -0.18587338, -0.17738323, -0.17288411, -0.16838499, -0.16388588, -0.15938676, -0.15517393, -0.15192176, -0.14866959, -0.14541741, -0.14320817, -0.14183001, -0.14274371, -0.14365741, -0.14457111, -0.1454848 , -0.14628376, -0.1466979 , -0.14711204, -0.14752618, -0.14845109, -0.14785977, -0.14533604, -0.14695784, -0.15655106, -0.16614429, -0.17573751, -0.19020983, -0.20805986, -0.22590989, -0.24468219, -0.28339119, -0.32269382, -0.3614301 , -0.4243704 , -0.47739545, -0.5126671 , -0.54208289, -0.57232754, -0.57469462, -0.54010059, -0.52509971, -0.55377472, -0.61044412, -0.66069421, -0.70061498, -0.74053574, -0.7804565 , -0.82037727, -0.86422765, -0.91176164, -0.95929564, -1.00682963, -1.0719349 };

int node=0;
int first=0;
int input=0;
int end_time=0;
int time_step=100000;
int steps = sizeof(SS_servo0)/sizeof(SS_servo0[0]);
int one_print = 0;

// -------------------Joint configurations-------------------
int servo0=0;
int servo0_deg=0;
int servo1=0;
int servo1_deg=0;
int servo2=0;
int servo2_deg=0;
int servo3=0;
int servo3_deg=0;
int servo4=0;
int servo4_deg=0;
int servo5=0;
int servo5_deg=0;
int servo6=0;
int servo6_deg=0;
int servo7=0;
int servo7_deg=0;

void setup() {
  Serial.begin(115200);
  pca9685.begin();

  pca9685.setOscillatorFrequency(27000000); //Value between 24MHz and 27MHz, tuned for this setup
  pca9685.setPWMFreq(SERVO_FREQ);
  delay (1000);

  servo0_deg=SS_servo0[0]/3.14159265*180;
  servo0=map(servo0_deg,-38,90,2200,1030);
  servo1_deg=SS_servo1[0]/3.14159265*180;
  servo1=map(servo1_deg,-90,90,2600,950);
  servo2_deg=SS_servo2[0]/3.14159265*180;
  servo2=map(servo2_deg,-38,90,1510,2730);
  servo3_deg=SS_servo3[0]/3.14159265*180;
  servo3=map(servo3_deg,-90,90,1100,2700);
  servo4_deg=SS_servo4[0]/3.14159265*180;
  servo4=map(servo4_deg,-90,38,2700,1500);
  servo5_deg=SS_servo5[0]/3.14159265*180;
  servo5=map(servo5_deg,-90,90,2600,930);
  servo6_deg=SS_servo6[0]/3.14159265*180;
  servo6=map(servo6_deg,-90,38,850,2250);
  servo7_deg=SS_servo7[0]/3.14159265*180;
  servo7=map(servo7_deg,-90,90,920,2620);
        
  pca9685.setPWM(SER0,0,servo0);
  pca9685.setPWM(SER1,0,servo1);
  pca9685.setPWM(SER2,0,servo2);
  pca9685.setPWM(SER3,0,servo3);
  pca9685.setPWM(SER4,0,servo4);
  pca9685.setPWM(SER5,0,servo5);
  pca9685.setPWM(SER6,0,servo6);
  pca9685.setPWM(SER7,0,servo7);

  Serial.print("Node:");
  Serial.println(node);
  Serial.print("servo0 -> rads:");
  Serial.print(SS_servo0[node]);
  Serial.print("        deg:");
  Serial.print(servo0_deg);
  Serial.print("        us:");
  Serial.println(servo0);
  Serial.print("servo1 -> rads:");
  Serial.print(SS_servo1[node]);
  Serial.print("        deg:");
  Serial.print(servo1_deg);
  Serial.print("        us:");
  Serial.println(servo1);
  Serial.print("servo2 -> rads:");
  Serial.print(SS_servo2[node]);
  Serial.print("        deg:");
  Serial.print(servo2_deg);
  Serial.print("        us:");
  Serial.println(servo2);
  Serial.print("servo3 -> rads:");
  Serial.print(SS_servo3[node]);
  Serial.print("        deg:");
  Serial.print(servo3_deg);
  Serial.print("        us:");
  Serial.println(servo3);
  Serial.print("servo4 -> rads:");
  Serial.print(SS_servo4[node]);
  Serial.print("        deg:");
  Serial.print(servo4_deg);
  Serial.print("        us:");
  Serial.println(servo4);
  Serial.print("servo5 -> rads:");
  Serial.print(SS_servo5[node]);
  Serial.print("        deg:");
  Serial.print(servo5_deg);
  Serial.print("        us:");
  Serial.println(servo5);
  Serial.print("servo6 -> rads:");
  Serial.print(SS_servo6[node]);
  Serial.print("        deg:");
  Serial.print(servo6_deg);
  Serial.print("        us:");
  Serial.println(servo6);
  Serial.print("servo7 -> rads:");
  Serial.print(SS_servo7[node]);
  Serial.print("        deg:");
  Serial.print(servo7_deg);
  Serial.print("        us:");
  Serial.println(servo7);

  Serial.println("10");
  delay(1000);
  Serial.println("9");
  delay(1000);
  Serial.println("8");
  delay(1000);
  Serial.println("7");
  delay(1000);
  Serial.println("6");
  delay(1000);
  Serial.println("5");
  delay(1000);
  Serial.println("4");
  delay(1000);
  Serial.println("3");
  delay(1000);
  Serial.println("2");
  delay(1000);
  Serial.println("1");
  delay(1000);

}

void loop() 
{
  if(Serial.available()>0)
  {
    first=Serial.read();
    if(first=='2')
    {
      input=2;
      node=0;
      one_print=1;
    }
    if(first=='1')
    {
      input=1;
      node=0;
      one_print=1;
    }
    if(first=='0')
    {
      input=0;
    }
  }
  if(input==1 or input==2)
  {
      if(esp_timer_get_time()>=end_time)
      {
        servo0_deg=SS_servo0[node]/3.14159265*180;
        servo0=map(servo0_deg,-38,90,2200,1030);
        servo1_deg=SS_servo1[node]/3.14159265*180;
        servo1=map(servo1_deg,-90,90,2600,950);
        servo2_deg=SS_servo2[node]/3.14159265*180;
        servo2=map(servo2_deg,-38,90,1510,2730);
        servo3_deg=SS_servo3[node]/3.14159265*180;
        servo3=map(servo3_deg,-90,90,1100,2700);
        servo4_deg=SS_servo4[node]/3.14159265*180;
        servo4=map(servo4_deg,-90,38,2700,1500);
        servo5_deg=SS_servo5[node]/3.14159265*180;
        servo5=map(servo5_deg,-90,90,2600,930);
        servo6_deg=SS_servo6[node]/3.14159265*180;
        servo6=map(servo6_deg,-90,38,850,2250);
        servo7_deg=SS_servo7[node]/3.14159265*180;
        servo7=map(servo7_deg,-90,90,920,2620);
        
        pca9685.setPWM(SER0,0,servo0);
        pca9685.setPWM(SER1,0,servo1);
        pca9685.setPWM(SER2,0,servo2);
        pca9685.setPWM(SER3,0,servo3);
        pca9685.setPWM(SER4,0,servo4);
        pca9685.setPWM(SER5,0,servo5);
        pca9685.setPWM(SER6,0,servo6);
        pca9685.setPWM(SER7,0,servo7);
        
        node+=1;
        if(node>=steps and input==1)
        {
          Serial.print("Input:");
          Serial.println(input);
          node=0;
        }
        if(node>=steps and input==2)
        {
          Serial.print("Input:");
          Serial.println(input);
          input=0;
        }
         end_time=esp_timer_get_time()+time_step;
      }
   }

  if(input == 0)
  {        
        pca9685.setPWM(SER0,0,servo0);
        pca9685.setPWM(SER1,0,servo1);
        pca9685.setPWM(SER2,0,servo2);
        pca9685.setPWM(SER3,0,servo3);
        pca9685.setPWM(SER4,0,servo4);
        pca9685.setPWM(SER5,0,servo5);
        pca9685.setPWM(SER6,0,servo6);
        pca9685.setPWM(SER7,0,servo7);

        if(one_print==1)
        {
          Serial.print("Input:");
          Serial.println(input);
          Serial.print("Node:");
          Serial.println(node);
          Serial.print("servo0 -> rads:");
          Serial.print(SS_servo0[node]);
          Serial.print("        deg:");
          Serial.print(servo0_deg);
          Serial.print("        us:");
          Serial.println(servo0);
          Serial.print("servo1 -> rads:");
          Serial.print(SS_servo1[node]);
          Serial.print("        deg:");
          Serial.print(servo1_deg);
          Serial.print("        us:");
          Serial.println(servo1);
          Serial.print("servo2 -> rads:");
          Serial.print(SS_servo2[node]);
          Serial.print("        deg:");
          Serial.print(servo2_deg);
          Serial.print("        us:");
          Serial.println(servo2);
          Serial.print("servo3 -> rads:");
          Serial.print(SS_servo3[node]);
          Serial.print("        deg:");
          Serial.print(servo3_deg);
          Serial.print("        us:");
          Serial.println(servo3);
          Serial.print("servo4 -> rads:");
          Serial.print(SS_servo4[node]);
          Serial.print("        deg:");
          Serial.print(servo4_deg);
          Serial.print("        us:");
          Serial.println(servo4);
          Serial.print("servo5 -> rads:");
          Serial.print(SS_servo5[node]);
          Serial.print("        deg:");
          Serial.print(servo5_deg);
          Serial.print("        us:");
          Serial.println(servo5);
          Serial.print("servo6 -> rads:");
          Serial.print(SS_servo6[node]);
          Serial.print("        deg:");
          Serial.print(servo6_deg);
          Serial.print("        us:");
          Serial.println(servo6);
          Serial.print("servo7 -> rads:");
          Serial.print(SS_servo7[node]);
          Serial.print("        deg:");
          Serial.print(servo7_deg);
          Serial.print("        us:");
          Serial.println(servo7);
          one_print=0;
        }
  
  }
}
